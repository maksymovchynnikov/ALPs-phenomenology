(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    581952,      11158]
NotebookOptionsPosition[    573980,      11016]
NotebookOutlinePosition[    574409,      11033]
CellTagsIndexPosition[    574366,      11030]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Full Lagrangian of ALP-meson interactions", "Title",
 CellChangeTimes->{{3.9487003183392506`*^9, 
  3.948700324642849*^9}},ExpressionUUID->"907b0487-7600-6248-a0d8-\
21d1842616c7"],

Cell[CellGroupData[{

Cell["Generate the Lagrangian or import it", "Chapter",
 CellChangeTimes->{{3.948700901047579*^9, 
  3.948700908296629*^9}},ExpressionUUID->"30fb3f8a-b47e-cb47-9f79-\
a691ef3b2e3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lagrfilename", "=", "\"\<Lagrangian-ALP-total\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "If\[Kappa]Inv"}], ",", 
    RowBox[{"lagrfilename", "=", 
     RowBox[{"lagrfilename", "<>", "\"\<-No-kappa-inv\>\""}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "IfPheavy"}], ",", 
    RowBox[{"lagrfilename", "=", 
     RowBox[{"lagrfilename", "<>", "\"\<-No-P-heavy\>\""}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lagrfilename", "=", 
  RowBox[{"lagrfilename", "<>", "\"\<.mx\>\""}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fLagr", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "//", "ParentDirectory"}], 
      ",", "\"\<phenomenology\>\"", ",", "lagrfilename"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ifExists", "=", 
   RowBox[{"FileExistsQ", "[", "fLagr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"ifExists", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genlagropt", "=", 
     RowBox[{"dropdownDialog", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Generate\>\"", ",", "\"\<Import\>\""}], "}"}], ",", 
       "\"\<Generate the total ALP-meson interaction Lagrangian from scratch, \
or import the precomputed one (if no changes in the interactions are made)?\>\
\""}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"genlagropt", "=", 
     RowBox[{"(", 
      RowBox[{"genlagropt", "==", "\"\<Generate\>\""}], ")"}]}]}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "infoDialog", "[", 
     "\"\<The Lagrangian for the ALPs has not been generated yet. Generating \
(takes a few minutes)...\>\"", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"genlagropt", "=", "True"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.948700917765375*^9, 3.948700933876272*^9}, {
  3.948701020033695*^9, 3.9487010719749146`*^9}, {3.9614703726256657`*^9, 
  3.961470507462919*^9}, {3.961470975708763*^9, 3.961471043267956*^9}, {
  3.961472700265896*^9, 3.9614727100472355`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"f500d63a-cd0b-8346-8d77-e58642651f7a"],

Cell[BoxData[
 FormBox["\<\"Lagrangian-ALP-total.mx\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{{3.948701058301403*^9, 3.948701088698471*^9}, 
   3.9487018031883507`*^9, 3.9487309664768963`*^9, 3.948735371775284*^9, 
   3.94895950364196*^9, 3.9489689548635025`*^9, 3.9489778522197456`*^9, 
   3.9614726813404083`*^9, 3.961472774896887*^9, 3.961473082332453*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"037fcb27-489f-3442-b60a-14c8f40d27a7"],

Cell[BoxData[
 FormBox["False", TraditionalForm]], "Output",
 CellChangeTimes->{{3.948701058301403*^9, 3.948701088698471*^9}, 
   3.9487018031883507`*^9, 3.9487309664768963`*^9, 3.948735371775284*^9, 
   3.94895950364196*^9, 3.9489689548635025`*^9, 3.9489778522197456`*^9, 
   3.9614726813404083`*^9, 3.961472774896887*^9, 3.961473084960497*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"daa9dbd2-1802-de4f-8479-f22205d9c14e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Various interactions with ALPs", "Chapter",
 CellChangeTimes->{{3.9448872132104225`*^9, 
  3.94488722302026*^9}},ExpressionUUID->"546a7601-472c-864e-bf50-\
1b9a3594cfaa"],

Cell[CellGroupData[{

Cell["Pure ChPT", "Section",
 CellChangeTimes->{{3.9486528191964054`*^9, 3.9486528215964775`*^9}, {
  3.9486532802335033`*^9, 
  3.9486532815100746`*^9}},ExpressionUUID->"c7cf7cf1-a807-5040-b696-\
2bc9d15fa247"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LpureChPTalp", "=", 
     RowBox[{"ChPTkineticTerm", "+", "ChPTbreakingTerm"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LpureChPTalp", "=", 
     RowBox[{"LpureChPTalp", "/.", "rulem0aTransformationSymbolic"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LpureChPTalp", "=", 
     RowBox[{"rule\[Epsilon]\[Delta]", "[", "LpureChPTalp", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tabCrossCheck", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<P1\>\"", ",", "\"\<P2\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(L\), \(P1P2, mass\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(L\), \(P1P2, kinetic\)]\)\>\""}], "}"}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"quadrpart", "=", 
     RowBox[{"ruleLeavingPower", "[", 
      RowBox[{"LpureChPTalp", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val1", ",", "val2"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xxx", "=", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"D", "[", 
            RowBox[{"quadrpart", ",", 
             RowBox[{"PfieldSymbol", "[", 
              RowBox[{"f1", ",", "x"}], "]"}], ",", 
             RowBox[{"PfieldSymbol", "[", 
              RowBox[{"f2", ",", "x"}], "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xxx", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"xxx", "/.", "ruleFieldsToZero"}], "/.", 
            RowBox[{
            "rulem0aTransformationSymbolicToExplicit", "[", 
             "choiceMixingDescription", "]"}]}], "//", "Expand"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"val1", "=", 
          RowBox[{
           RowBox[{"xxx", "/.", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["\[Delta]", "2"], "->", "0"}], "}"}]}], "//", 
           "Simplify"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xxx", "=", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"D", "[", 
            RowBox[{"quadrpart", ",", 
             RowBox[{"dPfieldSymbol", "[", 
              RowBox[{"f1", ",", "x", ",", "\[Mu]"}], "]"}], ",", 
             RowBox[{"dPfieldSymbol", "[", 
              RowBox[{"f2", ",", "x", ",", "\[Mu]"}], "]"}]}], "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"xxx", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"xxx", "/.", "ruleFieldsToZero"}], "/.", 
            RowBox[{
            "rulem0aTransformationSymbolicToExplicit", "[", 
             "choiceMixingDescription", "]"}]}], "//", "Expand"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"val2", "=", 
          RowBox[{
           RowBox[{"xxx", "/.", 
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["\[Delta]", "2"], "->", "0"}], "}"}]}], "//", 
           "Simplify"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tabCrossCheck", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"tabCrossCheck", ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"f1", ",", "f2", ",", "val1", ",", "val2"}], "}"}], 
             "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"f1", ",", "listMesonP0a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"f2", ",", "listMesonP0a"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tabCrossCheck", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"tabCrossCheck", "/.", 
        RowBox[{"{", 
         RowBox[{"md", "->", 
          RowBox[{"mdsol", "[", "\"\<\[Eta]\>\"", "]"}]}], "}"}]}], "//", 
       "ruleLeadingOrderIsospin"}], "//", "Simplify"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"tabCrossCheck", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["m\[Eta]", "2"]}], "+", 
          SuperscriptBox["m\[Eta]pr", "2"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["m\[Pi]0", "2"]}]}], "->", 
         RowBox[{"-", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"m2ChPTminimal", "[", "\"\<\[Eta]\>\"", "]"}]}], "-", 
            RowBox[{"m2ChPTminimal", "[", "\"\<\[Eta]'\>\"", "]"}], "-", 
            RowBox[{"3", 
             RowBox[{
             "m2ChPTminimal", "[", 
              "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)\>\"", "]"}]}]}], 
           "]"}]}]}], "}"}]}], "//", "Simplify"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LpureChPTalp", "=", 
     RowBox[{
      RowBox[{"LpureChPTalp", "-", "quadrpart", "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dPfieldSymbol", "[", 
             RowBox[{"P", ",", "x", ",", "\[Mu]"}], "]"}], "*", 
            RowBox[{"dPfieldSymbol", "[", 
             RowBox[{
              RowBox[{"findingConjugated", "[", "P", "]"}], ",", "x", ",", 
              "\[Mu]"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"msymbolic", "[", "P", "]"}], "2"], 
            RowBox[{"PfieldSymbol", "[", 
             RowBox[{"P", ",", "x"}], "]"}], "*", 
            RowBox[{"PfieldSymbol", "[", 
             RowBox[{
              RowBox[{"findingConjugated", "[", "P", "]"}], ",", "x"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "listMesonP"}], "}"}]}], "]"}]}]}], "//", 
      "Expand"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LagrangianWithALP", "[", "\"\<ChPT\>\"", "]"}], "=", 
     "LpureChPTalp"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.948652824848263*^9, 3.948652917423584*^9}, {
   3.9486530341862926`*^9, 3.9486530693208885`*^9}, {3.9486531317524357`*^9, 
   3.94865324202087*^9}, 3.9486532752938004`*^9, {3.9486533573679886`*^9, 
   3.9486533642396507`*^9}, {3.948700948727537*^9, 3.948700951318886*^9}, {
   3.9487010919030056`*^9, 3.948701097257406*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"9b473985-86cd-c941-941c-5f8c37792be2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "->", "d"}], TraditionalForm]],ExpressionUUID->
  "84d91ef8-8115-524e-b534-e7c874be3903"],
 " operator"
}], "Section",
 CellChangeTimes->{{3.944887299295351*^9, 3.944887302319105*^9}, {
  3.9486532883411865`*^9, 3.948653293441782*^9}, {3.948697345728573*^9, 
  3.9486973465692806`*^9}},ExpressionUUID->"d8fa6696-85e7-cd44-8c7a-\
c96c3a9402ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WeakDecaysTermALP", "=", 
      RowBox[{"G8", "*", 
       SuperscriptBox["f\[Pi]", "4"], "*", 
       RowBox[{"ruleLeavingPower", "[", 
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}], "+", 
             RowBox[{"ChiralRotationCoefficientHC", "*", 
              RowBox[{"alp", "[", "x", "]"}]}]}], ")"}], ".", 
           "\[Lambda]matrix", ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}], "+", 
             RowBox[{"ChiralRotationCoefficient", "*", 
              RowBox[{"alp", "[", "x", "]"}]}]}], ")"}], ".", 
           RowBox[{"D\[CapitalSigma]4alpHC", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"D\[CapitalSigma]4alp", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}], ",", "4"}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WeakDecaysTermALP", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"WeakDecaysTermALP", "/.", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"WeakDecaysTermALP", ",", "\[Epsilon]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
         "\[Epsilon]"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WeakDecaysTermALP", "=", 
      RowBox[{
       RowBox[{"WeakDecaysTermALP", "+", 
        RowBox[{"Conjugate", "[", "WeakDecaysTermALP", "]"}]}], "//", 
       "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WeakDecaysTermALP", "=", 
      RowBox[{
       RowBox[{"WeakDecaysTermALP", "/.", "rulem0aTransformationSymbolic"}], "//",
        "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WeakDecaysTermALP", "=", 
      RowBox[{"rule\[Epsilon]\[Delta]", "[", "WeakDecaysTermALP", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LagrangianWithALP", "[", "\"\<s\[Rule]d\>\"", "]"}], "=", 
      "WeakDecaysTermALP"}], ";"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.944888817428652*^9, 3.9448888283594913`*^9}, {
   3.9448889702959785`*^9, 3.9448889811586018`*^9}, {3.9448890140561523`*^9, 
   3.944889040807579*^9}, {3.94488911704694*^9, 3.944889190966711*^9}, {
   3.9448894661677685`*^9, 3.944889478816519*^9}, 3.9448920019210434`*^9, {
   3.944892123100771*^9, 3.9448921861811028`*^9}, {3.9448922166517315`*^9, 
   3.9448922167733536`*^9}, {3.9448923733731155`*^9, 3.944892478421034*^9}, {
   3.9448926197228355`*^9, 3.9448926470320168`*^9}, {3.9448927455406647`*^9, 
   3.944892746892851*^9}, {3.944893928510994*^9, 3.9448939286909676`*^9}, {
   3.944894087442959*^9, 3.9448941060779*^9}, {3.944894152402025*^9, 
   3.944894152741659*^9}, {3.944894262621004*^9, 3.944894298831852*^9}, 
   3.9448943395208893`*^9, {3.9448946994348507`*^9, 3.944894703142418*^9}, {
   3.9448965381744804`*^9, 3.9448965782784348`*^9}, {3.944896617222084*^9, 
   3.9448966400565605`*^9}, 3.944896887223715*^9, {3.944897031688076*^9, 
   3.944897031912903*^9}, {3.944897083092388*^9, 3.94489708326116*^9}, {
   3.944897121655592*^9, 3.9448971410446053`*^9}, {3.944897906313364*^9, 
   3.944897943433197*^9}, 3.944898007502573*^9, {3.9448980375736523`*^9, 
   3.9448980376326275`*^9}, {3.9448980744027424`*^9, 3.944898099042473*^9}, {
   3.9448982743679657`*^9, 3.944898288623644*^9}, {3.9448984802233925`*^9, 
   3.944898482751734*^9}, {3.9449017961825447`*^9, 3.9449017987023544`*^9}, {
   3.94490225705332*^9, 3.944902289557619*^9}, {3.944902330475647*^9, 
   3.94490235025259*^9}, {3.9449026707825356`*^9, 3.944902783173229*^9}, 
   3.9449029407019863`*^9, {3.944903376963623*^9, 3.944903379183239*^9}, {
   3.944903473543228*^9, 3.9449035154915924`*^9}, {3.944903656623308*^9, 
   3.944903658633829*^9}, {3.94490371869244*^9, 3.9449037343032856`*^9}, {
   3.9449037682760296`*^9, 3.944903770771929*^9}, {3.9449038944126377`*^9, 
   3.9449038964845123`*^9}, {3.944903933115097*^9, 3.9449039886424904`*^9}, {
   3.9449040955926323`*^9, 3.9449040957897015`*^9}, 3.9449043734525642`*^9, {
   3.944904657522606*^9, 3.944904696203169*^9}, {3.944904854853323*^9, 
   3.9449048659626846`*^9}, 3.944904936491987*^9, {3.944905085171335*^9, 
   3.944905170717201*^9}, {3.94490520530233*^9, 3.9449052870253563`*^9}, {
   3.9449054058165226`*^9, 3.944905419459362*^9}, {3.944920775724228*^9, 
   3.9449207760213947`*^9}, {3.9449208804197083`*^9, 3.944920880563488*^9}, {
   3.944920923283228*^9, 3.944920945773594*^9}, {3.9449210174288235`*^9, 
   3.9449210215962963`*^9}, {3.9449211065733624`*^9, 3.944921106628313*^9}, {
   3.9449211634425945`*^9, 3.944921167550352*^9}, {3.944921199383507*^9, 
   3.94492125486273*^9}, {3.944921335741907*^9, 3.9449213397283*^9}, {
   3.944922233306473*^9, 3.9449222354134808`*^9}, {3.944922327914463*^9, 
   3.9449223307599163`*^9}, {3.9449223783891735`*^9, 3.94492238008099*^9}, {
   3.9449227847293777`*^9, 3.944922792692917*^9}, {3.944922867703413*^9, 
   3.944922913043724*^9}, {3.9449237354966393`*^9, 3.9449237428426247`*^9}, {
   3.9449238377109737`*^9, 3.944923838273014*^9}, {3.9449238834574986`*^9, 
   3.94492389017515*^9}, {3.944924121035404*^9, 3.9449241393279514`*^9}, {
   3.944924368160967*^9, 3.9449243762339287`*^9}, {3.944924559386635*^9, 
   3.9449245678208637`*^9}, {3.9449296865649567`*^9, 
   3.9449296890215073`*^9}, {3.9449297393486576`*^9, 
   3.9449297409556293`*^9}, {3.9449335481685867`*^9, 3.944933548527849*^9}, {
   3.9449343123014126`*^9, 3.9449343240142097`*^9}, {3.944934733063122*^9, 
   3.9449347419587135`*^9}, {3.9449351821021175`*^9, 
   3.9449352405081635`*^9}, {3.944935797377884*^9, 3.9449358185893955`*^9}, {
   3.944936294928623*^9, 3.944936316420656*^9}, {3.9449803838574867`*^9, 
   3.9449804025122375`*^9}, {3.9449804426282635`*^9, 3.944980444381941*^9}, {
   3.9449811053797283`*^9, 3.9449811090413113`*^9}, {3.9449812077953644`*^9, 
   3.94498121104904*^9}, 3.94498135882382*^9, {3.944982096703705*^9, 
   3.9449821148381824`*^9}, {3.944982171000742*^9, 3.9449822432109585`*^9}, {
   3.9449828167191353`*^9, 3.944982817386282*^9}, {3.9449830835726585`*^9, 
   3.94498309487924*^9}, {3.9449831344090633`*^9, 3.9449831406238556`*^9}, {
   3.9452329482255363`*^9, 3.9452329546347485`*^9}, {3.948652090674135*^9, 
   3.948652103754135*^9}, {3.9486523234588985`*^9, 3.948652329574217*^9}, {
   3.9486533356839867`*^9, 3.94865335085894*^9}, {3.948701106861374*^9, 
   3.9487011131451416`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e0967441-23f6-b740-ba72-dfad8bb068ef"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"8.`*^-7", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9486532983480377`*^9, 3.94865346287858*^9, 
  3.948697345249031*^9, 3.9486998261203003`*^9, 3.9487011165117455`*^9, 
  3.948701805844244*^9, 3.948730973007044*^9, 3.9487353781202145`*^9, 
  3.9489595122549725`*^9, 3.948968962004076*^9, 3.9489778594284*^9, 
  3.961473099744156*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"99b60265-7200-304d-b318-94cab34ffee5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["VMD Lagrangian", "Section",
 CellChangeTimes->{{3.945066681767622*^9, 
  3.945066687160145*^9}},ExpressionUUID->"319caa19-c23b-e246-99ad-\
f11a581f2129"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Expression", " ", "from", " ", 
        RowBox[{"https", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"arxiv", ".", "org"}], "/", "pdf"}], "/", 
         RowBox[{"1111.5949", ".", "pdf"}]}], " ", "for", " ", 
        SubscriptBox["c", "3"]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["c", "1"], "-", 
        SubscriptBox["c", "2"]}], " ", "=", " ", "1"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"VMDtermALP1", "=", 
      RowBox[{"ruleLeadingOrderIsospin", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gVVP", "*", 
          RowBox[{"EPSILON", "[", 
           RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
           "]"}], "*", "2", "*", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
            RowBox[{"dVmatrix", "[", 
             RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], ".", 
            RowBox[{"dVmatrix", "[", 
             RowBox[{"x", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}],
          "+", 
         RowBox[{
          FractionBox["3", 
           RowBox[{"240", 
            SuperscriptBox["Pi", "2"], 
            SuperscriptBox["f\[Pi]", "5"]}]], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["15", "8"]}], ")"}], 
          RowBox[{"EPSILON", "[", 
           RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
           "]"}], "*", 
          SuperscriptBox["2", "5"], 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Nu]"}], "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Alpha]"}], "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Beta]"}], "]"}]}], "]"}]}]}], ")"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"VMDtermALP1", "/.", 
          RowBox[{"\[Epsilon]", "->", "0"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"VMDtermALP1", ",", "\[Epsilon]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
         "\[Epsilon]"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP2", "=", 
      RowBox[{"ruleLeadingOrderIsospin", "[", 
       RowBox[{
        RowBox[{"cvmd", "*", 
         FractionBox[
          RowBox[{"UnitStep", "[", 
           RowBox[{"m\[Eta]pr", "-", "ma"}], "]"}], 
          RowBox[{"2", 
           SuperscriptBox["f\[Pi]", "2"]}]], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
              RowBox[{"PmatrixALP", "[", "x", "]"}]}]}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
              RowBox[{"PmatrixALP", "[", "x", "]"}]}], "-", 
             RowBox[{
              RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}], "]"}]}], "-", 
        RowBox[{"I", "*", "2", "*", "gval", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"Vmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"dPmatrixALP", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
              RowBox[{"PmatrixALP", "[", "x", "]"}]}]}], ")"}]}], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"VMDtermALP2", "/.", 
          RowBox[{"\[Epsilon]", "->", "0"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"VMDtermALP2", ",", "\[Epsilon]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
         "\[Epsilon]"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"VMDtermALP1", "+", "VMDtermALP2"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Rho]0", "[", 
              RowBox[{"x", ",", "\[Mu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"\[Rho]0", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{
               "VA", "[", "\"\<\!\(\*SuperscriptBox[\(\[Rho]\), \(0\)]\)\>\"",
                 "]"}], "*", 
               RowBox[{"A", "[", 
                RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"d\[Rho]0", "[", 
              RowBox[{"x", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"d\[Rho]0", "[", 
               RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{
               "VA", "[", "\"\<\!\(\*SuperscriptBox[\(\[Rho]\), \(0\)]\)\>\"",
                 "]"}], "*", 
               RowBox[{"dA", "[", 
                RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"x", ",", "\[Mu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"\[Phi]", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"VA", "[", "\"\<\[Phi]\>\"", "]"}], "*", 
               RowBox[{"A", "[", 
                RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"d\[Phi]", "[", 
              RowBox[{"x", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"d\[Phi]", "[", 
               RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"VA", "[", "\"\<\[Phi]\>\"", "]"}], "*", 
               RowBox[{"dA", "[", 
                RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"\[Omega]", "[", 
              RowBox[{"x", ",", "\[Mu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"\[Omega]", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"VA", "[", "\"\<\[Omega]\>\"", "]"}], "*", 
               RowBox[{"A", "[", 
                RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"d\[Omega]", "[", 
              RowBox[{"x", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], ":>", 
             RowBox[{
              RowBox[{"d\[Omega]", "[", 
               RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"VA", "[", "\"\<\[Omega]\>\"", "]"}], "*", 
               RowBox[{"dA", "[", 
                RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}]}]}]}]}], 
           "}"}]}], "//", "Expand"}], ")"}], "+", "LmassKineticVMD"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP", "=", 
      RowBox[{
       RowBox[{"VMDtermALP", "/.", "rulem0aTransformationSymbolic"}], "//", 
       "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"VMDtermALP", "=", 
      RowBox[{"rule\[Epsilon]\[Delta]", "[", "VMDtermALP", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LagrangianWithALP", "[", "\"\<VMD\>\"", "]"}], "=", 
      "VMDtermALP"}], ";"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Conjugate", "[", "coef1", "]"}], "^:=", "coef1"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9450699976014996`*^9, 3.9450700151496296`*^9}, {
   3.945070250275482*^9, 3.9450702545284023`*^9}, {3.9450702888805046`*^9, 
   3.9450702902037563`*^9}, {3.9450703651656055`*^9, 
   3.9450704361616344`*^9}, {3.9450705433154697`*^9, 3.94507057284338*^9}, {
   3.945070605347027*^9, 3.9450706161879463`*^9}, {3.9450715612974777`*^9, 
   3.9450716697633553`*^9}, {3.9450717277808075`*^9, 
   3.9450717603850937`*^9}, {3.9450751579691143`*^9, 3.945075349085209*^9}, {
   3.9450754278006744`*^9, 3.945075430064705*^9}, 3.9450755200883846`*^9, {
   3.9450759059853992`*^9, 3.9450759281953354`*^9}, {3.945142934141489*^9, 
   3.9451429501815014`*^9}, {3.9451431095055237`*^9, 3.945143112456293*^9}, {
   3.9451432188686676`*^9, 3.9451432801149883`*^9}, {3.945147530384762*^9, 
   3.945147530985998*^9}, {3.945226207310896*^9, 3.9452262130910225`*^9}, 
   3.9452273874430714`*^9, {3.94523296373934*^9, 3.945232964617544*^9}, {
   3.948651387803097*^9, 3.9486514509955673`*^9}, {3.948652342300579*^9, 
   3.948652350118105*^9}, {3.948653380785879*^9, 3.948653381023628*^9}, {
   3.948701120916113*^9, 3.9487011464785976`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"ba4d7ae4-933b-eb4c-b7c4-ecd23e7544b2"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"8.`*^-7", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.9450705934396935`*^9, {3.945075351621462*^9, 3.9450753627927666`*^9}, 
   3.9450754304303513`*^9, 3.945075528549366*^9, 3.945075929995672*^9, 
   3.9451367582177544`*^9, 3.9451429579985905`*^9, 3.94514311380122*^9, 
   3.9452273939932175`*^9, 3.9452329857346516`*^9, 3.9452787526863804`*^9, 
   3.9486386155079575`*^9, 3.9486514539953156`*^9, 3.9486533005618935`*^9, 
   3.94869734927326*^9, 3.9486998263573017`*^9, 3.948701269444044*^9, 
   3.9487018058622665`*^9, 3.9487310884681606`*^9, 3.948735495948927*^9, 
   3.9489596536874104`*^9, 3.9489691004789696`*^9, 3.9489779984596233`*^9, 
   3.961473100900137*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"2015dab3-9c55-5c4f-b2f9-5425f0f614d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Light scalar mesons", "Section",
 CellChangeTimes->{{3.9450976210039883`*^9, 3.9450976224259357`*^9}, {
  3.94523292041415*^9, 3.9452329210206623`*^9}, {3.9486386811102715`*^9, 
  3.948638682479664*^9}},ExpressionUUID->"0f9967df-a49c-8d46-8ca0-\
b52103d29c68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LscalarAalp", "=", 
      RowBox[{"CoefA", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"Smatrix", "[", "x", "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}]}], "-", 
         RowBox[{"2", "*", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"Smatrix", "[", "x", "]"}], ".", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}], "*", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Tr", "[", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Tr", "[", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}], "]"}], "*", 
          RowBox[{"Simplify", "[", 
           RowBox[{"Tr", "[", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}], "]"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"LscalarBalp", "=", 
      RowBox[{"CoefB", "*", 
       RowBox[{"Tr", "[", 
        RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{"dPmatrixALP", "[", 
          RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
         RowBox[{"dPmatrixALP", "[", 
          RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LscalarCalp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CoefC", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"Smatrix", "[", "x", "]"}], ".", 
           RowBox[{"dPmatrixALP", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"dPmatrixALP", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}]}], "//", "Expand"}], "//",
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LscalarDalp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CoefD", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"dPmatrixALP", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"dPmatrixALP", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}]}], "//", "Expand"}], "//",
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "LscalarAalp", ",", "LscalarBalp", ",", "LscalarCalp", ",", 
        "LscalarDalp"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "/.", 
               RowBox[{"{", 
                RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], 
              "\[Epsilon]"}]}], "//", "Expand"}], "//", "Simplify"}], "//", 
          "Expand"}], ")"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "LscalarAalp", ",", "LscalarBalp", ",", "LscalarCalp", ",", 
         "LscalarDalp"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LscalarALP", "=", 
      RowBox[{
      "LscalarAalp", "+", "LscalarBalp", "+", "LscalarCalp", "+", 
       "LscalarDalp"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LscalarALP", "=", 
      RowBox[{
       RowBox[{"LscalarALP", "/.", "rulem0aTransformationSymbolic"}], "//", 
       "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LscalarALP", "=", 
      RowBox[{"rule\[Epsilon]\[Delta]", "[", "LscalarALP", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LagrangianWithALP", "[", "\"\<S\>\"", "]"}], "=", 
      "LscalarALP"}], ";"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.9451002989998856`*^9, 3.9451003620959587`*^9}, {
  3.9451006229580116`*^9, 3.945100738095648*^9}, {3.945100780506075*^9, 
  3.9451009228827305`*^9}, {3.9451012611591473`*^9, 3.9451013476239414`*^9}, {
  3.945101432829689*^9, 3.9451015646532726`*^9}, {3.945101661264593*^9, 
  3.94510166204373*^9}, {3.945104561449938*^9, 3.9451045715675373`*^9}, {
  3.9486519891825733`*^9, 3.9486520168814335`*^9}, {3.94865205794034*^9, 
  3.9486520668525047`*^9}, {3.9486523552354774`*^9, 3.9486523593017063`*^9}, {
  3.9486533853568726`*^9, 3.948653390169132*^9}, {3.9487011591041336`*^9, 
  3.9487011681758327`*^9}, {3.9487255532986183`*^9, 3.948725640128294*^9}, {
  3.9489780166539974`*^9, 3.9489780180483685`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"32a7aaf9-7e69-2c4a-ba72-6d17596a4fac"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"8.`*^-7", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.961473102439293*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"5f3776cc-ef82-1e4b-9bc9-56a33e5141c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative form", "Subsection",
 CellChangeTimes->{{3.948725953353714*^9, 
  3.9487259549510536`*^9}},ExpressionUUID->"dc38f2db-fe22-8648-a5c3-\
3c64acd67d35"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XVcU10YB3A2NkaLjYHdndgBtoiNLYoYpKSCSImFhR3Y2NiKHYABqCgq
JtIi3R3bHS9jxBjb2JD0/X3/eD+vY7v33HPPufc8555zbvsVRrNXk8XExMwk
C/4zW8tCxdRUa8MchYJ/aKw1012zdtXKKWvNV61ZZTp0hXjBh08KvtuIIibG
+v98AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoRWSnxYUFffX1
9vT2j2ZW9dYZuWnRv4P8/bw9PT8nM6p661DHMImcxJiwH/6+Lz28wlJwvgEA
AACqUO6TfZrjRvdqLi8rIyMjK6fYZ/h4m7MBROHfQu/ZTFYd0q6JnAzrbwqd
+o5aZvsot/iXyV+PzxrcQaHwb01a9Vhq757H+jjD6/Jmux23I3Mq3jeR93W7
pmqftvJkEnmk1s3cin8hEvrLI8tHDmwnTSbJt9B8l1XlQcm/TYTzWEfEvnSc
PLJPMykSWaLXcV+hSlNywJ0ttrs8fmZUd9oAAAAA/gkZV416i4uRlRdezub+
E+F/crYMSaxl7/W/8nj88PFmla7DN/onFnXt5iacG8MKAhrZ3uRqieUG+Pmn
Ejz2nfnnmLK0+F9GDakhH38l8OheZhKR9uMVEDWIiv95rBpEbuhH//hqOCX0
h9aDJYSNGjKPLm5FEiP1m3W6qpPBt7QDAAAA1GtxXlbtqGLNuhh+K9e3nBN7
cXwTcQk5ldth9PI//HHOYKdbSsk/mfTgIwaTRk0wefmnTBueyQjbssryB6+O
a3rGtYkNKX8XNTDe7V995HW5iIcl8+A8RUQNouJ3HqtKesghA6uXPMrT3yLe
759EEzZqIL7cNBs1aIzdxcCqTYSA0g4AAABQrxE53lrdpcjUzgdecbe9iZzX
y7tJipFkdI+El2t5Jx0zMnuXXnGDnJ7xaMk4Mz5Rw/VJDal/FzVkuqwZf4hP
1HBoPqKGOifivv789dUUNUwWOmqoLgJKOwAAAEA9l3PdqJe4GEV9/Wuutlz8
m80zRw6gkUi9phxJLNvxnJt4w9j0Fs/GOpfw+7qde5pUU9SQl/pIo1P3g4ga
6o10l1Xdppn/s1GDgNIOAAAAUN/FuBu3pJSfv0B/tNnQ5eWR4fJkmsKUR9Fl
woaQG2Y7biVXuOWs6EdL+8g171YtUQOTiDlvOIBG7VxFUQM9JTY6MaMyw3Jy
0uPikwW0FOmpCQlZNbW0D5OeHhMdV227q3wuFTTsA+6bdJamqFU+ahCQk1UY
NVR8jDzPuODSzt5yakJ0XDK7uNLzqiF2AgAAAKg+jCz3BR1o4hK9T34obXER
eZ9tDPb8yQm3n9CIRJIzPh3F0fhOP2Nm/Dq59IPM366aYwb17NJOsUlr2+us
WbRMRshpqwX9lWTJJBJFpu0wFdVCk53cEkt+VRI1pMZ577MxNTUzN9aZq6Ky
6JRHVEUNfYbfdWv1YW0kxUkkkky3wWPZW19scTuz9DtFUcPb9LhHzrYmJmZm
ZrrTVVQMdzznWouVkR18wX7RhElLrLY6bjCYN2780tOeFSagKB98rmycNnrs
/JVmNjYWBro69gfcEzmagjlJnw6aL567cMU6Owfr9cbamquO3g8qicyS/Y/O
HDmwe+c2is36H/HKCnnlbGlsYr7ObMUcVbXF2z8UhmlEnv9WzSmTJk8tNGWK
muHzCEZh9obu15k6eUrhx2prPSJZHyYH3TNfMH7GUvNtjrarNMZN19zxoSjW
o784tHTogJ4d2yh2HLT+e3bcw6M2xiZm5uUypPx5FCKXhNp4WtBNo3nDFWVY
J6xJu0Hs4jBhyro3yULltOCcLFQUNRzzCXU7bLNu/QarjdZmOpo6Fse/xpZp
nRM5PhYzRvTv1aVNqyZ9px4Q7hgrOOMVlnaCHn55i56eqc3ug86H92+32WBl
pq2y0NoHq8QCAABAvZJ5bnUnshhVw+5DSTMm2X+Xxe6vBGu68WQJEmnA7NMp
xe0netoDU+PL6WW2wMhOi7phOZRCamB1Na3kUyY9cP2ICp41KC/YvNNq1/so
dtMu84ZJH9nGk91ChemHZbzeMZYq8FmDnOI8x71Wpz0i2avaRL1Y15bW0MA5
uKQpyMj5tlm9XbcxW0OKtkEE3NVt22igs1c6r21ySr5lO7pFm+nXP6cWf5L9
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
gn9DjLtJK1qbnc8yBXynwtJbk0U0N+HMqAaiXRZKMIlEPy//9Eq9PRlVGP55
WVGXpnSZeJtXGBv9zEiRItZn+snyFS/l+57+smSpxhPvlK47nHRqlardVc4H
mBnXTfqIk2SXOn7m6qD4/cig71DrX3VvfQMAqFpJH7d0o8kYn44V8J3od04j
Wkr2n7YviP8kAnrqCxN1FZ1tHlydGHmpl1UbUNXMXwr5tIGe/t5qklKDllOu
fuI72jno7JxWPc1/1mzU8NcJS79hN2OyxpZP3N2G6XtnN2vezeSHsIeT8XiX
WhOaou5BvwqHU9PTb09rTptu6YXlG/9p9Kf2Q6Xl1Z7yn88kTOmtySKal3ph
rEK3Iz6VmRHAyLo9s+dyAQN7+EEVhv8Buue2MUPnX+A5XkhA1MAkwq1VGoiR
JDR3/WRH5IysR3OVqOLUTvtflH493HWJFEmsw4itf8qWSCLvg26/VpaXBTUk
AOAf8OuchjSt7yk/vkMF6OkvtXpIy7ec+7xSi6szsu5Ma0bpOflIilA3+Yzr
pn2p4s0tLv0R8PWwSwva1vSbmKovYdnOS1tLSE94KNwbuSM91reTEB8y/7ww
S8oz6QHmw+W6TdifWBcWmoLqkrxnVjOlARv5j5ERqvTyV/VFlJ7hOqFxJd/y
Rs+4qd516VuRowZUYfj3sZ589Wi+wTWR518FRA0Fl5Gd05uQxKgzrXzYZY3J
CN2zuHfHngvucYzYC7m0QIpE6qKyq9y60PT7VoP6TjtWB951AgDVJ/e2eV8p
uWnPk/ne74KvasqTxScaPhXuRkqP/P7ixsVTp1xufgxnPVXPTXQZLUfuOHJb
lBCdZXnJN6Y2ozTpqOcv8EFnxK0VXYba/67B3rcqTFhWwo+nty+dPOHy0Dus
sG8yeYd6Ywpt2BWh5mmkHlnUWpzSbo+7oLEoHDIL2jNNOuh8xoPjfxeR47Oi
h1TfGaf4lQkhS2+JGiiijCy36a0Hn/tamci/clEDqjD8HyS+te3caOIDPiuQ
CIga8pLvz24rQaa23/1cwOPI3Lvr+4uTaAu2fCy/g4KNt248w6M+vCgWoOpk
vzhhYWS2Rn3S0usf0xnZwVecrDfaWJvqLV5ufC5MxFe11gcZ++c2b9x+Df9b
EvFu7wSKmITOkQpfNkQPenVk8SSVFRZHH3t/8v/keXK76e4rv2Le2naUEOsx
+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
dqN0bc9+jS1/yWBEfXvsvGezje32k5fufwrjsZyLMJmWGHTfZoVKKznxgp1R
ZdtOXWpz6210XXgd998nLDvp++3TTvY2tnuOXnz2NrR8qSJy3q3qLb90x3f2
Zunpd6a3aGRxqUxPJiMz+LLjyiHt5QvPhmyv0Ut2nfMRsNJ74fLdMgPmuNRi
QEtPu2a/+U2t7JpJpAW8e+H9MTy73KkSJrdrGD09+P7ZXRvMjMwsHU5e8+Z1
4eEnw3mpUtNO+l9yeF+ChCy9FRbRgraHm0X/jqWTmDKOa7YtOwVM5CJaCZV7
XwOqMPwfMIkoR/WWi7byfVO86DJ+eLudObzD1sZ+r/N1/z/8mgopx5Z2mLnB
u4509gHUjPg31h0kaCv3hwi8IbEG/Ct2MfxWFFPn3jDp3W2cUyw9/qnbi5pI
JbeUh3uWzVy88dxtd69XD47YzusgLzNQzc43SqhbdUboocEykiv3C15ghBH1
9d5249k9FSUL7nXNu655J/Ky5yJkWnbStyv7TCcPaEEliYnTOjk+TBBxX9Wl
WhOWFrRvgFzpnMfYl+vayo+5FUYP8XD7XDa3mYzkd3cPrJk1sDGt4GxITNDj
sbYLW1b0qRFyEou3f6vFyCvRd4ejS3Tt7Z834XO7ZkT47Js3ddH2E7deeL+6
ecZ+SneFpu2nHH0eKeQb1X33T5KSHnNL4HJnf196C0fmN5xs7MFuGBA5r5d3
ky+4WmbFeT56mVj2m8IW0UpgZHvqz7D6XqkuTVRh+OcF3dDuMtCqhgdbZsVc
nth27LXqX/wBoC5htWy53tTAS+Kumc2VBm5kv3M24/c19fZS09a9TI1w2bDF
u0bSyYn4dlVnqcUTjhfBEz9u67SmkruO2RYixI2VyPuydrCs8oJLwqzQwciO
uGk/sYFE54OvRR0gXIlMy/7hvnlIYwk185d1rPuiWhL28+xcWVq/059YZY/J
iDi0uLNid9PvWZH7zR34DU5I+e1pPK55824mP/h8IfK+XjNa96NvanGmSO7T
PTZP6tJbTtgqkdvVJyvqhuYM8w8ca7RmRd+d21lSsuGoC5+EOnfJn7f2kGy4
wbX8CurlVb705safV2kooWHHXimC4X9lWQvJLodeZ30+vf4UnzJWYRGtJajC
8M9i0n/ZTuztcKcmZyXTn28dO1n/IZ6Iwf8KkxFmP7GJbPNFPgKnqtEzHsxR
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
FsH5UO1RA5PISUpIE+lQmPSkH75en0NTRfiJ6HsRGj0m6L2Pb4gwrS96TnJS
WjU16oUqTrV0nSkortFxyezR8/S8OhTVCKpHdSpqyE4MfuvlG5kmQl9KVsy5
1Qa3Cq/cGWdXdSKTaIu3f+G8TkY/t9zgXJtjwAAA/q/onoeWT5o0eWqhyZOm
H3NPueUwe9LkKewPJk81805kMunBe1dPLfps6kq3n6z5aclB98wXjJ+x1Hyb
o+0qjXHTNXd8iBZ8U6/Mvm599jCbOrRP944tmzY1dP4T8uqIqeHa+ap9pq46
F03Pz/ztqjlmUM8u7RSbtLa9zprFyWSEnLZa0F9JlkwiUWTaDlNRLTTZyS2R
IyXZn+44zB4/adW6LVttDWeOG2+0y13wcqNpQTeN5g1XlBEnkUhN2g1ib3XC
lHVvkkvuXUVRw9v0uEfOtiYmZmZmutNVVAx3PC+3ZZH3zsYkYu/uNV2tY2i1
afN6nVmqk9a4+sSUDzqYjHj3szbaK/TXb7C0tFhnvmGfd+B1XlEDI+zduXWr
Vqxdx/qeuemGs88CjyzmjBqIz5cMRwzs3aldyxZtlvgUfig4H8qfjhI5SZ8O
mi+eu3DFOjsH6/XG2pqrjt4PKpnmmOx/dObIgd07t1Fs1v+IV1bIK2dLYxPz
dWYr5qiqLd7OVa6Ey4dqjBqyYl5uM1mtZ7h+02ZrrZlj5+gc+RJb/leZ72/a
L5i1UNfQSH/lAi3jIzcu7TAx3XT4mNmgNpNu/vAUUKqF2QuR93XLolH9enZu
rdh09oZX6bFeTtYmpmbrjHXmqqgsOuURxXXYCT9vmy+ZrbnG0GjtygULjM7e
vrTJ1NTxkPPKUW30jgbzP3FEkOd+w1U6xhb2m6x11cZOtDrmlcJxNkQ6ceUJ
Ua0EXGdybjuoD+7XvX3rpv2nH4mO8dq5zlB32bj+Q1c8DsrjmTCzdaaa08dM
09z9Kb5gC+mvL2wyNjIxMzfUmDB6meVVzsWjCHr45S16eqY2uw86H96/3WaD
lZm2ykJrHwHHwyQiDuup9O/dpU3LJiOXueYKnT9Env9WzSnF18UpU9QMn0ew
PmcyQvfrFF8J1dZ6RLI+FFyP2MpGDWWuulMmT91yObwwcxkfXPQnTyrc+pSp
21zDP5Wr7KKWMUbmr7O2S+cuXL3WaO3y+Qtsj90+td3UwuGgk8mY/lMOxQod
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
rdfGWIbM69EKC5Ps3aZe/T1GUJC4r3LotuGGutNyq/9Zct9dZ5bU02ww8LTC
G8bLLR0yiDIO3RR1pkTJqYnV9fSq7ohYkM7/zVqnqdd+/VPwxaUtc+eovf76
nykHf7ze26/b1OdxLessb6A6VjYsWGNaxI1buLNq6Pobv+9RXjObGutkjNb7
SBp4sp2pjmnl8VE6NiTs04W7q1oYiPW7z3r0a98Iz49M69+msp5++PPPd0ed
Z+4Nf3L4/dk6q3zZesy68/t5nTTYbbFd1axaojJNV33/9QlC6IsZLf9X3GK6
258PDb612aFULm3dTI1Pfo5aku/z2+TUzdTsbJSFt1TuBwWH49PNuVVz5R28
9tnv9k7o92sDq+es3W1L1OXRnq5tqSPSc1gdtUdK0Cbbwtq6FTb+XNRJ3f3w
s9iGTU55qZU1hHhtr5dVUzNWK877zdnx7UvoinTslod3pJe3Uadb59QxqLH9
8a+VFITP26cMsa5kUMxqwTdpwNYRQ69GjM05MbGacd7Kbbv07NW7t41NHzuH
IeOnLTl02T1qq0rZWa32p4SFfN1Qy1BcsvGKqLMwfThmn0Mr2mQ7Xrenlsic
t07LzpGlse3nMHz01DW7LnkGRNs5MQ6cv8e6Wlk1i9Se/vZX+QI/HRs3uF2J
DLq2iz1C/U8MH7Y78udqHDhVVJxOcdYzEbOkGmYrbB97An9VBdMpu+7un4KF
T+db2SBLfpu7Qb+yhjIZS1jN9YhytF659K3edOmnuFKvEO/tVlnE5Vquj1oP
xmv/SPzPdi6sq61vviVW81jN6yjiOOoPWq9wTraAHQOKa4r1ukR7W/ebgotd
zXNMnkUOrJS1aJUW3X6e8v0ch4yevXTnnTfROrOpEOx1xbFWIaftyt5WB2y3
M8tRdKCrksTE7/XSKoZiTZ0SK6+TNwBAcpAJ76Y0ztt38Z9VyYTQ+wMr5Rmx
VUHXYu/nLo4tqtZtNXjJhq1rFk/o173f2jMxe24n/rOkQZed2zQwN8uZUV/f
0ChfFYv6rXstc/91O/V9uqFr47ql8hnp6+tny1fWqsnY+78aD6E+V0e3KFGq
tv3StYuG9R9zMVrXgqDb+8c1MjfvNmTexq0b5o4f0KvfTDW74L69PLdesf+1
dFiwcpHzoHH7IybGlFxYYVPfolyuTPJSGBYsU6dlzyWvgz3XDG1Wu3KhzPJy
Z8xWqmrdXhNPJebTBYnH5tEtiuYr3mPU8p17ts6bOHzGupven/+zrZyzUIUm
Xe2Xv/rV/vd+tt+hRa3mvSZu2Xdgy6oZIwePO3BtTV1DkVgzc7GKdZzXPP61
Y1+sc2pVx6rnnPV79+1cPdl58Jwt12a0NNYQaeYoUKG5zar3Eum1tf0b1K2Q
O7P8e2UuXK52j/EnVO4HVYfji+suu2Z1W/YYOnv56jnjB7S0shww4+S3P69g
VndsZFHCJPyTjPOWtmrYfc/9oCd7RjSyrJI/S/gezFvEvGHz8fKWoRr74Xex
5X+YqVBZi9Y2y1Xs2E9npzSsW6tMwSyaIg0NkbaJ2a/lxOvWrlQ6f0at8KGw
InHW8ft/Nn783hwZ2LRUwZItpqzYvmvrkrHDRu+/7f3qhHOpbLlqWLcdszIy
X5O8PDe5ar68JcqWr1CxYvlyZcyKmGTSFYtE2qXrTbz/Tar6rFbnU4JDH83s
2bhG2XyG8r1jmKeSRcPhy+76fdzfz9qqXMGs8s1mzla4hmXTFREvZfw/Xhhk
WcC0WHhpKpQvV7pEkVxGevLSZDaxXHU+PMtVcuAkjw6NsyqRr3pLp7U79mxY
PGnk6DXPfL5sH1Ete+7yzdv133svQP0Dp/r0Vng6/TyfldYzwQent7OsWdw4
/HOMipSv07Bxj70PQtQ8o/IVq96oxYSHQcEHprb9vZGiFep0GLT9S+At+xq1
pq5d0L/XoHmrd7i47Fw00a5d5zFXVHZPkkmez7NtUrN8fnk1YJDZpHKdRstO
JWz/SI6PrVKq4ZIvij5N9XX0+zjKN53NpEy9Rr32P4qZlXjdmmiWLfbqMAou
diE+55gg8dw/vr5J3qLlIk75smVKFMybRVss0tTO023y2R8qp6wNeLunp2Ul
0+wG8s/JbPy/qlaOFxW90/l6c0qbvvuUpQQS3wsDa+U3Kdb97Pv4DaYAACSY
79tX0Z9ACl9fv/RS/rxQCP766PrFGw88AuKcyjzRnxV/IZ4vb1+59thHyTb9
vzy/evHKk7e+8eooK4R4Pbl1+faTz3F2+VAtAZ8uBH9xvXXpwuV7H3x+r18Q
9MXTO/YrmNCAT/evXXn46mtoRH+te5ev3Xd9+e6TT3D0O2r4YE/X69fvvvwe
/gRP8Hh05cZdVzePT75Bcd95E7Afws+WG9cee/jG/2SJsR1198Nf4vf5+fVL
56/fd/f7vZxwkNdn78gWjeTa6valzQdf/xhtx8gk3tf3jauaW6/J0HNqllPl
p6jr+7N1DcwqzzvxIfo+l3x4dMDByiSX2SDXOJr0we+f3b54/vLjN96/uzz5
f/P0TVxflNhUn06JqWfiL+DD+/C1TGQSnyc3zp0+e+VJos/YeAn57u6mcka1
xFxHMsHX7fmHRNZdMcsT+mJm6xIthx31jr7dQC/XDWMaGOsWWXRB7aWhAQAA
0gdp0H/tTLM57/RS9I/hk9ibVhrrnmzpTVjwZtvCVTpsU9ho83k0o6Rh+Q0P
kjJRRzr08bh93hxtL/ooSD8jJobNHHsQNwAAQDonDbrYrWhWB8XL14Ycdq5Q
ov5ChZ1P/o7gPY4ly1iv8FL0iV+vjS2Spa5LXMthA6p9Oj/U1LjRsVizWISF
vxa52bd01r5LXjPxEQAAQHTS+zttzYo0WnfhY/QOJAG39wwqU6Dm6kveyVma
8KUfShbpPeNcjAUavj3f163y/zpPou8IEksm9Vjeu2ylJtPueUbLQKUBL1Y7
VC1de8IjRa8hAAAA0j3hw4PdTr1bt+nY087RedKU8SMG2/fo0KrHwPnX3FNg
gpdg70drJ9q0atmxd1/HMROnjHUa3K93xzYdHDaccku+rlJI02SCz5Wdk7u2
atmlZ98hoyZOGu/kaN+7XasOoxee9GROIwAAgDgI/t6e7z98U2NweXKQBHl/
fP/BJyB1lAZpkUwI+ub53vObf3KOHwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKnWt1fnVs8eN3TQkLFTlhy5
5hGi+LcCnl7YOnP8KOfRk9buu+2l5JcAAAAApDnfj8/r0bLLmM0uZ69cOrZ8
fPuCmTJWtJ5w66M06i9Jftyd1qFyc7uNTz4HhwZ4HJjb3rzmgLNuZA4AAABA
mic83t2/m9N/P4Q/P3nq0t9EW1yszvTXwb9/6LPVvlSZxks//8kk/F1GVjSz
mO4eHAYAAAAgDRNCHwxr1vuKtyzqD2XSN2Mts4jFxqN2fY38ic/DmaUyZnXe
6RX1174/nlUyg7HT9i/JV1wAAAAAyS7g/SpzfXFW0w6n3kXtjxRyxLmCpoam
lf3JiP+V/DfBXFfXfPvT0Kh/Kw36r52pboXW639EyzkAAAAApCmBnlsss2lq
Zai0+WHUEQqSs5NraGqIq3ffK/8fmfBxcoOsOobNzvlGSw+E0EcDKxlkLdD3
fhBpAwAAAJCGCe8fnr388HO0kc9h/ut6FhBpaHeYfD/8N4Kv9iqRQd+4w9XA
GB2Z3EfVyaSVweqIZ/S/BgAAAJDWhXofbGGirZu5zp5n4V2SpIGHW+TWMsjZ
5UaMrEF4O97KSFO3wsaHzKQEAAAApCuSi/MbZNQ06jXnbuQwBon/vsbGmpny
9LgVM2vwnFTfSKxTcvVNsgYAAAAgHfF+vKx6dsNGAw54/ep2JM8aGmXVzJS7
+82YWcOHifXCs4ZVN8gaAAAAgPQi6NtZm4q5mzjs+yb580Np4OHmuRT2UPIY
a0kPJQAAACAdkQY8HN+4eDvn4z7RBzcLwVd6Fs+QIUvby/7RswbJS6eambQy
1D38kdHQAAAAQNonk75Z1rNmn5mX/X//RPju4eEV8R8fJtXPop3B4tD7aNmB
EHyrXxl9Zl4FAAAA0gOZ4LXbufmABTeCovww0HPj0NHnI/5TcmJcFR2d0qtv
ReuJJPF3sc6hVb7Vuu9CchYWAAAAQPLzP7vIZviS20HRf+q+r/+wVR8i/9vn
0cyS+gaD1nlG/YWv18cW1DUeue1zcpUTAAAAQIqQ3N3WwzR7gUrmUVWpWL54
nqwF55wOiPwlmeC12a500dpT3X+lFjLh6/o+ZkVrTX0dnGJFBwAAAJAM/D3W
1swi1lBEK0Pt/W/+TKUk+XF/RueK9bovvfc+MNDn6ebx1hVrDr70TqJi4wAA
AADSn6CX1/YumDZ+7PjpGw/e92M4AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANRQvmJlgiAIgiAIgiAI
FVHZvBpBEARBEARBEISKqFajFkEQBEEQBEEQhIqoWduCIAiCIAiCIAhCRVhY
1iMIgiAIgiAIglARlvUbEgRBEARBEARBqIgGjawJgiAIgiAIgiBURCPrZgRB
EARBEARBECrCunlLgiAIgiAIgiAIFdG8ZRuCIAiCIAiCIAgV0bJNe4IgCIIg
CIIgCBXRpn0ngiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiCIfy5SfOpXgiAIgiAIgiBSeaT4MnMEQRAEQRAE
QaTyaGTdjCAIgiAIgiAIQkU0aGRNEARBEARBEAShIsIAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAdCA04NubV643
Lp/57+KzoJQuDAAA+HeFfr+zdtmhb9KULgeApCaTeqxwtK5aKre2SFSy0TJv
LnMAABBPMqn/u+fXdiwdUa+YUU6zIU+DU7pAAP4Or5sTCutqd5zyQEjpkgAA
gH9L4OcDNvXrt+vuOG/tPGtTHbIGIO0S7i231tUuuOB8YEqXBAAA/KukQRe7
FdElawDSLr/lnfMa5Oh45YcspUsCAAD+VWQNQNomDbrQtbBeyUZLGdQAAAAS
jKwBSNt8Hk4vzqAGAACQOGQNQJom3F/eVFe74NS9ZxaMGeQ4ZJh9j3ZD51/y
JYUAAADxQdYApGnhgxo0tfLU7zb55geJ/P8lfhd7FM9mM9+VvAEAAKiPrAFI
wyIGNejmLG5368+KLEGrupnkKTXiGZc8AABQG1kDkIYpGtQQsKxjbh2DJqe9
k3VKpY8nnCoUN/ulzKhN7/6tGZ3eX1vQtefSt5KULgeSkb/H7n5dJ937qmoe
gY8nnaOc2KVHrHudbMUDgGRG1gCkXcL9FU1jrNQgkzwdam6ol7nFheSdiNVj
T49S9abfexzpyXvv0OT89ET6eH1u7TLWex6y4EV6I32w27aqxdiHylNsyY8P
T59EntUPFnQr2mPO8+QsHwAkJ7IGIO3yX9nVxCB7+8u+f9o8Id+2WWXRzF1y
eDL3UJJnDRVbrg9K1s9MGoEfXdoULzHj6Od/6+UIkoj/kQm1a3fe8iXuiYuD
dw4oRdYAIA0jawDSKiH0gUMFA7N6C79FafC8OWBjpKnZwPF0Mj/r/0ezBpnk
5fTmBZuPOJug1wwhp5f0X+DyPrWlG0Lw3Rn9Rl/6kI4W8Ph2a/nAsfu9EvSN
pUEPh9Uq0GfBg7j+mqwBQBpH1gCkVULw1V4l9C36HomSIHxf3b2ArkG1ba7J
3UHo38wahEebO+YvbHMjgWNAfOe1ytl63K3U1joP9dlmmbX02jshKV2Q5PNy
c7v85Ua5JfSs/3RtQsk8DVxeqf57sgYAaRxZA5BWyaTuo+sY1Rtw8ndbx/f5
MvOsBm3GXkr+1vu/mDWE+pzpYpbDcY17Ql8WyJuRZeyWpbp3DdKgc11KNDj8
MbVlM3+R55nBlRsvTvDy6DLh6/IuBat12uajagtkDQDSOMmPwy3zahvl733L
P4XvbIGfzq/ecCVly5AmSO/uW3byaUBKFyMFyITPh1dueOKXWtpoMonbtqU7
PQJTsDzSi3OsSljN+xzR1JEGPRrX0LR6h7XvUuIRwT+YNUgvz62Xs6DtnYSf
UcKtRV1nHkt1F6NM8JjU2e5OUGq5UpKBv/vSHgMOJ+YF27dbE4tmqrjpgYoX
NOkoa0jayjblqkrh1blV+679SKKtpd+bL9QR4vPMZf3skY4DRk5Yc+/jPzYf
nxB8Z1KXJg0b1K1YLJeBvpyhafGqVg0ateq+MEXKE/jpxIDW/U67q9qNMqkk
JDhYkqSPx2TSkMCACEFBoYpWvRKkfz5PKpFIla+MlXqKF+pzeVibri6P/6kG
WqLJ72JbR7adtPO1ov0kDQ76uR+DQxT8u0z4c2BlgsLDnMAtvL0wpX23lR4p
9yJPGvR4Xs96PUev3r5pds+mlv2nnviaQnMXxZk1JP5iTMLLOfyXQ+/Ylc3U
dsLtOK/pkO8vXr6PVncJwTdHt7Zq2XnA0B7NOjoM79rcsrX9NpXzd4Zv5vGp
ZbPWXotXtyEv15PXlHabET6/ePotep369frcppZNejqM6tSs2aBhvZvUtZq0
wz0+H5gEZILvs6fv1FxkUAjxcFkyce+NeLXEgm6fOP3rnhxybFbb+k06DR7V
s1lzB8deLSzr9TvtofhIxD6O0YoteTmqTlYL20PKz+H0kjWorGzDJCG/6sqg
EEVpQNSrMLyujPydlKgqhRfHRnW22/ZZ0THn5oskJJN+PDCnR6lcumKRRgRR
4ZrT0uo83s+2dM+fJ0+evHn/V7Rs1Rq1LerWrV6peL684T8qXLKK/H/rWtSs
VKaIScRPLG33JqCnrBDydEpLyyXnfWP9S7DbjT2THTvWrlg4e2Y9TVH47haJ
tfQyZs6WM28hsyqtug9d5eKa4MkQZYLXZucWVnWrFcymI9IQmVnOjZH8yW/9
Y9vULJonk56ubgbDXGWqNl1zMerNK/UW78fLNc3rDbvrlQqfJXot7Fw04oTK
X7xslZrhJ1St8mamEafP/8qa15GfUHVqVilZ5OcpNvmAv3qbDbm0tG0Hp7OK
Kmvh1aExTerVrVQsu5ZIQzdznT0vYrSyQo7PaVelRF4D+X7UlafP5jZTz4Uk
2RakN1Z27DDyPz/1vsbfIfnsdufKtYdf/FU0W//ScflDddaQ6IsxCbYQw4dT
jnn0y2+4H3eV9v7AyDmHo+0QmfTdoZVzV245tndq7/Gbzuxet2jV7vuqWxLe
d6cW1xPnLeMU8+RSLvDjofalKq6+qayEQRuGD70V/fmt/9uzS+Ys3nX81Ohe
dnvOuKxauPDEw6R60KouaeDhYcNc1LtTSP6bWE1LpN1y9DW1n8cIT13sylQe
9fLnbpQ+Pb1q3uLNJ/6b3sd+48kD6xcu3OWm5Al57OMYo+A3FzY0ytXxko+y
ejW1ZQ3JX9mGBX076tCsfp1qZkba8qvQwGbBsxgt7q/X51tXL5nTMLyuzJrb
zKL5ZNefp6iyqvJvVU3ej1dYWw1/qGgC6jR680XKCPW5PamNWbU2y175Srzd
j/Qon0neWNTWtzrqmSb7iErPT6uVs3Drjede/64ipIEn25nqiKNNAi98fXli
ZNMCZvUWxn+SCumVhdZNHU7EaF1/e7bPoWmlKnXbOY6aMn1U8xxaGgY5601d
uWrJghmjh/RpXrdUVr3IZrp24So2Lg9iZxzqkglf5veoUTK/jqZOKYX3X9+n
cyoVbnf8VbQ6MpUXL3yvLmjSbNB/qW1++fDFAqpmqdZu3k33PzeHD8fs5Tsw
exGHR8E/a1qZ8OP+sRkW+Qz6LlFrLTDfZ0stKtvd9VXxu8Ljjb2rlDPVFGm3
GnM99kkqkzwfXrPwyM0qmmwJ3IJM8mJsg8rzznxX43ukmL90XKJSp4dSQs/2
pNzCL/7re/3PpJxzHONfI7x2cew6cN7sGdNnzV2888TTKJsO2Tek0uB1X+Le
RFjY841tdEUaOoaNT35Va9dKAx6MrpfLMGfna0o7l/quH9DOed7cGdNnzl+8
/tLzP9mBEHy5V/lm/31LmYZNqM9hm7YO8nLNmDl3+YbjHqrWDfGZ0yK7vNlW
uukqNVcX+XJvoXk2rWrd9sR4aP354oiaLVerTt6VH8effJ/NK6tvPGrnVyUb
SF1ZQ8pVtmGBn7a0rVY+l7Yob1nnlwquIOnFGXVrdNzwMfouVlhV/qVvIf+s
8Q0rzznlo+p30tbNFylCkLycYp03W+Felz9FthqEe0sba2lo6Bk1P5M2U8uQ
fcPqjNsTrZKU33F6mumJdUrGuI4CPmywrjvePZ79HwI/bm9ctKHL66h/Jrid
mVgxb6lph95G7uX3h/tl1dT4X/WpUd8eB365vWxk4zx68ra5KFOeZkfUubsr
IvE70t9mlcvkmloiTSu7E7FfkHrdnuYwOWovhVRevJ9CfU91Klll7c3UVXXJ
T54+tbpein6xyG/o+bU18pZxin5/ER6sbddl0t0401CZ4LmgvZndslcq+zz4
bxhgs+PctJIZxMYF+96L1dASQu859Zz4WtVRSvgW3p5wKFt17ItU3I38bxyX
GNTJGhJ8tifhFiJJgy50K5LByv6k6uv2u9vREe0ql6zcaaB99+597O369eg5
cH2UesBvfqucCnPMWEIOOZXXlFcWWgXmnYu7N478nF9nW1pLpFGo1gxF3WOD
Hxyeal2xqFVnx77duvS1t7ft0Wnixie//znUd7tl1pgVuJpkwtdbl+7/ULOD
UXRC8OttkzuULVqpl6N91y597O37des04MhTpftYCL5hWyqDhoZGtkL2D9W4
fMJfvpjpizS05U33GAV029IuX8wz+Y+4juPv8ly3Kalf2+agkh2XurKGlKts
w94eHOS85txgc0OxlumsU7FfZklOTuq54a6CvRi7qvw7VZPguqVzpcaLP6ns
IpLGbr5ICSHn5zU01DIasuFPMvt4dYtsJjUnbX2URuewC1rbr8ep6I+klGUN
Mqn75B5D1Knbo5Ccn25RteO2qI+AAt5ua5BXp2rn7b8eLgmPVjbV0hBVar81
VpND8mCfXSF9sYaGZs2eexM2BunLlfFD5j3xfbOyamaxYa72F2I+fxPurui3
OMp9PJUXL+qnHxtTuWrHrcm7AnAcpIGHbXqui/HET8ktIOyH2xLbYafiTLd8
XGdXyN/ugsq0XQi+NrT37HfBHpMaZBOLs4/eFfPxr//b1fYjVS1hkJgthPeQ
L5fXecfnuL5KivkbxyUGdbKGRJztSbaFSN73pprpZhy0TtUh+3h9brVcuhWa
LXqldEyo9wzrbE2Gno+z+6pM+DytWZnSJTOLRDo2C17HdckG/DerYSZ5vaKh
WadP7BG+fsdnNcqqk9t+6V1lezvk24ZamYssupiQVo3E36VFiZ434z9wVfLj
pnO9vJnzNtl9X90+UYGeay1LlSlsKNbOUHv/mzj2oiTgrrNlrvDHNJq5p8Ua
gf5sbcvcZoMeK+o2r8Zx/C182cQ8pUYoWSExdWUNKVXZys+vg6N773oWdHuZ
dQaR2LzT9hhlkAnvZtoOV9hUiF1V/o1vIYQ+GVYjv/J3Rj+lsZsvkl/gp+31
c2jlKGr/IMpjxuDvX3zTaMIQwXuh40jX6DWksqxBnmKsd3S4Gp+5mCLmk881
elfUt4TCkx1DOvVf/ODz7wxecnR0RU0N7dbjbih6huC/27G0poaGQc5OVxMy
n4P08tw+K64EyYSvi9qbiEWGA1bGmGXRd4Wd3ZU/F38qL140XjfGF8vW+Hhq
ml8x5NvmwU5nY9z+ld0C5PeLgQN3xzU8LuTAsLLyG5PqBpDvswUDxlyShAlP
t3XOLBaVbrwsxtBUt50OU/eq6kSUuC3IT5JKZZuuTPDEj3/bXzguMamRNSTq
bE+iLfz0YnM7fd2y6xQ9Do0k+XGhR3H9zHnbnVXVN9VvTosczZ2uxJk1SANP
danSc/6kOpoa4urd96rct4LrXtsCWUrVNs8d/lB97osYT33fnxtuqqMpb7Go
mCM01HerhZHZ8msJGbMp8d/frFi3G/HOGvx3Dy6jrZnLeccH9f/ywwmHhr0X
D6lpKBJnm3BAVa4hEz6s6lXCpLRF2ZxamrrVd8d6t/tqY5u8itZDV+84/ia9
OKO2nn7dQ4oXyEtdWUNKVbYyyYsJNqOeBocFfd7ZIKeWnlGDw9GHn4f67LWz
36Xk5ItZVf6NqunLJadCudtfUtnJKu3dfJHspBdmWuiItFuNVdg4TJtkwqe9
G/bHaB0pzxok17euvx+f7Fp+ZRXJ2uBYHNW135IOeUSizM47FHdBlNcA8gpE
S69WnA+jYpMJXxbYDrgZkem8PWafU0tUsPqUqAPbpUHnBtmuUDlYI/UWT/6v
nQpmHb7lW3w/9+8J9Dy61eVNjFNE2S1ACH22ef0Z1S0bIfR2/7JZB6xS3RQR
Hm/oN/NweKtD8uNkuwI6WhnMtz6O+mHBu4bbHlW1VG5it+B5epCJcYtzCVws
7K9L8uMSW9xzKCX6YkyKyzlSiMvwsnqG1qeVHy+3Xd0MxZoNBqp+sBmwqG0u
Jc8TovG6NbFuq1XPTg3KpaWRu9SI58rbPR+uTa+Q3XTYhutTmhiLxdknHYwx
9tN3Wae8mlr/m3dW1fsUif+u+sal19xKyAOvhGUNoT77GmfXylZYrY5Gvz/q
+Njag9d67BhQTKyh1dz5qvIK1O/o5Lq5C7TZd31lTUOxYe5usV+FvNne0bTc
qNgdRdU7jn947OuZSdt0zhmFuzd1ZQ0pVNmGBX7a3G+gS8Qp7L/JtohYpNtl
xqOoua3naadRq5WOPohRVf6Fqin8QV/pxstVLr2RBm++SGYRT8UzaOoksKZN
S5RnDcEHJjapUKaYad5s5Zsv9/x0efaIgXbdrcqZ9zqhuDup9NIsC5PSI1XP
GSIEX+9TMoOmrvn2Z4p/L+D9KnN9kbZ+/WOf4//S3O+Ine36yERHCL7Rp1QG
sbbZ8qt/ah3vezOGzHigog9n6i7e15lNc1jZn0jmuTaDvtxYOKxbtz6DnZyG
jpp55O37SysW7HZX3sxQ+uAo6NKQhpVLFftf7mzZBq56//risqEDHdtblm7c
Z9Pvvtzh4xMNS6y6ofqq9N/g0Of0z0GmIYdGltfU0GrmdPn3HUAIfTDKdpqH
qqwusVsI/ryhtlH+2af+pam8lR2X+F/p4eLMGhJ/MSZ+C7/4L26X07hAvwdK
m7jCzQX1tTR0+i9X3YIKWt29QKepD+P6ROn1+U1sF7wM8tpRL6umll6tva8V
n0k/3LY3+V+2zpMu+wdF3I90K299Em2HywSPMRaZtTJYHlH5KEYaeLi5SeXN
CVofPGFZg7/7kooZRMUbLFHdVItKJnUf06D+XrfQF1s66otERevO+az4b6V3
tnTNl736mqu+ny85mWprFKg6+V2s/ffuQO+iVSfGmupQzeP4x9frYwvq6Nqv
9FT0jymYNUjdr20Y3LOTjd1g59Gjhw923nnli8JvlJiLWr3KNnxQw5iNP7sY
fbk6+n86GrmjveWRnJrSd+sjpeeeOlVlYr6FTPJiZA2jOGfl+kdvvkg9vkRU
R7mVdmhMR5RnDWFSScDHZ1ubmuoUqzd2tvP4q57B56fVlNfJNgvcFG0paE2P
/GVbrFPdkJK3uqtmFGcrPEDZQyp/j2WV9UXG/+uv/Bav1JfL44Yt+D1uTnp+
em1tkaaF7eFfVYNwZ3m/xedVvY9N3cUL2T+0dGHF4yX/Fq/H65uYFXZccT/i
QhGeHxhWu7SJbkbLw8qfwyu/BQghAV43NnfPqaXTedzC0RMOewU/HWpuKG9W
7fu1tMe7AzbGmZueUToXYsRWgq8Osfkzdd5319ml9cVZTHvf+vVezN9jlf3I
Myp2UlJs4UpPM4PU8xxSHcqPS3yv9HBxZg2JvxgTv4VIMunrUbUzFag6ScV8
2p8uDM+nrRVX76PgHfal+iyMY5yCTPg8u43Vtieh8s91rpVJQ5Rp+BYFPa6D
vc7bVspuabP7mzQsxHublZE4Q9Y2l2L2ewzeO7iUtnYcvY+kQec6m1kk4O1n
WEKzBmnQpR7F9HIr6iOkTKDnxmb1psrb/z9eLSinJ8qQtcVZBd3pBfczo0oa
F5m4z0MW3q+svZ5IVKn9tthf3vP0oPJW877EqoTUO45/+L9ZWllfp93Ee4qq
s5TJGmTCl30TGpiV63HYNXKyPuH97ZXNava/o6i3cGIuanUq2/D3dKNs9vxp
oj8ZVi2zWMtk2rHvv0r7dqbt8N9zH8WmTlWZmG8RnjLnMhyy0Uvlt/gnb75I
TUIOjiirqaFpaZewzDHk0ITauY2Ns6rHOFveLpOvpdpzTUXWEBb5sKtu5kwm
5aZu/ygLf+x8e9u6Pc8VvcaTSdyca2Wu2++o6l364aidsaa4apedyu6CnmcG
59YS1+i+J/6PcaWX5tiuinJ79fdYU8NInDF767M/n2r5rrC3V90LOnUXT3p9
Xr3sBROSsCRM0OfD7YsZ1u3j8nvwmjTwVHtTHZPyo9yUH2YVt4CwiKeUlfS1
ilRwOBs+cZnw5ubuzXvv/JrCRXp1jqWxaZ+7Kr+g79P5DuP+tArkt62pjXOI
xFlHbvOM/DO3nQPjGNSQ6C3IpO6j6xjVG/Cfit9JbVQfF/Wv9EhxZQ1JcLYn
/nKOFP5osWSGYlbzv6nqDfV5z1jLnDnrDJs03tnJeZSz86gxS+7EfMIvOTam
5ogtcUy6G/J1e0vLcRGzb4X3jNIMH+N8KEbdKg1yndg4f+n6c9wimuve96YU
0xXlKj70aaxGeOCncw618xS3sP9VLqepS8/EeMIvhN6xr9b6fILGaiZ0XIPw
8vSESrlytHKYNPZnucZsOfdRxVaebe7SZeIdacREBL1LZBBp5p56NOZU/N8e
LquVJ0ef+ZHjTySnJphramg1HXEx9t3T6+YEy3YbY59+6h3HP0J9t9Y11FIy
uVaKZA1+B8fVMM5tfejXVSrxO9Iqr3YG49YXFPXbT8RFrVZlK5M8n9BnTJTc
ULizspm+SFyp3ebvP9dB22s/QNmghogtqFFVJqZq+vFyQfmMJjNOqL4h/3s3
X6QqQqirY2UDeSNhzB5Vs/umE3FlDW/HWRnpZrI+Fdes4+GdJMsYNndW/ZAn
5NDIcpoiw8HrPZVsLuSwcwVtnSILz8d72Sn5/WK+7cDb0W5/Xks65hOLMvZb
6iZTqxd0Ki9e2PP1rQ2MWsV6IPmXfN9kW0zPoM6+KBlC4Mf1tTJpqc4N48ga
wl/WiMs2X6Oohg7voap8SpNIguv6frOjtzee7+hqJBaVqL8o4g4Q96CGRG9B
zmdWM+MKbbeo/J3UJa5bs7pXeqS4VnlL7NmeJNdLJGnQ+S6FdUs1Walien+Z
8OXI/L6dbYaNcOznOMxJ3tgcPW5prNam9MaCzjOOxvHA4OmWrt2n/Hx2/e5w
/2yaGrmKD4maDsikb1f2Kpm/zIDrP2f8Dn/qm1msUcxqQey8Jujz5cl92tsN
d3boN2B4eLmcpy87GyNrkDfMJnTofztB7ZkEZw2vLy7s0b73CGfH/gMi9pfz
uK3nVWQNXxd2qr/pQeQtJmCDTUGRhpb18GjpgL/HvtbFsjZxPPLr24W/vBZp
6Ngu9oi92R9ui7vZH4p9Iqt3HP+Qf/0m2bRr9tqvqJtOCmQN784MNdXR7TT1
/u8SyyRuGyeMWOqieELbRFzU6lS2YYGem/o5Rst5Q77ubpRLSzeTpUvEC2LV
gxoixF1VJqZq8roxvrB+8RUqX8b9gzdfpC7+b5ZVySjWzdzoeOpYys3n0brO
Deta1FGDhUXzbouj/q2GelR8ujpZQ45ijgrnuItKGnSxW5GM7SbcUdVcC3Ud
VNlAx9Dq0DvFvxXidahlfr1qnbfFf3W5MInfYbu+G2M0DN4dH5BTS2RaZcKb
0PCOi0NnqhzUkLqLFxYxBtAgY+PTyt8pC6GP5/RupObJZFm/y+57Sju1/nBb
Zp5JXLz+oqjD5z329zbSyjxiq6pBYWpkDdqNh5xTlF0G73Eskb/iGNXrLKx3
sD0TfdI8id9/7f+no6VXcdPDkPAhCX2nqx7UkOgthEUMjM1RuulqFb+RmOs6
tsRf6ercmtW50iOpzhoSf7YnyfUSSRp4om0+nfKtFTyajiQTPq4fUK/vrMtx
Pgv4cuvwFZUdgeTtk7ntG2z5NcQg1Htv4+xamjrl1v9ak1omeO1xqpYjX/OD
f5YdE+4va6IVMdtSjKsx4MOhHlYtNl6No/eFvIF96fCxL3FNZXpuuW1za+sm
0TVuVCmngUmNRjF+3MTauuXoNQ+U1HPCExfHhi1nuKo9G0Cg55aWDf8MPn21
s5uhWCNfxTG/1wMK+na+b+VslVutfPfr9JMflEn1jURi4wmKVgeWBt45ctw9
xtFX/zhG2c7h5rm0q3TaoeisVzdrSKorXZ4gjLUy1jW0POih7g0mERe1OpVt
mIfLoHGbY8xK7b+5X1GxSKfjFHlqE8eghghxV5WJqZo+nR9qol9uvfIbWVhy
3XyRhj3b1F5fJCrZcImKF9bJSRrgcfm/I0cOq+HIkXPXX0f92+TJGpSsCBlj
O1d6mmVUPcHID7fFFTOKzeotjN0fNeKzvLYMKJO3RN+rnxJyYD5fGjd80csY
F74QfLNv6Qxi7SKLL/ndWd5/icpe0Km8eHKvt7TPaNhcZVeEgOc3Tql5Mh37
79pHpTPrCneWNtYRaXed+SRKmUP2DSmtq1/79zAExd807qxBp9VYhUtlhewf
UtpE0dQof4oVfGVon/mxVvMJfwekqaHVZNgF7zerBjjFMSQhkVuI/B7zW2cr
12qjit9IzHUdW/JkDepc6ZFUZw2JP9uT5HqJJA08GZE1bFKSD0muLGnRpN9B
3wStdBaDn/uKptZzfnd+licRs5rnEIm020+KfPvgd3xGw+xZq62+7B3lj0KO
RJx7zUZejnrWCaHPJ1lXmXYk/tMuKOH1+sapE8djOHpwUrX8DZYeivnzEyfO
PHij+OXM96crrKr0ufZV/WpQemtp677z/6zUFui5qY6RWFO3wsaItw+SHzdH
WuUpUmP8oyhNMiH4VsSxNlt2Na5JdH5KyHGU+LtYZ9eu2nV3Yt41JNWV/uPV
ogr64sK1Z6rfeT4RF3XclW341Kyj+uyL1Rv167WxBXU0cpoNdvV/O7PvCBWD
GiLEXVUmpmr6fGlEfv04prVJrpsv0iqfJR1NxGLj332Y4094c8tlw9q1a9Sz
du3G/+6p99Y/JaiZNcS5GLIQet+hgqHKJZCEO8utdUUZ+y1zV7Q3/I5Nb1ig
WIcjT9W8R8QgvTi77xoF00FIL8600BZp1uq1eYGd/VVVl3wqL154CV1XNc+c
o/P1+C/JFH9Bm2wLaWoXXBClLpVJng6rapivQhyPp9TLGhRml5L/JpjnUrJ4
UyTfJ/McJyiYLsP3ydyy+mKjfN03r7Gftk/loIZEbyEsoiPEtMZZq3Xbo/rX
UhU1b81qLnuuMmtI/NmeJNfLr78JOte5oG7pZmsUdi0K+XagpVnjw2o/3VVJ
cnZqo8Fro3bYEFzXtzUQyZtYjq6B/mcXtchpWGL6oRgz/ASt71VApKHdbVbU
DD3s5d7eVaxjLiOS5OLfQ8l7ZfeSsea6V0UIdR1Wv9XxKF3+ZMKnOS1zizS0
Gg85F+j3YIK1qUmpfpejT4YvDTzaKo+2pm7VHUqms4shYcdR4rfDKrNWnT4K
Ojslfw+l94f6ZtHUUvIeVrFEXNRxV7YyybPxtuNiT4oo//mIGpnFmnlGb1lr
N2C36juiOlVlYqom77tTiumrXuLwn7v5InUJeL+hjrFm3rIjnyo/+l+fHp4z
eZPybUhu7po4wK6/muzsBi7c+zwpnmP9FUmVNYSFec2wzqbkoU3EpqTuYy2z
6hk1Ovo+ZsUu+eG6qH+NipYjL3so+JhvL6/cfvnnqVfAN8/vsSo6mfB5nq3j
HUXH1P/t2ppZxDqGphbdVC3LlcqLF1mQs5Nr5E2mib8ClnbIpa3f4ESUfDdi
UIN2fYfwudB9n2/ZeFhxP6VEZA1hT9e2zJy90zWl16bguq7f7GMKOiDIhHfT
muQQiQ0Ll+h8TNVaPInfQsRWQl0HVcnc3PmK6l9LVZIta0iCizFprpefwheo
LZuxmOU8hS3wVzu6FK4yQdGVHW8S//O9ana9FH1qoFDvA83yaonExlYtLbPr
F3Te+iJWKQIWt80R0YH/bZS/9F3SIX/HKcr6CCWZ+GYNoT57GuWuuOlRPGYs
/3B2WKPuO2O8t3Db2yurpoZ+9hpN65rkKNzxxKuYG5T4766XWayVoc7BWBWy
Qgk7jiFfN9Q00G40OOa6YxGSO2vw2N0to0in/7L36jdME3NRx1XZhk971X/Q
YUVHWri7qrm+SJy9QPERa+IorTpVZWK+hfwI1sqUddw+pb3S/sGbL1KVoCNj
qmiJ9Ov3mr505cYDxy+99IyZor47O6pYJu3avfalSPmSX9JlDcG7BhYvWneu
klm4w3yfziunr1mlw9aot4+Q7892zbevW6XOiMUXvBRV3DLpm7GW2VqN+dmh
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
Fxk/9wTsHiSLXkPPGpZcNtfpImi+yWfpVHXG1sU6uSR29ug/rwM3WAX/aB/g
lWHe/t8R+0O3vIam0jtb1h4paMHcdptCmAEs/GC2K2Epurt1sODMjjwIXMr+
2fJTPHNaGl4mPsxM9RkjbZbcfoxQeXLFcKUZ/gUtzZe2jhmpvaewnyYidnua
pW0BRQ3fX6QWIM/iJ3gTSkOXv+D4oQo20UtDdWFoZ5VmqOXjtqmiSxAjf/pK
NnJyoldID13bg+y5Dlgej9Dv3XMleQbBJ/XUZAdOEUALD1n+nGQPAxuADpg4
V1WtVVcQgqz6FVDL262q0g7hPS/xDQAwAZSdcCGFuo4N3bFW/e3KtacwyU3k
EIbzGEkj5IpzeKg0yNo+nWSJFd6zG8KDGjXDn3zlxTU9c7I+Q++ElvDbVaMk
SddPcEoLWhjaLY3/omwc4km2T/1F6zFoFP+aA1/I98L+Pnb3PPub4YiGml9v
miigYnqO3prRUnVzwWAe6dF2yMcW+VdWKk7xZJgJCrW8t59hmlj4ZPUofjTv
hDNpdFXE1r7ZriM7fXnEo9OmfCj0zA23qAxE9goGRw8X07xr60TQ3EYOj5j/
TjY2C0HsExay5r60pk7NqVXDuXlGHmP25KshbK2c9Cj4ckN96zU0/j2vI4qW
UNj8nky2sjeRN9+0txu29vW9J8Vtv/v79sT8meb7T4eTOBsSuM10/Tn2ZUPX
3XBfefY1oUmh9KC53FzculvuMvnea74f15DWjSPNJE2lD9eriBLeZl1Nopf3
ncq/0YYKCx+TrKyy9wfVFWZGEEt6Ql8jlytMcP7W4fJAmJ/n3O1jux8AyQl6
MM3StsDszbcbSC1A1vgEg1ldecFpZlxdFvn72ElOyuxZ12XcDVftJ+pa3e4U
pjr3povdSbJk7T6UrROiuzpmziEWQqRYHY8tVTfmS/MMhducIfSKiM3judGi
awIySM0GbAB4SEa4pH0YsyeV/YDmq3bjpppHsnJGBQD0CLpj7V/KPl0NlTEj
h8vImCQWlSQGuzk4Ws5S1vS91FnDnJizKafs9gNxncbW3bW1Pt+2iwA1v7Ga
LIDmHX/6Vde6VPnhwPYDn+gHE5YdXCjTdtU1Z7SAgaHdUnjbyTuy/cC69JXX
SD4uykkb+8h/y6UvjO0XbN31uRK8BnYP6H20/lewugBqglEw8sr4O27TWO3d
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
zbGOExXUYSoZ4kliVaT7jebntzpBHndKvFSOm2mjggMdshVbf81QfJBTRDfW
FMD/HbiGgpcP795NYIK7d5+l/ewVoRiPNX46lzmSQj2F4MrFdFHywnfHiRyq
CQFqTt+iLIDmHXPyRd2701uDkQIaifyMXi4kYpqMdILZcy1gQbRbMHGeVjfz
qOeXstc+o/i4hox3/lpfeHDLTmaSGlpJKyzBa9h5CX67oDrrjIGm1esyNthj
eFz+XjPj2K4YSOjreXMBFEpxmm/bNntx2mHtIZKrdj8n3zopSyMqNXSSK9Um
DBsFayUuK79ePk66T80dZwNFS//b1D9OSkpJ/0Xn1WBTg82MbW7XML2Qs7dZ
6AG1fN9johlwFy6xmT4FNyxFeOCvLWPSa2Bfw3bSntSwMZB8UNffCruAcINe
d2HoNZS9PbTR6Vr2Twrych5uVhVC803qHOZ46PcuQ3FuvkmuJ85faCfy8vXU
cg6cO9QXntYURA9Vtjx9ofOrohJeFdLpiVDmeXNZBhEX5FQHr5AzsE2q+Png
3IXkChr52TLNwlLyYqeCoHI4nRK7dT+D1QX5lu4ir3aLfbx7Og9KYOupwu5/
W32gufSUJZGd/24uf3f51DH/XT5XnsOYRsiyEYa2t66YnJoXuSlY9WnfBH70
BKOT3T92oZatB3BgPGIf+WnxoERcLsKfVhfErhdCcRGM84IeZQSQ+C/YAJhb
25Xl6Nb6w70JmsvPpxJBdmcr1PLFQUOYT1g/gemr4dndIVuxtVf0RQXpbzkC
AByCubEGNzOT6mmL0LnQqg3c88NbwmHqEuCeH9TlRXHrbIwKsrV7xSDaFvoa
ZiomszoNqSB2z7WABcFuwWOzd1n70h4HE36+c6YYmnuYV/Q5W/vrTEbyk+70
5Hc+D7tdUBm6fhJNXeseUvX54IKlYeRTU+PfKD1pbsK8fTyloeRDyBw50Xl2
cVQxsH/ubJHg5ho1M4DSJmSnYPTp9sE9pjxu8fgFCdQV+ZBga7PQJefGJk2T
U931sX5dWjGIZ+g+uGCnvopQwmO/7yDe1DAJrtgI22CUVZSzf4NtMkzIWVnA
AkkUeoh/QrtqpPAJQTG5jRk9r6XPLBVvdinxoWdb3WauXeojNozUXHGZSTse
an65YbyYXSi9smBsmWbhqXzvP05wzInn8JJ+j1ohzCtPXlmIGP+vK84rODMm
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
8Q5cYg==
    "], {{0, 523.5}, {781.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{781.5, 523.5},
  PlotRange->{{0, 781.5}, {0, 523.5}}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"5deb84cc-63df-bc4f-b245-0bdc4b251907"],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XVcU10YB3A2NkaLjYHdndgBtoiNLYoYpKSCSImFhR3Y2NiKHYABqCgq
JtIi3R3bHS9jxBjb2JD0/X3/eD+vY7v33HPPufc8555zbvsVRrNXk8XExMwk
C/4zW8tCxdRUa8MchYJ/aKw1012zdtXKKWvNV61ZZTp0hXjBh08KvtuIIibG
+v98AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoRWSnxYUFffX1
9vT2j2ZW9dYZuWnRv4P8/bw9PT8nM6p661DHMImcxJiwH/6+Lz28wlJwvgEA
AACqUO6TfZrjRvdqLi8rIyMjK6fYZ/h4m7MBROHfQu/ZTFYd0q6JnAzrbwqd
+o5aZvsot/iXyV+PzxrcQaHwb01a9Vhq757H+jjD6/Jmux23I3Mq3jeR93W7
pmqftvJkEnmk1s3cin8hEvrLI8tHDmwnTSbJt9B8l1XlQcm/TYTzWEfEvnSc
PLJPMykSWaLXcV+hSlNywJ0ttrs8fmZUd9oAAAAA/gkZV416i4uRlRdezub+
E+F/crYMSaxl7/W/8nj88PFmla7DN/onFnXt5iacG8MKAhrZ3uRqieUG+Pmn
Ejz2nfnnmLK0+F9GDakhH38l8OheZhKR9uMVEDWIiv95rBpEbuhH//hqOCX0
h9aDJYSNGjKPLm5FEiP1m3W6qpPBt7QDAAAA1GtxXlbtqGLNuhh+K9e3nBN7
cXwTcQk5ldth9PI//HHOYKdbSsk/mfTgIwaTRk0wefmnTBueyQjbssryB6+O
a3rGtYkNKX8XNTDe7V995HW5iIcl8+A8RUQNouJ3HqtKesghA6uXPMrT3yLe
759EEzZqIL7cNBs1aIzdxcCqTYSA0g4AAABQrxE53lrdpcjUzgdecbe9iZzX
y7tJipFkdI+El2t5Jx0zMnuXXnGDnJ7xaMk4Mz5Rw/VJDal/FzVkuqwZf4hP
1HBoPqKGOifivv789dUUNUwWOmqoLgJKOwAAAEA9l3PdqJe4GEV9/Wuutlz8
m80zRw6gkUi9phxJLNvxnJt4w9j0Fs/GOpfw+7qde5pUU9SQl/pIo1P3g4ga
6o10l1Xdppn/s1GDgNIOAAAAUN/FuBu3pJSfv0B/tNnQ5eWR4fJkmsKUR9Fl
woaQG2Y7biVXuOWs6EdL+8g171YtUQOTiDlvOIBG7VxFUQM9JTY6MaMyw3Jy
0uPikwW0FOmpCQlZNbW0D5OeHhMdV227q3wuFTTsA+6bdJamqFU+ahCQk1UY
NVR8jDzPuODSzt5yakJ0XDK7uNLzqiF2AgAAAKg+jCz3BR1o4hK9T34obXER
eZ9tDPb8yQm3n9CIRJIzPh3F0fhOP2Nm/Dq59IPM366aYwb17NJOsUlr2+us
WbRMRshpqwX9lWTJJBJFpu0wFdVCk53cEkt+VRI1pMZ577MxNTUzN9aZq6Ky
6JRHVEUNfYbfdWv1YW0kxUkkkky3wWPZW19scTuz9DtFUcPb9LhHzrYmJmZm
ZrrTVVQMdzznWouVkR18wX7RhElLrLY6bjCYN2780tOeFSagKB98rmycNnrs
/JVmNjYWBro69gfcEzmagjlJnw6aL567cMU6Owfr9cbamquO3g8qicyS/Y/O
HDmwe+c2is36H/HKCnnlbGlsYr7ObMUcVbXF2z8UhmlEnv9WzSmTJk8tNGWK
muHzCEZh9obu15k6eUrhx2prPSJZHyYH3TNfMH7GUvNtjrarNMZN19zxoSjW
o784tHTogJ4d2yh2HLT+e3bcw6M2xiZm5uUypPx5FCKXhNp4WtBNo3nDFWVY
J6xJu0Hs4jBhyro3yULltOCcLFQUNRzzCXU7bLNu/QarjdZmOpo6Fse/xpZp
nRM5PhYzRvTv1aVNqyZ9px4Q7hgrOOMVlnaCHn55i56eqc3ug86H92+32WBl
pq2y0NoHq8QCAABAvZJ5bnUnshhVw+5DSTMm2X+Xxe6vBGu68WQJEmnA7NMp
xe0netoDU+PL6WW2wMhOi7phOZRCamB1Na3kUyY9cP2ICp41KC/YvNNq1/so
dtMu84ZJH9nGk91ChemHZbzeMZYq8FmDnOI8x71Wpz0i2avaRL1Y15bW0MA5
uKQpyMj5tlm9XbcxW0OKtkEE3NVt22igs1c6r21ySr5lO7pFm+nXP6cWf5L9
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
gn9DjLtJK1qbnc8yBXynwtJbk0U0N+HMqAaiXRZKMIlEPy//9Eq9PRlVGP55
WVGXpnSZeJtXGBv9zEiRItZn+snyFS/l+57+smSpxhPvlK47nHRqlardVc4H
mBnXTfqIk2SXOn7m6qD4/cig71DrX3VvfQMAqFpJH7d0o8kYn44V8J3od04j
Wkr2n7YviP8kAnrqCxN1FZ1tHlydGHmpl1UbUNXMXwr5tIGe/t5qklKDllOu
fuI72jno7JxWPc1/1mzU8NcJS79hN2OyxpZP3N2G6XtnN2vezeSHsIeT8XiX
WhOaou5BvwqHU9PTb09rTptu6YXlG/9p9Kf2Q6Xl1Z7yn88kTOmtySKal3ph
rEK3Iz6VmRHAyLo9s+dyAQN7+EEVhv8Buue2MUPnX+A5XkhA1MAkwq1VGoiR
JDR3/WRH5IysR3OVqOLUTvtflH493HWJFEmsw4itf8qWSCLvg26/VpaXBTUk
AOAf8OuchjSt7yk/vkMF6OkvtXpIy7ec+7xSi6szsu5Ma0bpOflIilA3+Yzr
pn2p4s0tLv0R8PWwSwva1vSbmKovYdnOS1tLSE94KNwbuSM91reTEB8y/7ww
S8oz6QHmw+W6TdifWBcWmoLqkrxnVjOlARv5j5ERqvTyV/VFlJ7hOqFxJd/y
Rs+4qd516VuRowZUYfj3sZ589Wi+wTWR518FRA0Fl5Gd05uQxKgzrXzYZY3J
CN2zuHfHngvucYzYC7m0QIpE6qKyq9y60PT7VoP6TjtWB951AgDVJ/e2eV8p
uWnPk/ne74KvasqTxScaPhXuRkqP/P7ixsVTp1xufgxnPVXPTXQZLUfuOHJb
lBCdZXnJN6Y2ozTpqOcv8EFnxK0VXYba/67B3rcqTFhWwo+nty+dPOHy0Dus
sG8yeYd6Ywpt2BWh5mmkHlnUWpzSbo+7oLEoHDIL2jNNOuh8xoPjfxeR47Oi
h1TfGaf4lQkhS2+JGiiijCy36a0Hn/tamci/clEDqjD8HyS+te3caOIDPiuQ
CIga8pLvz24rQaa23/1cwOPI3Lvr+4uTaAu2fCy/g4KNt248w6M+vCgWoOpk
vzhhYWS2Rn3S0usf0xnZwVecrDfaWJvqLV5ufC5MxFe11gcZ++c2b9x+Df9b
EvFu7wSKmITOkQpfNkQPenVk8SSVFRZHH3t/8v/keXK76e4rv2Le2naUEOsx
+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
dqN0bc9+jS1/yWBEfXvsvGezje32k5fufwrjsZyLMJmWGHTfZoVKKznxgp1R
ZdtOXWpz6210XXgd998nLDvp++3TTvY2tnuOXnz2NrR8qSJy3q3qLb90x3f2
Zunpd6a3aGRxqUxPJiMz+LLjyiHt5QvPhmyv0Ut2nfMRsNJ74fLdMgPmuNRi
QEtPu2a/+U2t7JpJpAW8e+H9MTy73KkSJrdrGD09+P7ZXRvMjMwsHU5e8+Z1
4eEnw3mpUtNO+l9yeF+ChCy9FRbRgraHm0X/jqWTmDKOa7YtOwVM5CJaCZV7
XwOqMPwfMIkoR/WWi7byfVO86DJ+eLudObzD1sZ+r/N1/z/8mgopx5Z2mLnB
u4509gHUjPg31h0kaCv3hwi8IbEG/Ct2MfxWFFPn3jDp3W2cUyw9/qnbi5pI
JbeUh3uWzVy88dxtd69XD47YzusgLzNQzc43SqhbdUboocEykiv3C15ghBH1
9d5249k9FSUL7nXNu655J/Ky5yJkWnbStyv7TCcPaEEliYnTOjk+TBBxX9Wl
WhOWFrRvgFzpnMfYl+vayo+5FUYP8XD7XDa3mYzkd3cPrJk1sDGt4GxITNDj
sbYLW1b0qRFyEou3f6vFyCvRd4ejS3Tt7Z834XO7ZkT47Js3ddH2E7deeL+6
ecZ+SneFpu2nHH0eKeQb1X33T5KSHnNL4HJnf196C0fmN5xs7MFuGBA5r5d3
ky+4WmbFeT56mVj2m8IW0UpgZHvqz7D6XqkuTVRh+OcF3dDuMtCqhgdbZsVc
nth27LXqX/wBoC5htWy53tTAS+Kumc2VBm5kv3M24/c19fZS09a9TI1w2bDF
u0bSyYn4dlVnqcUTjhfBEz9u67SmkruO2RYixI2VyPuydrCs8oJLwqzQwciO
uGk/sYFE54OvRR0gXIlMy/7hvnlIYwk185d1rPuiWhL28+xcWVq/059YZY/J
iDi0uLNid9PvWZH7zR34DU5I+e1pPK55824mP/h8IfK+XjNa96NvanGmSO7T
PTZP6tJbTtgqkdvVJyvqhuYM8w8ca7RmRd+d21lSsuGoC5+EOnfJn7f2kGy4
wbX8CurlVb705safV2kooWHHXimC4X9lWQvJLodeZ30+vf4UnzJWYRGtJajC
8M9i0n/ZTuztcKcmZyXTn28dO1n/IZ6Iwf8KkxFmP7GJbPNFPgKnqtEzHsxR
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
FsH5UO1RA5PISUpIE+lQmPSkH75en0NTRfiJ6HsRGj0m6L2Pb4gwrS96TnJS
WjU16oUqTrV0nSkortFxyezR8/S8OhTVCKpHdSpqyE4MfuvlG5kmQl9KVsy5
1Qa3Cq/cGWdXdSKTaIu3f+G8TkY/t9zgXJtjwAAA/q/onoeWT5o0eWqhyZOm
H3NPueUwe9LkKewPJk81805kMunBe1dPLfps6kq3n6z5aclB98wXjJ+x1Hyb
o+0qjXHTNXd8iBZ8U6/Mvm599jCbOrRP944tmzY1dP4T8uqIqeHa+ap9pq46
F03Pz/ztqjlmUM8u7RSbtLa9zprFyWSEnLZa0F9JlkwiUWTaDlNRLTTZyS2R
IyXZn+44zB4/adW6LVttDWeOG2+0y13wcqNpQTeN5g1XlBEnkUhN2g1ib3XC
lHVvkkvuXUVRw9v0uEfOtiYmZmZmutNVVAx3PC+3ZZH3zsYkYu/uNV2tY2i1
afN6nVmqk9a4+sSUDzqYjHj3szbaK/TXb7C0tFhnvmGfd+B1XlEDI+zduXWr
Vqxdx/qeuemGs88CjyzmjBqIz5cMRwzs3aldyxZtlvgUfig4H8qfjhI5SZ8O
mi+eu3DFOjsH6/XG2pqrjt4PKpnmmOx/dObIgd07t1Fs1v+IV1bIK2dLYxPz
dWYr5qiqLd7OVa6Ey4dqjBqyYl5uM1mtZ7h+02ZrrZlj5+gc+RJb/leZ72/a
L5i1UNfQSH/lAi3jIzcu7TAx3XT4mNmgNpNu/vAUUKqF2QuR93XLolH9enZu
rdh09oZX6bFeTtYmpmbrjHXmqqgsOuURxXXYCT9vmy+ZrbnG0GjtygULjM7e
vrTJ1NTxkPPKUW30jgbzP3FEkOd+w1U6xhb2m6x11cZOtDrmlcJxNkQ6ceUJ
Ua0EXGdybjuoD+7XvX3rpv2nH4mO8dq5zlB32bj+Q1c8DsrjmTCzdaaa08dM
09z9Kb5gC+mvL2wyNjIxMzfUmDB6meVVzsWjCHr45S16eqY2uw86H96/3WaD
lZm2ykJrHwHHwyQiDuup9O/dpU3LJiOXueYKnT9Env9WzSnF18UpU9QMn0ew
PmcyQvfrFF8J1dZ6RLI+FFyP2MpGDWWuulMmT91yObwwcxkfXPQnTyrc+pSp
21zDP5Wr7KKWMUbmr7O2S+cuXL3WaO3y+Qtsj90+td3UwuGgk8mY/lMOxQod
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
rdfGWIbM69EKC5Ps3aZe/T1GUJC4r3LotuGGutNyq/9Zct9dZ5bU02ww8LTC
G8bLLR0yiDIO3RR1pkTJqYnV9fSq7ohYkM7/zVqnqdd+/VPwxaUtc+eovf76
nykHf7ze26/b1OdxLessb6A6VjYsWGNaxI1buLNq6Pobv+9RXjObGutkjNb7
SBp4sp2pjmnl8VE6NiTs04W7q1oYiPW7z3r0a98Iz49M69+msp5++PPPd0ed
Z+4Nf3L4/dk6q3zZesy68/t5nTTYbbFd1axaojJNV33/9QlC6IsZLf9X3GK6
258PDb612aFULm3dTI1Pfo5aku/z2+TUzdTsbJSFt1TuBwWH49PNuVVz5R28
9tnv9k7o92sDq+es3W1L1OXRnq5tqSPSc1gdtUdK0Cbbwtq6FTb+XNRJ3f3w
s9iGTU55qZU1hHhtr5dVUzNWK877zdnx7UvoinTslod3pJe3Uadb59QxqLH9
8a+VFITP26cMsa5kUMxqwTdpwNYRQ69GjM05MbGacd7Kbbv07NW7t41NHzuH
IeOnLTl02T1qq0rZWa32p4SFfN1Qy1BcsvGKqLMwfThmn0Mr2mQ7Xrenlsic
t07LzpGlse3nMHz01DW7LnkGRNs5MQ6cv8e6Wlk1i9Se/vZX+QI/HRs3uF2J
DLq2iz1C/U8MH7Y78udqHDhVVJxOcdYzEbOkGmYrbB97An9VBdMpu+7un4KF
T+db2SBLfpu7Qb+yhjIZS1jN9YhytF659K3edOmnuFKvEO/tVlnE5Vquj1oP
xmv/SPzPdi6sq61vviVW81jN6yjiOOoPWq9wTraAHQOKa4r1ukR7W/ebgotd
zXNMnkUOrJS1aJUW3X6e8v0ch4yevXTnnTfROrOpEOx1xbFWIaftyt5WB2y3
M8tRdKCrksTE7/XSKoZiTZ0SK6+TNwBAcpAJ76Y0ztt38Z9VyYTQ+wMr5Rmx
VUHXYu/nLo4tqtZtNXjJhq1rFk/o173f2jMxe24n/rOkQZed2zQwN8uZUV/f
0ChfFYv6rXstc/91O/V9uqFr47ql8hnp6+tny1fWqsnY+78aD6E+V0e3KFGq
tv3StYuG9R9zMVrXgqDb+8c1MjfvNmTexq0b5o4f0KvfTDW74L69PLdesf+1
dFiwcpHzoHH7IybGlFxYYVPfolyuTPJSGBYsU6dlzyWvgz3XDG1Wu3KhzPJy
Z8xWqmrdXhNPJebTBYnH5tEtiuYr3mPU8p17ts6bOHzGupven/+zrZyzUIUm
Xe2Xv/rV/vd+tt+hRa3mvSZu2Xdgy6oZIwePO3BtTV1DkVgzc7GKdZzXPP61
Y1+sc2pVx6rnnPV79+1cPdl58Jwt12a0NNYQaeYoUKG5zar3Eum1tf0b1K2Q
O7P8e2UuXK52j/EnVO4HVYfji+suu2Z1W/YYOnv56jnjB7S0shww4+S3P69g
VndsZFHCJPyTjPOWtmrYfc/9oCd7RjSyrJI/S/gezFvEvGHz8fKWoRr74Xex
5X+YqVBZi9Y2y1Xs2E9npzSsW6tMwSyaIg0NkbaJ2a/lxOvWrlQ6f0at8KGw
InHW8ft/Nn783hwZ2LRUwZItpqzYvmvrkrHDRu+/7f3qhHOpbLlqWLcdszIy
X5O8PDe5ar68JcqWr1CxYvlyZcyKmGTSFYtE2qXrTbz/Tar6rFbnU4JDH83s
2bhG2XyG8r1jmKeSRcPhy+76fdzfz9qqXMGs8s1mzla4hmXTFREvZfw/Xhhk
WcC0WHhpKpQvV7pEkVxGevLSZDaxXHU+PMtVcuAkjw6NsyqRr3pLp7U79mxY
PGnk6DXPfL5sH1Ete+7yzdv133svQP0Dp/r0Vng6/TyfldYzwQent7OsWdw4
/HOMipSv07Bxj70PQtQ8o/IVq96oxYSHQcEHprb9vZGiFep0GLT9S+At+xq1
pq5d0L/XoHmrd7i47Fw00a5d5zFXVHZPkkmez7NtUrN8fnk1YJDZpHKdRstO
JWz/SI6PrVKq4ZIvij5N9XX0+zjKN53NpEy9Rr32P4qZlXjdmmiWLfbqMAou
diE+55gg8dw/vr5J3qLlIk75smVKFMybRVss0tTO023y2R8qp6wNeLunp2Ul
0+wG8s/JbPy/qlaOFxW90/l6c0qbvvuUpQQS3wsDa+U3Kdb97Pv4DaYAACSY
79tX0Z9ACl9fv/RS/rxQCP766PrFGw88AuKcyjzRnxV/IZ4vb1+59thHyTb9
vzy/evHKk7e+8eooK4R4Pbl1+faTz3F2+VAtAZ8uBH9xvXXpwuV7H3x+r18Q
9MXTO/YrmNCAT/evXXn46mtoRH+te5ev3Xd9+e6TT3D0O2r4YE/X69fvvvwe
/gRP8Hh05cZdVzePT75Bcd95E7Afws+WG9cee/jG/2SJsR1198Nf4vf5+fVL
56/fd/f7vZxwkNdn78gWjeTa6valzQdf/xhtx8gk3tf3jauaW6/J0HNqllPl
p6jr+7N1DcwqzzvxIfo+l3x4dMDByiSX2SDXOJr0we+f3b54/vLjN96/uzz5
f/P0TVxflNhUn06JqWfiL+DD+/C1TGQSnyc3zp0+e+VJos/YeAn57u6mcka1
xFxHMsHX7fmHRNZdMcsT+mJm6xIthx31jr7dQC/XDWMaGOsWWXRB7aWhAQAA
0gdp0H/tTLM57/RS9I/hk9ibVhrrnmzpTVjwZtvCVTpsU9ho83k0o6Rh+Q0P
kjJRRzr08bh93hxtL/ooSD8jJobNHHsQNwAAQDonDbrYrWhWB8XL14Ycdq5Q
ov5ChZ1P/o7gPY4ly1iv8FL0iV+vjS2Spa5LXMthA6p9Oj/U1LjRsVizWISF
vxa52bd01r5LXjPxEQAAQHTS+zttzYo0WnfhY/QOJAG39wwqU6Dm6kveyVma
8KUfShbpPeNcjAUavj3f163y/zpPou8IEksm9Vjeu2ylJtPueUbLQKUBL1Y7
VC1de8IjRa8hAAAA0j3hw4PdTr1bt+nY087RedKU8SMG2/fo0KrHwPnX3FNg
gpdg70drJ9q0atmxd1/HMROnjHUa3K93xzYdHDaccku+rlJI02SCz5Wdk7u2
atmlZ98hoyZOGu/kaN+7XasOoxee9GROIwAAgDgI/t6e7z98U2NweXKQBHl/
fP/BJyB1lAZpkUwI+ub53vObf3KOHwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKnWt1fnVs8eN3TQkLFTlhy5
5hGi+LcCnl7YOnP8KOfRk9buu+2l5JcAAAAApDnfj8/r0bLLmM0uZ69cOrZ8
fPuCmTJWtJ5w66M06i9Jftyd1qFyc7uNTz4HhwZ4HJjb3rzmgLNuZA4AAABA
mic83t2/m9N/P4Q/P3nq0t9EW1yszvTXwb9/6LPVvlSZxks//8kk/F1GVjSz
mO4eHAYAAAAgDRNCHwxr1vuKtyzqD2XSN2Mts4jFxqN2fY38ic/DmaUyZnXe
6RX1174/nlUyg7HT9i/JV1wAAAAAyS7g/SpzfXFW0w6n3kXtjxRyxLmCpoam
lf3JiP+V/DfBXFfXfPvT0Kh/Kw36r52pboXW639EyzkAAAAApCmBnlsss2lq
Zai0+WHUEQqSs5NraGqIq3ffK/8fmfBxcoOsOobNzvlGSw+E0EcDKxlkLdD3
fhBpAwAAAJCGCe8fnr388HO0kc9h/ut6FhBpaHeYfD/8N4Kv9iqRQd+4w9XA
GB2Z3EfVyaSVweqIZ/S/BgAAAJDWhXofbGGirZu5zp5n4V2SpIGHW+TWMsjZ
5UaMrEF4O97KSFO3wsaHzKQEAAAApCuSi/MbZNQ06jXnbuQwBon/vsbGmpny
9LgVM2vwnFTfSKxTcvVNsgYAAAAgHfF+vKx6dsNGAw54/ep2JM8aGmXVzJS7
+82YWcOHifXCs4ZVN8gaAAAAgPQi6NtZm4q5mzjs+yb580Np4OHmuRT2UPIY
a0kPJQAAACAdkQY8HN+4eDvn4z7RBzcLwVd6Fs+QIUvby/7RswbJS6eambQy
1D38kdHQAAAAQNonk75Z1rNmn5mX/X//RPju4eEV8R8fJtXPop3B4tD7aNmB
EHyrXxl9Zl4FAAAA0gOZ4LXbufmABTeCovww0HPj0NHnI/5TcmJcFR2d0qtv
ReuJJPF3sc6hVb7Vuu9CchYWAAAAQPLzP7vIZviS20HRf+q+r/+wVR8i/9vn
0cyS+gaD1nlG/YWv18cW1DUeue1zcpUTAAAAQIqQ3N3WwzR7gUrmUVWpWL54
nqwF55wOiPwlmeC12a500dpT3X+lFjLh6/o+ZkVrTX0dnGJFBwAAAJAM/D3W
1swi1lBEK0Pt/W/+TKUk+XF/RueK9bovvfc+MNDn6ebx1hVrDr70TqJi4wAA
AADSn6CX1/YumDZ+7PjpGw/e92M4AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANRQvmJlgiAIgiAIgiAI
FVHZvBpBEARBEARBEISKqFajFkEQBEEQBEEQhIqoWduCIAiCIAiCIAhCRVhY
1iMIgiAIgiAIglARlvUbEgRBEARBEARBqIgGjawJgiAIgiAIgiBURCPrZgRB
EARBEARBECrCunlLgiAIgiAIgiAIFdG8ZRuCIAiCIAiCIAgV0bJNe4IgCIIg
CIIgCBXRpn0ngiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiCIfy5SfOpXgiAIgiAIgiBSeaT4MnMEQRAEQRAE
QaTyaGTdjCAIgiAIgiAIQkU0aGRNEARBEARBEAShIsIAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAdCA04NubV643
Lp/57+KzoJQuDAAA+HeFfr+zdtmhb9KULgeApCaTeqxwtK5aKre2SFSy0TJv
LnMAABBPMqn/u+fXdiwdUa+YUU6zIU+DU7pAAP4Or5sTCutqd5zyQEjpkgAA
gH9L4OcDNvXrt+vuOG/tPGtTHbIGIO0S7i231tUuuOB8YEqXBAAA/KukQRe7
FdElawDSLr/lnfMa5Oh45YcspUsCAAD+VWQNQNomDbrQtbBeyUZLGdQAAAAS
jKwBSNt8Hk4vzqAGAACQOGQNQJom3F/eVFe74NS9ZxaMGeQ4ZJh9j3ZD51/y
JYUAAADxQdYApGnhgxo0tfLU7zb55geJ/P8lfhd7FM9mM9+VvAEAAKiPrAFI
wyIGNejmLG5368+KLEGrupnkKTXiGZc8AABQG1kDkIYpGtQQsKxjbh2DJqe9
k3VKpY8nnCoUN/ulzKhN7/6tGZ3eX1vQtefSt5KULgeSkb/H7n5dJ937qmoe
gY8nnaOc2KVHrHudbMUDgGRG1gCkXcL9FU1jrNQgkzwdam6ol7nFheSdiNVj
T49S9abfexzpyXvv0OT89ET6eH1u7TLWex6y4EV6I32w27aqxdiHylNsyY8P
T59EntUPFnQr2mPO8+QsHwAkJ7IGIO3yX9nVxCB7+8u+f9o8Id+2WWXRzF1y
eDL3UJJnDRVbrg9K1s9MGoEfXdoULzHj6Od/6+UIkoj/kQm1a3fe8iXuiYuD
dw4oRdYAIA0jawDSKiH0gUMFA7N6C79FafC8OWBjpKnZwPF0Mj/r/0ezBpnk
5fTmBZuPOJug1wwhp5f0X+DyPrWlG0Lw3Rn9Rl/6kI4W8Ph2a/nAsfu9EvSN
pUEPh9Uq0GfBg7j+mqwBQBpH1gCkVULw1V4l9C36HomSIHxf3b2ArkG1ba7J
3UHo38wahEebO+YvbHMjgWNAfOe1ytl63K3U1joP9dlmmbX02jshKV2Q5PNy
c7v85Ua5JfSs/3RtQsk8DVxeqf57sgYAaRxZA5BWyaTuo+sY1Rtw8ndbx/f5
MvOsBm3GXkr+1vu/mDWE+pzpYpbDcY17Ql8WyJuRZeyWpbp3DdKgc11KNDj8
MbVlM3+R55nBlRsvTvDy6DLh6/IuBat12uajagtkDQDSOMmPwy3zahvl733L
P4XvbIGfzq/ecCVly5AmSO/uW3byaUBKFyMFyITPh1dueOKXWtpoMonbtqU7
PQJTsDzSi3OsSljN+xzR1JEGPRrX0LR6h7XvUuIRwT+YNUgvz62Xs6DtnYSf
UcKtRV1nHkt1F6NM8JjU2e5OUGq5UpKBv/vSHgMOJ+YF27dbE4tmqrjpgYoX
NOkoa0jayjblqkrh1blV+679SKKtpd+bL9QR4vPMZf3skY4DRk5Yc+/jPzYf
nxB8Z1KXJg0b1K1YLJeBvpyhafGqVg0ateq+MEXKE/jpxIDW/U67q9qNMqkk
JDhYkqSPx2TSkMCACEFBoYpWvRKkfz5PKpFIla+MlXqKF+pzeVibri6P/6kG
WqLJ72JbR7adtPO1ov0kDQ76uR+DQxT8u0z4c2BlgsLDnMAtvL0wpX23lR4p
9yJPGvR4Xs96PUev3r5pds+mlv2nnviaQnMXxZk1JP5iTMLLOfyXQ+/Ylc3U
dsLtOK/pkO8vXr6PVncJwTdHt7Zq2XnA0B7NOjoM79rcsrX9NpXzd4Zv5vGp
ZbPWXotXtyEv15PXlHabET6/ePotep369frcppZNejqM6tSs2aBhvZvUtZq0
wz0+H5gEZILvs6fv1FxkUAjxcFkyce+NeLXEgm6fOP3rnhxybFbb+k06DR7V
s1lzB8deLSzr9TvtofhIxD6O0YoteTmqTlYL20PKz+H0kjWorGzDJCG/6sqg
EEVpQNSrMLyujPydlKgqhRfHRnW22/ZZ0THn5oskJJN+PDCnR6lcumKRRgRR
4ZrT0uo83s+2dM+fJ0+evHn/V7Rs1Rq1LerWrV6peL684T8qXLKK/H/rWtSs
VKaIScRPLG33JqCnrBDydEpLyyXnfWP9S7DbjT2THTvWrlg4e2Y9TVH47haJ
tfQyZs6WM28hsyqtug9d5eKa4MkQZYLXZucWVnWrFcymI9IQmVnOjZH8yW/9
Y9vULJonk56ubgbDXGWqNl1zMerNK/UW78fLNc3rDbvrlQqfJXot7Fw04oTK
X7xslZrhJ1St8mamEafP/8qa15GfUHVqVilZ5OcpNvmAv3qbDbm0tG0Hp7OK
Kmvh1aExTerVrVQsu5ZIQzdznT0vYrSyQo7PaVelRF4D+X7UlafP5jZTz4Uk
2RakN1Z27DDyPz/1vsbfIfnsdufKtYdf/FU0W//ScflDddaQ6IsxCbYQw4dT
jnn0y2+4H3eV9v7AyDmHo+0QmfTdoZVzV245tndq7/Gbzuxet2jV7vuqWxLe
d6cW1xPnLeMU8+RSLvDjofalKq6+qayEQRuGD70V/fmt/9uzS+Ys3nX81Ohe
dnvOuKxauPDEw6R60KouaeDhYcNc1LtTSP6bWE1LpN1y9DW1n8cIT13sylQe
9fLnbpQ+Pb1q3uLNJ/6b3sd+48kD6xcu3OWm5Al57OMYo+A3FzY0ytXxko+y
ejW1ZQ3JX9mGBX076tCsfp1qZkba8qvQwGbBsxgt7q/X51tXL5nTMLyuzJrb
zKL5ZNefp6iyqvJvVU3ej1dYWw1/qGgC6jR680XKCPW5PamNWbU2y175Srzd
j/Qon0neWNTWtzrqmSb7iErPT6uVs3Drjede/64ipIEn25nqiKNNAi98fXli
ZNMCZvUWxn+SCumVhdZNHU7EaF1/e7bPoWmlKnXbOY6aMn1U8xxaGgY5601d
uWrJghmjh/RpXrdUVr3IZrp24So2Lg9iZxzqkglf5veoUTK/jqZOKYX3X9+n
cyoVbnf8VbQ6MpUXL3yvLmjSbNB/qW1++fDFAqpmqdZu3k33PzeHD8fs5Tsw
exGHR8E/a1qZ8OP+sRkW+Qz6LlFrLTDfZ0stKtvd9VXxu8Ljjb2rlDPVFGm3
GnM99kkqkzwfXrPwyM0qmmwJ3IJM8mJsg8rzznxX43ukmL90XKJSp4dSQs/2
pNzCL/7re/3PpJxzHONfI7x2cew6cN7sGdNnzV2888TTKJsO2Tek0uB1X+Le
RFjY841tdEUaOoaNT35Va9dKAx6MrpfLMGfna0o7l/quH9DOed7cGdNnzl+8
/tLzP9mBEHy5V/lm/31LmYZNqM9hm7YO8nLNmDl3+YbjHqrWDfGZ0yK7vNlW
uukqNVcX+XJvoXk2rWrd9sR4aP354oiaLVerTt6VH8effJ/NK6tvPGrnVyUb
SF1ZQ8pVtmGBn7a0rVY+l7Yob1nnlwquIOnFGXVrdNzwMfouVlhV/qVvIf+s
8Q0rzznlo+p30tbNFylCkLycYp03W+Felz9FthqEe0sba2lo6Bk1P5M2U8uQ
fcPqjNsTrZKU33F6mumJdUrGuI4CPmywrjvePZ79HwI/bm9ctKHL66h/Jrid
mVgxb6lph95G7uX3h/tl1dT4X/WpUd8eB365vWxk4zx68ra5KFOeZkfUubsr
IvE70t9mlcvkmloiTSu7E7FfkHrdnuYwOWovhVRevJ9CfU91Klll7c3UVXXJ
T54+tbpein6xyG/o+bU18pZxin5/ER6sbddl0t0401CZ4LmgvZndslcq+zz4
bxhgs+PctJIZxMYF+96L1dASQu859Zz4WtVRSvgW3p5wKFt17ItU3I38bxyX
GNTJGhJ8tifhFiJJgy50K5LByv6k6uv2u9vREe0ql6zcaaB99+597O369eg5
cH2UesBvfqucCnPMWEIOOZXXlFcWWgXmnYu7N478nF9nW1pLpFGo1gxF3WOD
Hxyeal2xqFVnx77duvS1t7ft0Wnixie//znUd7tl1pgVuJpkwtdbl+7/ULOD
UXRC8OttkzuULVqpl6N91y597O37des04MhTpftYCL5hWyqDhoZGtkL2D9W4
fMJfvpjpizS05U33GAV029IuX8wz+Y+4juPv8ly3Kalf2+agkh2XurKGlKts
w94eHOS85txgc0OxlumsU7FfZklOTuq54a6CvRi7qvw7VZPguqVzpcaLP6ns
IpLGbr5ICSHn5zU01DIasuFPMvt4dYtsJjUnbX2URuewC1rbr8ep6I+klGUN
Mqn75B5D1Knbo5Ccn25RteO2qI+AAt5ua5BXp2rn7b8eLgmPVjbV0hBVar81
VpND8mCfXSF9sYaGZs2eexM2BunLlfFD5j3xfbOyamaxYa72F2I+fxPurui3
OMp9PJUXL+qnHxtTuWrHrcm7AnAcpIGHbXqui/HET8ktIOyH2xLbYafiTLd8
XGdXyN/ugsq0XQi+NrT37HfBHpMaZBOLs4/eFfPxr//b1fYjVS1hkJgthPeQ
L5fXecfnuL5KivkbxyUGdbKGRJztSbaFSN73pprpZhy0TtUh+3h9brVcuhWa
LXqldEyo9wzrbE2Gno+z+6pM+DytWZnSJTOLRDo2C17HdckG/DerYSZ5vaKh
WadP7BG+fsdnNcqqk9t+6V1lezvk24ZamYssupiQVo3E36VFiZ434z9wVfLj
pnO9vJnzNtl9X90+UYGeay1LlSlsKNbOUHv/mzj2oiTgrrNlrvDHNJq5p8Ua
gf5sbcvcZoMeK+o2r8Zx/C182cQ8pUYoWSExdWUNKVXZys+vg6N773oWdHuZ
dQaR2LzT9hhlkAnvZtoOV9hUiF1V/o1vIYQ+GVYjv/J3Rj+lsZsvkl/gp+31
c2jlKGr/IMpjxuDvX3zTaMIQwXuh40jX6DWksqxBnmKsd3S4Gp+5mCLmk881
elfUt4TCkx1DOvVf/ODz7wxecnR0RU0N7dbjbih6huC/27G0poaGQc5OVxMy
n4P08tw+K64EyYSvi9qbiEWGA1bGmGXRd4Wd3ZU/F38qL140XjfGF8vW+Hhq
ml8x5NvmwU5nY9z+ld0C5PeLgQN3xzU8LuTAsLLyG5PqBpDvswUDxlyShAlP
t3XOLBaVbrwsxtBUt50OU/eq6kSUuC3IT5JKZZuuTPDEj3/bXzguMamRNSTq
bE+iLfz0YnM7fd2y6xQ9Do0k+XGhR3H9zHnbnVXVN9VvTosczZ2uxJk1SANP
danSc/6kOpoa4urd96rct4LrXtsCWUrVNs8d/lB97osYT33fnxtuqqMpb7Go
mCM01HerhZHZ8msJGbMp8d/frFi3G/HOGvx3Dy6jrZnLeccH9f/ywwmHhr0X
D6lpKBJnm3BAVa4hEz6s6lXCpLRF2ZxamrrVd8d6t/tqY5u8itZDV+84/ia9
OKO2nn7dQ4oXyEtdWUNKVbYyyYsJNqOeBocFfd7ZIKeWnlGDw9GHn4f67LWz
36Xk5ItZVf6NqunLJadCudtfUtnJKu3dfJHspBdmWuiItFuNVdg4TJtkwqe9
G/bHaB0pzxok17euvx+f7Fp+ZRXJ2uBYHNW135IOeUSizM47FHdBlNcA8gpE
S69WnA+jYpMJXxbYDrgZkem8PWafU0tUsPqUqAPbpUHnBtmuUDlYI/UWT/6v
nQpmHb7lW3w/9+8J9Dy61eVNjFNE2S1ACH22ef0Z1S0bIfR2/7JZB6xS3RQR
Hm/oN/NweKtD8uNkuwI6WhnMtz6O+mHBu4bbHlW1VG5it+B5epCJcYtzCVws
7K9L8uMSW9xzKCX6YkyKyzlSiMvwsnqG1qeVHy+3Xd0MxZoNBqp+sBmwqG0u
Jc8TovG6NbFuq1XPTg3KpaWRu9SI58rbPR+uTa+Q3XTYhutTmhiLxdknHYwx
9tN3Wae8mlr/m3dW1fsUif+u+sal19xKyAOvhGUNoT77GmfXylZYrY5Gvz/q
+Njag9d67BhQTKyh1dz5qvIK1O/o5Lq5C7TZd31lTUOxYe5usV+FvNne0bTc
qNgdRdU7jn947OuZSdt0zhmFuzd1ZQ0pVNmGBX7a3G+gS8Qp7L/JtohYpNtl
xqOoua3naadRq5WOPohRVf6Fqin8QV/pxstVLr2RBm++SGYRT8UzaOoksKZN
S5RnDcEHJjapUKaYad5s5Zsv9/x0efaIgXbdrcqZ9zqhuDup9NIsC5PSI1XP
GSIEX+9TMoOmrvn2Z4p/L+D9KnN9kbZ+/WOf4//S3O+Ine36yERHCL7Rp1QG
sbbZ8qt/ah3vezOGzHigog9n6i7e15lNc1jZn0jmuTaDvtxYOKxbtz6DnZyG
jpp55O37SysW7HZX3sxQ+uAo6NKQhpVLFftf7mzZBq56//risqEDHdtblm7c
Z9Pvvtzh4xMNS6y6ofqq9N/g0Of0z0GmIYdGltfU0GrmdPn3HUAIfTDKdpqH
qqwusVsI/ryhtlH+2af+pam8lR2X+F/p4eLMGhJ/MSZ+C7/4L26X07hAvwdK
m7jCzQX1tTR0+i9X3YIKWt29QKepD+P6ROn1+U1sF7wM8tpRL6umll6tva8V
n0k/3LY3+V+2zpMu+wdF3I90K299Em2HywSPMRaZtTJYHlH5KEYaeLi5SeXN
CVofPGFZg7/7kooZRMUbLFHdVItKJnUf06D+XrfQF1s66otERevO+az4b6V3
tnTNl736mqu+ny85mWprFKg6+V2s/ffuQO+iVSfGmupQzeP4x9frYwvq6Nqv
9FT0jymYNUjdr20Y3LOTjd1g59Gjhw923nnli8JvlJiLWr3KNnxQw5iNP7sY
fbk6+n86GrmjveWRnJrSd+sjpeeeOlVlYr6FTPJiZA2jOGfl+kdvvkg9vkRU
R7mVdmhMR5RnDWFSScDHZ1ubmuoUqzd2tvP4q57B56fVlNfJNgvcFG0paE2P
/GVbrFPdkJK3uqtmFGcrPEDZQyp/j2WV9UXG/+uv/Bav1JfL44Yt+D1uTnp+
em1tkaaF7eFfVYNwZ3m/xedVvY9N3cUL2T+0dGHF4yX/Fq/H65uYFXZccT/i
QhGeHxhWu7SJbkbLw8qfwyu/BQghAV43NnfPqaXTedzC0RMOewU/HWpuKG9W
7fu1tMe7AzbGmZueUToXYsRWgq8Osfkzdd5319ml9cVZTHvf+vVezN9jlf3I
Myp2UlJs4UpPM4PU8xxSHcqPS3yv9HBxZg2JvxgTv4VIMunrUbUzFag6ScV8
2p8uDM+nrRVX76PgHfal+iyMY5yCTPg8u43Vtieh8s91rpVJQ5Rp+BYFPa6D
vc7bVspuabP7mzQsxHublZE4Q9Y2l2L2ewzeO7iUtnYcvY+kQec6m1kk4O1n
WEKzBmnQpR7F9HIr6iOkTKDnxmb1psrb/z9eLSinJ8qQtcVZBd3pBfczo0oa
F5m4z0MW3q+svZ5IVKn9tthf3vP0oPJW877EqoTUO45/+L9ZWllfp93Ee4qq
s5TJGmTCl30TGpiV63HYNXKyPuH97ZXNava/o6i3cGIuanUq2/D3dKNs9vxp
oj8ZVi2zWMtk2rHvv0r7dqbt8N9zH8WmTlWZmG8RnjLnMhyy0Uvlt/gnb75I
TUIOjiirqaFpaZewzDHk0ITauY2Ns6rHOFveLpOvpdpzTUXWEBb5sKtu5kwm
5aZu/ygLf+x8e9u6Pc8VvcaTSdyca2Wu2++o6l364aidsaa4apedyu6CnmcG
59YS1+i+J/6PcaWX5tiuinJ79fdYU8NInDF767M/n2r5rrC3V90LOnUXT3p9
Xr3sBROSsCRM0OfD7YsZ1u3j8nvwmjTwVHtTHZPyo9yUH2YVt4CwiKeUlfS1
ilRwOBs+cZnw5ubuzXvv/JrCRXp1jqWxaZ+7Kr+g79P5DuP+tArkt62pjXOI
xFlHbvOM/DO3nQPjGNSQ6C3IpO6j6xjVG/Cfit9JbVQfF/Wv9EhxZQ1JcLYn
/nKOFP5osWSGYlbzv6nqDfV5z1jLnDnrDJs03tnJeZSz86gxS+7EfMIvOTam
5ogtcUy6G/J1e0vLcRGzb4X3jNIMH+N8KEbdKg1yndg4f+n6c9wimuve96YU
0xXlKj70aaxGeOCncw618xS3sP9VLqepS8/EeMIvhN6xr9b6fILGaiZ0XIPw
8vSESrlytHKYNPZnucZsOfdRxVaebe7SZeIdacREBL1LZBBp5p56NOZU/N8e
LquVJ0ef+ZHjTySnJphramg1HXEx9t3T6+YEy3YbY59+6h3HP0J9t9Y11FIy
uVaKZA1+B8fVMM5tfejXVSrxO9Iqr3YG49YXFPXbT8RFrVZlK5M8n9BnTJTc
ULizspm+SFyp3ebvP9dB22s/QNmghogtqFFVJqZq+vFyQfmMJjNOqL4h/3s3
X6QqQqirY2UDeSNhzB5Vs/umE3FlDW/HWRnpZrI+Fdes4+GdJMsYNndW/ZAn
5NDIcpoiw8HrPZVsLuSwcwVtnSILz8d72Sn5/WK+7cDb0W5/Xks65hOLMvZb
6iZTqxd0Ki9e2PP1rQ2MWsV6IPmXfN9kW0zPoM6+KBlC4Mf1tTJpqc4N48ga
wl/WiMs2X6Oohg7voap8SpNIguv6frOjtzee7+hqJBaVqL8o4g4Q96CGRG9B
zmdWM+MKbbeo/J3UJa5bs7pXeqS4VnlL7NmeJNdLJGnQ+S6FdUs1Walien+Z
8OXI/L6dbYaNcOznOMxJ3tgcPW5prNam9MaCzjOOxvHA4OmWrt2n/Hx2/e5w
/2yaGrmKD4maDsikb1f2Kpm/zIDrP2f8Dn/qm1msUcxqQey8Jujz5cl92tsN
d3boN2B4eLmcpy87GyNrkDfMJnTofztB7ZkEZw2vLy7s0b73CGfH/gMi9pfz
uK3nVWQNXxd2qr/pQeQtJmCDTUGRhpb18GjpgL/HvtbFsjZxPPLr24W/vBZp
6Ngu9oi92R9ui7vZH4p9Iqt3HP+Qf/0m2bRr9tqvqJtOCmQN784MNdXR7TT1
/u8SyyRuGyeMWOqieELbRFzU6lS2YYGem/o5Rst5Q77ubpRLSzeTpUvEC2LV
gxoixF1VJqZq8roxvrB+8RUqX8b9gzdfpC7+b5ZVySjWzdzoeOpYys3n0brO
Deta1FGDhUXzbouj/q2GelR8ujpZQ45ijgrnuItKGnSxW5GM7SbcUdVcC3Ud
VNlAx9Dq0DvFvxXidahlfr1qnbfFf3W5MInfYbu+G2M0DN4dH5BTS2RaZcKb
0PCOi0NnqhzUkLqLFxYxBtAgY+PTyt8pC6GP5/RupObJZFm/y+57Sju1/nBb
Zp5JXLz+oqjD5z329zbSyjxiq6pBYWpkDdqNh5xTlF0G73Eskb/iGNXrLKx3
sD0TfdI8id9/7f+no6VXcdPDkPAhCX2nqx7UkOgthEUMjM1RuulqFb+RmOs6
tsRf6ercmtW50iOpzhoSf7YnyfUSSRp4om0+nfKtFTyajiQTPq4fUK/vrMtx
Pgv4cuvwFZUdgeTtk7ntG2z5NcQg1Htv4+xamjrl1v9ak1omeO1xqpYjX/OD
f5YdE+4va6IVMdtSjKsx4MOhHlYtNl6No/eFvIF96fCxL3FNZXpuuW1za+sm
0TVuVCmngUmNRjF+3MTauuXoNQ+U1HPCExfHhi1nuKo9G0Cg55aWDf8MPn21
s5uhWCNfxTG/1wMK+na+b+VslVutfPfr9JMflEn1jURi4wmKVgeWBt45ctw9
xtFX/zhG2c7h5rm0q3TaoeisVzdrSKorXZ4gjLUy1jW0POih7g0mERe1OpVt
mIfLoHGbY8xK7b+5X1GxSKfjFHlqE8eghghxV5WJqZo+nR9qol9uvfIbWVhy
3XyRhj3b1F5fJCrZcImKF9bJSRrgcfm/I0cOq+HIkXPXX0f92+TJGpSsCBlj
O1d6mmVUPcHID7fFFTOKzeotjN0fNeKzvLYMKJO3RN+rnxJyYD5fGjd80csY
F74QfLNv6Qxi7SKLL/ndWd5/icpe0Km8eHKvt7TPaNhcZVeEgOc3Tql5Mh37
79pHpTPrCneWNtYRaXed+SRKmUP2DSmtq1/79zAExd807qxBp9VYhUtlhewf
UtpE0dQof4oVfGVon/mxVvMJfwekqaHVZNgF7zerBjjFMSQhkVuI/B7zW2cr
12qjit9IzHUdW/JkDepc6ZFUZw2JP9uT5HqJJA08GZE1bFKSD0muLGnRpN9B
3wStdBaDn/uKptZzfnd+licRs5rnEIm020+KfPvgd3xGw+xZq62+7B3lj0KO
RJx7zUZejnrWCaHPJ1lXmXYk/tMuKOH1+sapE8djOHpwUrX8DZYeivnzEyfO
PHij+OXM96crrKr0ufZV/WpQemtp677z/6zUFui5qY6RWFO3wsaItw+SHzdH
WuUpUmP8oyhNMiH4VsSxNlt2Na5JdH5KyHGU+LtYZ9eu2nV3Yt41JNWV/uPV
ogr64sK1Z6rfeT4RF3XclW341Kyj+uyL1Rv167WxBXU0cpoNdvV/O7PvCBWD
GiLEXVUmpmr6fGlEfv04prVJrpsv0iqfJR1NxGLj332Y4094c8tlw9q1a9Sz
du3G/+6p99Y/JaiZNcS5GLIQet+hgqHKJZCEO8utdUUZ+y1zV7Q3/I5Nb1ig
WIcjT9W8R8QgvTi77xoF00FIL8600BZp1uq1eYGd/VVVl3wqL154CV1XNc+c
o/P1+C/JFH9Bm2wLaWoXXBClLpVJng6rapivQhyPp9TLGhRml5L/JpjnUrJ4
UyTfJ/McJyiYLsP3ydyy+mKjfN03r7Gftk/loIZEbyEsoiPEtMZZq3Xbo/rX
UhU1b81qLnuuMmtI/NmeJNfLr78JOte5oG7pZmsUdi0K+XagpVnjw2o/3VVJ
cnZqo8Fro3bYEFzXtzUQyZtYjq6B/mcXtchpWGL6oRgz/ASt71VApKHdbVbU
DD3s5d7eVaxjLiOS5OLfQ8l7ZfeSsea6V0UIdR1Wv9XxKF3+ZMKnOS1zizS0
Gg85F+j3YIK1qUmpfpejT4YvDTzaKo+2pm7VHUqms4shYcdR4rfDKrNWnT4K
Ojslfw+l94f6ZtHUUvIeVrFEXNRxV7YyybPxtuNiT4oo//mIGpnFmnlGb1lr
N2C36juiOlVlYqom77tTiumrXuLwn7v5InUJeL+hjrFm3rIjnyo/+l+fHp4z
eZPybUhu7po4wK6/muzsBi7c+zwpnmP9FUmVNYSFec2wzqbkoU3EpqTuYy2z
6hk1Ovo+ZsUu+eG6qH+NipYjL3so+JhvL6/cfvnnqVfAN8/vsSo6mfB5nq3j
HUXH1P/t2ppZxDqGphbdVC3LlcqLF1mQs5Nr5E2mib8ClnbIpa3f4ESUfDdi
UIN2fYfwudB9n2/ZeFhxP6VEZA1hT9e2zJy90zWl16bguq7f7GMKOiDIhHfT
muQQiQ0Ll+h8TNVaPInfQsRWQl0HVcnc3PmK6l9LVZIta0iCizFprpefwheo
LZuxmOU8hS3wVzu6FK4yQdGVHW8S//O9ana9FH1qoFDvA83yaonExlYtLbPr
F3Te+iJWKQIWt80R0YH/bZS/9F3SIX/HKcr6CCWZ+GYNoT57GuWuuOlRPGYs
/3B2WKPuO2O8t3Db2yurpoZ+9hpN65rkKNzxxKuYG5T4766XWayVoc7BWBWy
Qgk7jiFfN9Q00G40OOa6YxGSO2vw2N0to0in/7L36jdME3NRx1XZhk971X/Q
YUVHWri7qrm+SJy9QPERa+IorTpVZWK+hfwI1sqUddw+pb3S/sGbL1KVoCNj
qmiJ9Ov3mr505cYDxy+99IyZor47O6pYJu3avfalSPmSX9JlDcG7BhYvWneu
klm4w3yfziunr1mlw9aot4+Q7892zbevW6XOiMUXvBRV3DLpm7GW2VqN+dmh
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
Fxk/9wTsHiSLXkPPGpZcNtfpImi+yWfpVHXG1sU6uSR29ug/rwM3WAX/aB/g
lWHe/t8R+0O3vIam0jtb1h4paMHcdptCmAEs/GC2K2Epurt1sODMjjwIXMr+
2fJTPHNaGl4mPsxM9RkjbZbcfoxQeXLFcKUZ/gUtzZe2jhmpvaewnyYidnua
pW0BRQ3fX6QWIM/iJ3gTSkOXv+D4oQo20UtDdWFoZ5VmqOXjtqmiSxAjf/pK
NnJyoldID13bg+y5Dlgej9Dv3XMleQbBJ/XUZAdOEUALD1n+nGQPAxuADpg4
V1WtVVcQgqz6FVDL262q0g7hPS/xDQAwAZSdcCGFuo4N3bFW/e3KtacwyU3k
EIbzGEkj5IpzeKg0yNo+nWSJFd6zG8KDGjXDn3zlxTU9c7I+Q++ElvDbVaMk
SddPcEoLWhjaLY3/omwc4km2T/1F6zFoFP+aA1/I98L+Pnb3PPub4YiGml9v
miigYnqO3prRUnVzwWAe6dF2yMcW+VdWKk7xZJgJCrW8t59hmlj4ZPUofjTv
hDNpdFXE1r7ZriM7fXnEo9OmfCj0zA23qAxE9goGRw8X07xr60TQ3EYOj5j/
TjY2C0HsExay5r60pk7NqVXDuXlGHmP25KshbK2c9Cj4ckN96zU0/j2vI4qW
UNj8nky2sjeRN9+0txu29vW9J8Vtv/v79sT8meb7T4eTOBsSuM10/Tn2ZUPX
3XBfefY1oUmh9KC53FzculvuMvnea74f15DWjSPNJE2lD9eriBLeZl1Nopf3
ncq/0YYKCx+TrKyy9wfVFWZGEEt6Ql8jlytMcP7W4fJAmJ/n3O1jux8AyQl6
MM3StsDszbcbSC1A1vgEg1ldecFpZlxdFvn72ElOyuxZ12XcDVftJ+pa3e4U
pjr3povdSbJk7T6UrROiuzpmziEWQqRYHY8tVTfmS/MMhducIfSKiM3judGi
awIySM0GbAB4SEa4pH0YsyeV/YDmq3bjpppHsnJGBQD0CLpj7V/KPl0NlTEj
h8vImCQWlSQGuzk4Ws5S1vS91FnDnJizKafs9gNxncbW3bW1Pt+2iwA1v7Ga
LIDmHX/6Vde6VPnhwPYDn+gHE5YdXCjTdtU1Z7SAgaHdUnjbyTuy/cC69JXX
SD4uykkb+8h/y6UvjO0XbN31uRK8BnYP6H20/lewugBqglEw8sr4O27TWO3d
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
zbGOExXUYSoZ4kliVaT7jebntzpBHndKvFSOm2mjggMdshVbf81QfJBTRDfW
FMD/HbiGgpcP795NYIK7d5+l/ewVoRiPNX46lzmSQj2F4MrFdFHywnfHiRyq
CQFqTt+iLIDmHXPyRd2701uDkQIaifyMXi4kYpqMdILZcy1gQbRbMHGeVjfz
qOeXstc+o/i4hox3/lpfeHDLTmaSGlpJKyzBa9h5CX67oDrrjIGm1esyNthj
eFz+XjPj2K4YSOjreXMBFEpxmm/bNntx2mHtIZKrdj8n3zopSyMqNXSSK9Um
DBsFayUuK79ePk66T80dZwNFS//b1D9OSkpJ/0Xn1WBTg82MbW7XML2Qs7dZ
6AG1fN9johlwFy6xmT4FNyxFeOCvLWPSa2Bfw3bSntSwMZB8UNffCruAcINe
d2HoNZS9PbTR6Vr2Twrych5uVhVC803qHOZ46PcuQ3FuvkmuJ85faCfy8vXU
cg6cO9QXntYURA9Vtjx9ofOrohJeFdLpiVDmeXNZBhEX5FQHr5AzsE2q+Png
3IXkChr52TLNwlLyYqeCoHI4nRK7dT+D1QX5lu4ir3aLfbx7Og9KYOupwu5/
W32gufSUJZGd/24uf3f51DH/XT5XnsOYRsiyEYa2t66YnJoXuSlY9WnfBH70
BKOT3T92oZatB3BgPGIf+WnxoERcLsKfVhfErhdCcRGM84IeZQSQ+C/YAJhb
25Xl6Nb6w70JmsvPpxJBdmcr1PLFQUOYT1g/gemr4dndIVuxtVf0RQXpbzkC
AByCubEGNzOT6mmL0LnQqg3c88NbwmHqEuCeH9TlRXHrbIwKsrV7xSDaFvoa
ZiomszoNqSB2z7WABcFuwWOzd1n70h4HE36+c6YYmnuYV/Q5W/vrTEbyk+70
5Hc+D7tdUBm6fhJNXeseUvX54IKlYeRTU+PfKD1pbsK8fTyloeRDyBw50Xl2
cVQxsH/ubJHg5ho1M4DSJmSnYPTp9sE9pjxu8fgFCdQV+ZBga7PQJefGJk2T
U931sX5dWjGIZ+g+uGCnvopQwmO/7yDe1DAJrtgI22CUVZSzf4NtMkzIWVnA
AkkUeoh/QrtqpPAJQTG5jRk9r6XPLBVvdinxoWdb3WauXeojNozUXHGZSTse
an65YbyYXSi9smBsmWbhqXzvP05wzInn8JJ+j1ohzCtPXlmIGP+vK84rODMm
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
8Q5cYg==
     "], {{0, 523.5}, {781.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96., 96.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{781.5, 523.5},
   PlotRange->{{0, 781.5}, {0, 523.5}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.948735514109993*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"f9be9e09-1a3b-c84c-9617-7ebc178263f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Mspurion", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       FractionBox["ms", "mu"]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
     RowBox[{"x_", ",", "\[Mu]_"}], "]"}], "=", 
    RowBox[{
     FractionBox["I", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalSigma]1alp", "[", "x", "]"}], ".", 
        RowBox[{"D\[CapitalSigma]1alpHC", "[", 
         RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"\[CapitalSigma]1alpHC", "[", "x", "]"}], ".", 
        RowBox[{"D\[CapitalSigma]1alp", "[", 
         RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"LscalarAlt1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["b", "2"]}], 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"Smatrix", "[", "x", "]"}], ".", 
        RowBox[{"Smatrix", "[", "x", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalSigma]1alpHC", "[", "x", "]"}], ".", "Mspurion", 
           ".", 
           RowBox[{"\[CapitalSigma]1alpHC", "[", "x", "]"}]}], "+", 
          RowBox[{
           RowBox[{"\[CapitalSigma]1alp", "[", "x", "]"}], ".", "Mspurion", 
           ".", 
           RowBox[{"\[CapitalSigma]1alp", "[", "x", "]"}]}]}], ")"}]}], 
       "]"}]}], "-", 
     RowBox[{
      FractionBox["d", "2"], 
      RowBox[{"Tr", "[", 
       RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"Smatrix", "[", "x", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalSigma]1alpHC", "[", "x", "]"}], ".", "Mspurion", 
           ".", 
           RowBox[{"\[CapitalSigma]1alpHC", "[", "x", "]"}]}], "+", 
          RowBox[{
           RowBox[{"\[CapitalSigma]1alp", "[", "x", "]"}], ".", "Mspurion", 
           ".", 
           RowBox[{"\[CapitalSigma]1alp", "[", "x", "]"}]}]}], ")"}]}], 
       "]"}]}], "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox["f\[Pi]", "2"], "4"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"CoefB", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}]}], "+", 
        RowBox[{"CoefC", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"Smatrix", "[", "x", "]"}], ".", 
           RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}]}], "+", 
        RowBox[{"CoefD", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"Smatrix", "[", "x", "]"}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}], "*", 
         RowBox[{"Tr", "[", 
          RowBox[{"P\[Mu]\[CapitalSigma]", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], "]"}]}]}], ")"}]}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"LscalarAlt1", "=", 
    RowBox[{"rule\[Epsilon]\[Delta]", "[", "LscalarAlt1", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"LscalarAlt1", "=", 
    RowBox[{
     RowBox[{"LscalarAlt1", "/.", "rulem0aTransformationSymbolic"}], "//", 
     "Expand"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"LscalarAlt1", "=", 
    RowBox[{"rule\[Epsilon]\[Delta]", "[", "LscalarAlt1", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"LscalarAlt1", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LscalarAlt1", "//", "Expand"}], ")"}], "/.", 
     "repsIndividual"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"LscalarALP2", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LscalarALP", "//", "Expand"}], ")"}], "/.", 
     "repsIndividual"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"expr1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"LagrangianGivenFields2", "[", 
       RowBox[{"LscalarAlt1", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<a\>\"", ",", "\"\<\[Sigma]\>\"", ",", "\"\<\[Eta]\>\""}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "//", 
      RowBox[{"Simplify", "\[IndentingNewLine]", "expr2"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"LagrangianGivenFields2", "[", 
        RowBox[{"LscalarALP2", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<a\>\"", ",", "\"\<\[Sigma]\>\"", ",", "\"\<\[Eta]\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"CoefA", "->", "0"}], "}"}]}], "//", 
      RowBox[{"Simplify", "\[IndentingNewLine]", 
       RowBox[{"expr1", "=", 
        RowBox[{
         RowBox[{"expr1", "/.", 
          RowBox[{
          "rulem0aTransformationSymbolicToExplicit", "[", 
           "choiceMixingDescription", "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", "->", "0"}], "}"}]}]}]}]}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"expr2", "=", 
    RowBox[{
     RowBox[{"expr2", "/.", 
      RowBox[{
      "rulem0aTransformationSymbolicToExplicit", "[", 
       "choiceMixingDescription", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", "->", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"expr1", ",", "cG"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Kappa]u", "->", "0"}], ",", 
         RowBox[{"\[Kappa]d", "->", "0"}]}], "}"}]}], "//", "Simplify"}], 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"expr2", ",", "cG"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Kappa]u", "->", "0"}], ",", 
         RowBox[{"\[Kappa]d", "->", "0"}]}], "}"}]}], "//", "Simplify"}]], "//",
     "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9487260355556965`*^9, 3.948726066323824*^9}, {
   3.9487262955857735`*^9, 3.9487263733636856`*^9}, {3.9487264259289303`*^9, 
   3.9487265523460255`*^9}, {3.9487266277892475`*^9, 3.948726675109724*^9}, 
   3.948727497578047*^9, {3.9487276164875984`*^9, 3.948727617950474*^9}, {
   3.9487276523757343`*^9, 3.948727723942951*^9}, {3.9487278840985775`*^9, 
   3.948727884398943*^9}, {3.948728032411751*^9, 3.9487280597874565`*^9}, 
   3.948729008839031*^9, {3.9487309836298294`*^9, 3.9487309862213764`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4bbece28-5051-2948-81cd-3652a614faad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"expr11", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"LagrangianGivenFields2", "[", 
        RowBox[{"LscalarAlt1", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<a\>\"", ",", "\"\<\[Sigma]\>\"", ",", "\"\<\[Eta]\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", "->", "0"}], "}"}]}], "//", 
      RowBox[{"Simplify", "\[IndentingNewLine]", "expr11"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"expr11", "/.", 
         RowBox[{
         "rulem0aTransformationSymbolicToExplicit", "[", 
          "choiceMixingDescription", "]"}]}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Kappa]u", "->", "0"}], ",", 
          RowBox[{"\[Kappa]d", "->", "0"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "->", "0"}], ",", 
         RowBox[{"cu", "->", "0"}], ",", 
         RowBox[{"cd", "->", "0"}], ",", 
         RowBox[{"cs", "->", "0"}]}], "}"}]}], "//", 
      RowBox[{
       RowBox[{"Simplify", "\[IndentingNewLine]", 
        RowBox[{"ruleSymbolsToNumbersFinal", "[", 
         RowBox[{"expr11", ",", "0"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"ma", "->", "1.6"}], "}"}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"expr22", "=", 
     RowBox[{
      RowBox[{"expr11", "/.", 
       RowBox[{"{", 
        RowBox[{"cG", "->", "0"}], "}"}]}], "//", "Simplify"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"expr22", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"expr22", "/.", 
         RowBox[{
         "rulem0aTransformationSymbolicToExplicit", "[", 
          "choiceMixingDescription", "]"}]}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Kappa]u", "->", 
           RowBox[{
            RowBox[{"\[Kappa]matrixStandardmdrepl", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"\[Kappa]d", "->", 
           RowBox[{
            RowBox[{"\[Kappa]matrixStandardmdrepl", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "->", "0"}], ",", 
         RowBox[{"cu", "->", "0"}], ",", 
         RowBox[{"cd", "->", "0"}], ",", 
         RowBox[{"cs", "->", "0"}]}], "}"}]}], "//", 
      RowBox[{
       RowBox[{"Simplify", "\[IndentingNewLine]", 
        RowBox[{"ruleSymbolsToNumbersFinal", "[", 
         RowBox[{"expr22", ",", "0"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"ma", "->", "1.6"}], "}"}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9487299195809402`*^9, 3.9487300628934307`*^9}, {
  3.948730181886076*^9, 3.9487301847428265`*^9}, {3.9487302256898975`*^9, 
  3.948730228437542*^9}, {3.948730271322918*^9, 3.948730273937582*^9}, {
  3.9487309918764687`*^9, 3.948731003619751*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0a2c4849-6540-d749-9f34-ab6de0861bd7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor mesons", "Section",
 CellChangeTimes->{{3.945136959532114*^9, 3.945136961372463*^9}, {
  3.945232905020918*^9, 
  3.945232905419258*^9}},ExpressionUUID->"6c1a3d96-15ca-874a-9f47-\
11ff0b0450fa"],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"So", " ", "far"}], ",", " ", 
     RowBox[{"only", " ", 
      FormBox[
       RowBox[{
        SubscriptBox["f", "2"], "PP"}],
       TraditionalForm], " ", 
      RowBox[{"terms", ".", " ", "From"}], " ", "A", ".26", " ", "of", " ", 
      "2110.10691"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Similar", " ", "to", " ", "2110.10691", " ", "and", " ", "1811.03474"}],
      ",", " ", 
     RowBox[{
     "only", " ", "the", " ", "first", " ", "order", " ", "expansion", " ", 
      "of", " ", "\[CapitalSigma]", " ", "in", " ", "terms", " ", "of", " ", 
      "P", " ", "is", " ", "used"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{
      RowBox[{"-", "gT"}], "*", 
      FractionBox[
       SuperscriptBox["f\[Pi]", "2"], "4"], 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"TfieldSymbol", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)\>\"", ",", "x", ",", "\[Mu]",
           ",", "\[Nu]"}], "]"}], "*", 
        RowBox[{"Tr", "[", 
         RowBox[{
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             FractionBox["1", "2"], ",", "0"}], "}"}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"D\[CapitalSigma]1alpHC", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
             RowBox[{"D\[CapitalSigma]1alp", "[", 
              RowBox[{"x", ",", "\[Nu]"}], "]"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], "*", 
             RowBox[{"mt", "[", 
              RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"D\[CapitalSigma]1alpHC", "[", 
               RowBox[{"x", ",", "\[Alpha]"}], "]"}], ".", 
              RowBox[{"D\[CapitalSigma]1alp", "[", 
               RowBox[{"x", ",", "\[Alpha]"}], "]"}]}]}]}], ")"}]}], "]"}]}], 
       ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"LagrangianTalp", "/.", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"LagrangianTalp", ",", "\[Epsilon]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
         "\[Epsilon]"}]}], "//", "Expand"}], "//", "Simplify"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{
      RowBox[{"LagrangianTalp", "/.", "rulem0aTransformationSymbolic"}], "//",
       "Expand"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{"rule\[Epsilon]\[Delta]", "[", "LagrangianTalp", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LagrangianWithALP", "[", "\"\<T\>\"", "]"}], "=", 
     "LagrangianTalp"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{
      RowBox[{"-", "gT"}], "*", 
      FractionBox[
       SuperscriptBox["f\[Pi]", "2"], "4"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["2", 
         SqrtBox["2"]], "*", 
        RowBox[{"Tr", "[", 
         RowBox[{
          RowBox[{"Tmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"D\[CapitalSigma]1alpHC", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
             RowBox[{"D\[CapitalSigma]1alp", "[", 
              RowBox[{"x", ",", "\[Nu]"}], "]"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], "*", 
             RowBox[{"mt", "[", 
              RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"D\[CapitalSigma]1alpHC", "[", 
               RowBox[{"x", ",", "\[Alpha]"}], "]"}], ".", 
              RowBox[{"D\[CapitalSigma]1alp", "[", 
               RowBox[{"x", ",", "\[Alpha]"}], "]"}]}]}]}], ")"}]}], "]"}]}], 
       ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"LagrangianTalp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LagrangianTalp", "/.", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"LagrangianTalp", ",", "\[Epsilon]"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
        "\[Epsilon]"}]}], "//", "Expand"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9451392606681747`*^9, 3.945139260884735*^9}, {
  3.9451392959769096`*^9, 3.9451393534842777`*^9}, {3.9451393963743973`*^9, 
  3.9451394510453815`*^9}, {3.947091310011448*^9, 3.9470913539613304`*^9}, {
  3.9470913919300175`*^9, 3.9470913989436817`*^9}, {3.9470914329128857`*^9, 
  3.9470914336324177`*^9}, {3.9470921543822746`*^9, 3.94709216302503*^9}, {
  3.948652037431551*^9, 3.9486520529055996`*^9}, {3.9486523626169434`*^9, 
  3.948652372081684*^9}, {3.9486533934930706`*^9, 3.9486534000769863`*^9}, {
  3.9487011753160267`*^9, 3.9487011809163*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"41cd61f1-0a4d-8446-b9f3-da4a58d6b5d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Axial-vector and pseudovector mesons", "Section",
 CellChangeTimes->{{3.947007109178772*^9, 
  3.9470071139644375`*^9}},ExpressionUUID->"d2ac7cb9-6ace-0841-8e34-\
246bcbe8efb7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LagrangianVAalp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", "*", "aVA", "*", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"VAmatrix1", "[", 
         RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Vmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"PmatrixALP", "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
           RowBox[{"Vmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{"bVA", "*", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"VAmatrix2", "[", 
         RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Vmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"PmatrixALP", "[", "x", "]"}]}], "+", 
          RowBox[{
           RowBox[{"PmatrixALP", "[", "x", "]"}], ".", 
           RowBox[{"Vmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}], "]"}]}]}], "//", 
    "Expand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LagrangianVAalp", "=", 
   RowBox[{"LagrangianVAalp", "+", 
    RowBox[{"Conjugate", "[", "LagrangianVAalp", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9470071176442337`*^9, 3.9470071502162285`*^9}, {
  3.9470545047025337`*^9, 3.947054504778805*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"54d3739e-5354-844a-bb3a-7dffac22260d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Axial-vector and pseudovector mesons - new (following 1208.0585)\
\>", "Section",
 CellChangeTimes->{{3.947007109178772*^9, 3.9470071139644375`*^9}, {
  3.9486386964113064`*^9, 3.9486386978163433`*^9}, {3.948646707325466*^9, 
  3.948646719473652*^9}},ExpressionUUID->"d17b6a30-c719-a14b-b53e-\
f48a4f6fa2a6"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.948646868798559*^9, 
  3.948646870187542*^9}},ExpressionUUID->"240c8715-019e-c34d-8428-\
0f88959d7419"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Lmatrix", "[", 
    RowBox[{"x_", ",", "\[Mu]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Vmatrix", "[", 
     RowBox[{"x", ",", "\[Mu]"}], "]"}], "+", 
    RowBox[{"VAmatrix1", "[", 
     RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rmatrix", "[", 
    RowBox[{"x_", ",", "\[Mu]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Vmatrix", "[", 
     RowBox[{"x", ",", "\[Mu]"}], "]"}], "-", 
    RowBox[{"VAmatrix1", "[", 
     RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dLmatrix", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "+", 
    RowBox[{"dVAmatrix1", "[", 
     RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "-", 
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Nu]", ",", "\[Mu]"}], "]"}], "-", 
    RowBox[{"dVAmatrix1", "[", 
     RowBox[{"x", ",", "\[Nu]", ",", "\[Mu]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dRmatrix", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "-", 
    RowBox[{"dVAmatrix1", "[", 
     RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "-", 
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Nu]", ",", "\[Mu]"}], "]"}], "+", 
    RowBox[{"dVAmatrix1", "[", 
     RowBox[{"x", ",", "\[Nu]", ",", "\[Mu]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V\[Mu]\[Nu]matrix", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Nu]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "-", 
    RowBox[{"dVmatrix", "[", 
     RowBox[{"x", ",", "\[Nu]", ",", "\[Mu]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9486468859076195`*^9, 3.948646886128231*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"9a6262a6-a0da-134f-bdb9-3c450702fb03"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculating the mixing between axial-vector and pseudoscalar mesons\
\>", "Subsection",
 CellChangeTimes->{{3.948640676524557*^9, 
  3.9486406900697803`*^9}},ExpressionUUID->"a120ebd0-b9e5-fc48-a1d1-\
8b99d29a2f10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Lagrangian", " ", "including", " ", "the", " ", "mixing", " ", 
      "between", " ", "VA", " ", "mesons", " ", "and", " ", "pseudoscalar", 
      " ", 
      RowBox[{"mesons", ".", " ", "The"}]}], " ", "-", " ", 
     RowBox[{
     "term", " ", "removes", " ", "the", " ", "PPVV", " ", "terms", " ", 
      "and", " ", "PPV", " ", "terms"}]}], ",", " ", 
    RowBox[{
    "to", " ", "ensure", " ", "the", " ", "absence", " ", "of", " ", "double",
      " ", "counting", " ", 
     RowBox[{"(", 
      RowBox[{
      "they", " ", "are", " ", "already", " ", "present", " ", "in", " ", 
       "the", " ", "V", " ", "lagrangian", " ", "above"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LagrangianVAalpForMixing", "=", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"I", "*", 
            RowBox[{"dPmatrixALP", "[", 
             RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "-", 
           RowBox[{"I", "*", "g1", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Lmatrix", "[", 
                RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
               RowBox[{"\[CapitalPhi]matrix", "[", "x", "]"}]}], "-", 
              RowBox[{
               RowBox[{"\[CapitalPhi]matrix", "[", "x", "]"}], ".", 
               RowBox[{"Rmatrix", "[", 
                RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}]}], ")"}], 
         "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"I", "*", 
           RowBox[{"dPmatrixALP", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "-", 
          RowBox[{"I", "*", "g1", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Lmatrix", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
              RowBox[{"\[CapitalPhi]matrix", "[", "x", "]"}]}], "-", 
             RowBox[{
              RowBox[{"\[CapitalPhi]matrix", "[", "x", "]"}], ".", 
              RowBox[{"Rmatrix", "[", 
               RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       "]"}], "//", "Expand"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianVAalpForMixing", "=", 
     RowBox[{"LagrangianVAalpForMixing", "-", 
      RowBox[{"(", 
       RowBox[{"LagrangianVAalpForMixing", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"VAfieldSymbol", "[", 
               RowBox[{"f", ",", "x", ",", "a_"}], "]"}], ":>", "0"}], ",", 
             RowBox[{
              RowBox[{"dVAfieldSymbol", "[", 
               RowBox[{"f", ",", "x", ",", "a_", ",", "b_"}], "]"}], ":>", 
              "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"f", ",", "listMesonVA"}], "}"}]}], "]"}], "]"}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianVAalpForMixing", "=", 
     RowBox[{
     "LagrangianVAalpForMixing", "/.", "rulem0aTransformationSymbolic"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianVAalpForMixing", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"LagrangianVAalpForMixing", "/.", 
        RowBox[{"\[Epsilon]", "->", "0"}]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"LagrangianVAalpForMixing", ",", "\[Epsilon]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
       "\[Epsilon]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianVAalp1", "=", 
     RowBox[{
      RowBox[{"Expand", "[", "LagrangianVAalpForMixing", "]"}], "/.", " ", 
      "repsIndividual"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianGivenFieldsVA", "[", 
     RowBox[{"fieldlist_", ",", "powerlist_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Total", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"LagrangianVAalp1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "^", 
            RowBox[{"(", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"y", "[", 
                 RowBox[{"fieldlist", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
                RowBox[{"powerlist", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "fieldlist", "]"}]}], "}"}]}], "]"}], 
             ")"}]}], "*", "aa_"}], ":>", "aa"}]}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Removing", " ", "quadratic", " ", "terms", " ", "from", " ", "the", " ", 
     "initial", " ", "integration"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrangianVAalpForMixing", "=", 
     RowBox[{
      RowBox[{"LagrangianVAalpForMixing", "-", 
       RowBox[{"ruleLeavingPower", "[", 
        RowBox[{"LagrangianVAalpForMixing", ",", "2"}], "]"}]}], "//", 
      "Expand"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Renormalization", " ", "constants", " ", 
      SubscriptBox["Z", "P"], " ", "required", " ", "to", " ", "preserve", 
      " ", "the", " ", "kinetic", " ", "terms", " ", "of", " ", 
      "pseudoscalar", " ", "mesons", " ", "after", " ", "the", " ", "shift", 
      " ", 
      SubscriptBox["A", "\[Mu]"]}], " ", "->", " ", 
     RowBox[{
      SubscriptBox["A", "\[Mu]"], " ", "+", " ", 
      RowBox[{"c", " ", 
       SubscriptBox["d", "\[Mu]"], 
       RowBox[{"P", ".", " ", "See"}], " ", 
       RowBox[{"Eqs", ".", " ", 
        RowBox[{"(", "10", ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", "14", ")"}], " ", "of", " ", "1208.0585"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ZP", "[", "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)\>\"", "]"}], 
     "=", 
     RowBox[{
      RowBox[{
      "ZP", "[", "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(+\)]\)\>\"", "]"}], 
      "=", 
      RowBox[{
       RowBox[{
       "ZP", "[", "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(-\)]\)\>\"", "]"}], 
       "=", 
       FractionBox["ma1", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["ma1", "2"], "-", 
          RowBox[{
           SuperscriptBox["g1", "2"], "*", 
           SuperscriptBox["\[Phi]N", "2"]}]}]]]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZP", "[", "\"\<a\>\"", "]"}], " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soltemp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"c1", "*", 
              FractionBox["1", 
               SqrtBox["6"]]}], "+", 
             RowBox[{"c2", 
              FractionBox["1", 
               RowBox[{"2", 
                SqrtBox["3"]}]]}]}], "==", 
            FractionBox["ma1", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["ma1", "2"], "-", 
               RowBox[{
                SuperscriptBox["g1", "2"], "*", 
                SuperscriptBox["\[Phi]N", "2"]}]}]]]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "*", 
              FractionBox["1", 
               SqrtBox["3"]]}], "-", 
             RowBox[{"c2", 
              FractionBox["1", 
               SqrtBox["6"]]}]}], "==", 
            FractionBox["mf11420", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["mf11420", "2"], "-", 
               RowBox[{"2", 
                SuperscriptBox["g1", "2"], "*", 
                SuperscriptBox["\[Phi]S", "2"]}]}]]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c1", ",", "c2"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ZP", "[", "\"\<\[Eta]\>\"", "]"}], ",", 
       RowBox[{"ZP", "[", "\"\<\[Eta]'\>\"", "]"}]}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "/.", "soltemp"}], ",", 
       RowBox[{"c2", "/.", "soltemp"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZP", "[", "\"\<\!\(\*SuperscriptBox[\(K\), \(+\)]\)\>\"", "]"}],
      "=", 
     RowBox[{
      RowBox[{
      "ZP", "[", "\"\<\!\(\*SuperscriptBox[\(K\), \(-\)]\)\>\"", "]"}], "=", 
      RowBox[{
       RowBox[{"ZP", "[", "\"\<\!\(\*SubscriptBox[\(K\), \(L\)]\)\>\"", "]"}],
        "=", 
       RowBox[{
        RowBox[{
        "ZP", "[", "\"\<\!\(\*SubscriptBox[\(K\), \(S\)]\)\>\"", "]"}], "=", 
        FractionBox[
         RowBox[{"2", "*", "mK11270"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"4", 
            SuperscriptBox["mK11270", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["g1", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Phi]N", "+", 
               RowBox[{
                SqrtBox["2"], "\[Phi]S"}]}], ")"}], "2"]}]}]]]}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"MVAP0", "[", 
         RowBox[{"VA", ",", 
          RowBox[{"findingConjugated", "[", "P", "]"}]}], "]"}], "=", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"LagrangianGivenFieldsVA", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"P", ",", "VA"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}], 
           RowBox[{
            RowBox[{"VAfieldSymbol", "[", 
             RowBox[{"VA", ",", "x", ",", "\[Mu]"}], "]"}], "*", 
            RowBox[{"dPfieldSymbol", "[", 
             RowBox[{"P", ",", "x", ",", "\[Mu]"}], "]"}]}]], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", "->", "1"}], "}"}]}], "//", "Simplify"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Mixing", " ", 
          RowBox[{"angles", ".", " ", "Defined"}], " ", "via", " ", 
          RowBox[{"Eqs", ".", " ", 
           RowBox[{"(", "10", ")"}]}]}], "-", 
         RowBox[{
          RowBox[{"(", "14", ")"}], " ", "of", " ", 
          RowBox[{"1208.0585", ".", " ", "Note"}], " ", "the", " ", 
          "appearance", " ", "of", " ", "the", " ", "renormalization", " ", 
          "constants", " ", 
          RowBox[{
           SubscriptBox["Z", "P"], ".", " ", "Perfect"}], " ", "isospin", " ",
           "limit", " ", "is", " ", "assumed"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Theta]VAP", "[", 
         RowBox[{"VA", ",", 
          RowBox[{"findingConjugated", "[", "P", "]"}]}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MVAP0", "[", 
            RowBox[{"VA", ",", 
             RowBox[{"findingConjugated", "[", "P", "]"}]}], "]"}], "*", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"P", "==", "\"\<a\>\""}], ",", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"msymbolic", "[", 
                   RowBox[{"findingConjugated", "[", "P", "]"}], "]"}], "2"], 
                 SuperscriptBox[
                  RowBox[{"msymbolic", "[", "VA", "]"}], "2"]]}], ")"}], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"msymbolic", "[", 
                 RowBox[{"findingConjugated", "[", "P", "]"}], "]"}], "2"], 
               "-", 
               SuperscriptBox[
                RowBox[{"msymbolic", "[", "VA", "]"}], "2"], "-", 
               RowBox[{"I", "*", 
                RowBox[{"\[CapitalGamma]symbolic", "[", "VA", "]"}], "*", 
                RowBox[{"msymbolic", "[", "VA", "]"}]}]}]], ",", 
             FractionBox[
              RowBox[{"ZP", "[", "P", "]"}], 
              SuperscriptBox[
               RowBox[{"msymbolic", "[", "VA", "]"}], "2"]]}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", "->", "0"}], "}"}]}], "//", "Simplify"}]}], 
       ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"P", ",", "listMesonP"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"VA", ",", "listMesonVA"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Symbolic", " ", "diagonalization"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ruleVAmixingRepl", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VAfieldSymbol", "[", 
          RowBox[{"VA", ",", "x", ",", "\[Mu]"}], "]"}], "->", 
         RowBox[{
          RowBox[{"VAfieldSymbol", "[", 
           RowBox[{"VA", ",", "x", ",", "\[Mu]"}], "]"}], "+", 
          RowBox[{"VAmix", "*", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"NumericQ", "[", 
                 RowBox[{"\[Theta]VAP", "[", 
                  RowBox[{"VA", ",", "P0"}], "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"P0", "==", "\"\<a\>\""}], ",", "\[Epsilon]", ",", 
                  "1"}], "]"}], "*", 
                RowBox[{"\[Theta]VAPsym", "[", 
                 RowBox[{"VA", ",", "P0"}], "]"}], "*", 
                RowBox[{"dPfieldSymbol", "[", 
                 RowBox[{"P0", ",", "x", ",", "\[Mu]"}], "]"}]}], ",", "0"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"P0", ",", "listMesonP"}], "}"}]}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"VA", ",", "listMesonVA"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rule\[Theta]VAP0explicit", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]VAPsym", "[", 
           RowBox[{"VA", ",", "P0"}], "]"}], "->", 
          RowBox[{"\[Theta]VAP", "[", 
           RowBox[{"VA", ",", "P0"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"VA", ",", "listMesonVA"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"P0", ",", "listMesonP"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Renormalized", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PmatrixALPrenormalized", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{"I", "*", 
       RowBox[{"PmatrixALP", "[", "x", "]"}]}], "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PfieldSymbol", "[", 
          RowBox[{"f", ",", "x"}], "]"}], "->", 
         RowBox[{
          RowBox[{"ZP", "[", "f", "]"}], "*", 
          RowBox[{"PfieldSymbol", "[", 
           RowBox[{"f", ",", "x"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "listMesonP"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PmatrixALPrenormalizedHC", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "I"}], "*", 
       RowBox[{"PmatrixALPHC", "[", "x", "]"}]}], "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PfieldSymbol", "[", 
          RowBox[{"f", ",", "x"}], "]"}], "->", 
         RowBox[{
          RowBox[{"ZP", "[", "f", "]"}], "*", 
          RowBox[{"PfieldSymbol", "[", 
           RowBox[{"f", ",", "x"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "listMesonP"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{"SheavyMatrixCondensate", "[", "x", "]"}], "+", 
      RowBox[{"PmatrixALPrenormalized", "[", "x", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{"SheavyMatrixCondensate", "[", "x", "]"}], "+", 
      RowBox[{"PmatrixALPrenormalizedHC", "[", "x", "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9486389162790623`*^9, 3.9486392250606136`*^9}, {
   3.9486394032103214`*^9, 3.948639427161644*^9}, {3.9486396086652374`*^9, 
   3.948639638324112*^9}, {3.948640412833906*^9, 3.948640421907215*^9}, {
   3.948640456527794*^9, 3.9486406089211044`*^9}, {3.948640739073206*^9, 
   3.948640745961197*^9}, {3.948641147741087*^9, 3.9486412209566116`*^9}, {
   3.948641296578823*^9, 3.9486413522301445`*^9}, {3.948641495312706*^9, 
   3.9486415779562054`*^9}, {3.948641630255625*^9, 3.9486417038499928`*^9}, {
   3.948641760943468*^9, 3.94864183459289*^9}, {3.9486420635574226`*^9, 
   3.948642115117279*^9}, {3.9486421652563953`*^9, 3.9486421981422596`*^9}, {
   3.948642287463499*^9, 3.948642288755804*^9}, {3.94864233841642*^9, 
   3.9486424019754734`*^9}, {3.948642495166008*^9, 3.948642649731695*^9}, {
   3.9486427419736576`*^9, 3.948642757052601*^9}, {3.948642802265358*^9, 
   3.9486428113596954`*^9}, 3.9486438623261414`*^9, 3.9486438942562943`*^9, 
   3.948644219497431*^9, {3.9486444807409077`*^9, 3.9486445219257812`*^9}, {
   3.9486472524669514`*^9, 3.9486472538277493`*^9}, {3.948697580536001*^9, 
   3.9486975862377815`*^9}, {3.948701189420229*^9, 3.9487012119504967`*^9}, {
   3.9487310172727375`*^9, 3.948731018122444*^9}, 3.948959533393261*^9, {
   3.9489634157722416`*^9, 3.9489634667484226`*^9}, {3.9489635903197174`*^9, 
   3.9489637926753464`*^9}, {3.948963826033537*^9, 3.9489638881978054`*^9}, {
   3.948963948099371*^9, 3.948964008273611*^9}, {3.948964103322521*^9, 
   3.9489641264456825`*^9}, {3.9489648999707394`*^9, 3.948964923644821*^9}, {
   3.9489655872244186`*^9, 3.948965602522808*^9}, {3.948965635487253*^9, 
   3.9489656859884853`*^9}, {3.9489657429845486`*^9, 
   3.9489657528641624`*^9}, {3.948965850564684*^9, 3.948965862236038*^9}, {
   3.9489659195486183`*^9, 3.948965961183651*^9}, {3.9489661292611485`*^9, 
   3.948966134648613*^9}, {3.948966552823429*^9, 3.9489665707036743`*^9}, {
   3.948968286994467*^9, 3.9489682913310184`*^9}, {3.948968438352461*^9, 
   3.9489684435671234`*^9}, {3.948968474215328*^9, 3.948968481019623*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"b9bdbc36-b200-4642-ba18-19d7eac2ceef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full interaction", "Subsection",
 CellChangeTimes->{{3.948641584132492*^9, 
  3.948641586524828*^9}},ExpressionUUID->"b0491c41-b3a6-cf46-8ffc-\
c6fb98b2863d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
0P8K
    "], {{0, 182.25}, {665.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{937.1249999999964, Automatic},
  ImageSizeRaw->{665.25, 182.25},
  PlotRange->{{0, 665.25}, {0, 182.25}}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"f9d56f2f-dac9-524c-8722-1c8a93b5a94a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Full", " ", "interactions", " ", "involving", " ", "VA"}], ",",
       " ", "V", ",", " ", 
      RowBox[{"and", " ", 
       RowBox[{"pseudoscalars", ".", " ", "The"}], " ", "pure", " ", "V", " ",
        "part", " ", 
       RowBox[{"(", 
        RowBox[{"no", " ", "VA"}], ")"}], " ", "is", " ", 
       RowBox[{"deducted", ".", " ", "No"}], " ", "interactions", " ", "with",
        " ", "photons", " ", "are", " ", "included"}], ",", " ", 
      RowBox[{"as", " ", "they", " ", "are", " ", "irrelevant"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"h2", "*", 
         RowBox[{"(", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Lmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
             RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x", "]"}], ".", 
             RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}], 
             ".", 
             RowBox[{"Lmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Rmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
             RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x", "]"}], ".", 
             RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}], 
             ".", 
             RowBox[{"Rmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], "]"}], ")"}]}], "+", 
        RowBox[{"2", "*", "h3", "*", 
         RowBox[{"Tr", "[", 
          RowBox[{
           RowBox[{"Lmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x", "]"}], ".", 
           RowBox[{"Rmatrix", "[", 
            RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
           RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}]}], 
          "]"}]}], "+", 
        RowBox[{"I", "*", 
         FractionBox["g2", "2"], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{
             RowBox[{"dLmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Lmatrix", "[", 
                 RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
                RowBox[{"Lmatrix", "[", 
                 RowBox[{"x", ",", "\[Nu]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Lmatrix", "[", 
                 RowBox[{"x", ",", "\[Nu]"}], "]"}], ".", 
                RowBox[{"Lmatrix", "[", 
                 RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}], "]"}], "+", 
           RowBox[{"Tr", "[", 
            RowBox[{
             RowBox[{"dRmatrix", "[", 
              RowBox[{"x", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Rmatrix", "[", 
                 RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
                RowBox[{"Rmatrix", "[", 
                 RowBox[{"x", ",", "\[Nu]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Rmatrix", "[", 
                 RowBox[{"x", ",", "\[Nu]"}], "]"}], ".", 
                RowBox[{"Rmatrix", "[", 
                 RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], ")"}]}], "]"}]}], 
          ")"}]}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Going", " ", "to", " ", "the", " ", "mass", " ", "basis", " ", "in", 
       " ", "the", " ", "sector", " ", "of", " ", "light", " ", 
       "pseudoscalar", " ", "mesons"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"LagrangianVAalp", "/.", "rulem0aTransformationSymbolic"}], "//",
        "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Summing", " ", "the", " ", "kinetic", " ", "term", " ", "and", " ", 
       "the", " ", "term", " ", "added", " ", "above"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{"LagrangianVAalp", "+", "LagrangianVAalpForMixing"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Dropping", " ", "O", 
       RowBox[{"(", 
        SuperscriptBox["\[Delta]", "2"], ")"}], " ", "terms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LagrangianVAalp", "/.", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"LagrangianVAalp", ",", "\[Epsilon]"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], ")"}], "*", 
        "\[Epsilon]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Dropping", " ", "O", 
       RowBox[{"(", 
        SuperscriptBox["\[Epsilon]", "2"], ")"}], " ", "terms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LagrangianVAalp", "/.", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", "->", "0"}], "}"}]}], ")"}], "+", 
       RowBox[{"\[Delta]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"LagrangianVAalp", ",", "\[Delta]"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", "->", "0"}], "}"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Removing", " ", "the", " ", "terms", " ", "that", " ", "do", " ", 
        "not", " ", "include", " ", "at", " ", "least", " ", "one", " ", 
        "axial"}], "-", 
       RowBox[{"vector", " ", "field"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"LagrangianVAalp", "-", 
        RowBox[{"(", 
         RowBox[{"LagrangianVAalp", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"VAfieldSymbol", "[", 
                 RowBox[{"f", ",", "x", ",", "a_"}], "]"}], ":>", "0"}], ",", 
               RowBox[{
                RowBox[{"dVAfieldSymbol", "[", 
                 RowBox[{"f", ",", "x", ",", "a_", ",", "b_"}], "]"}], ":>", 
                "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "listMesonVA"}], "}"}]}], "]"}], "]"}]}], 
         ")"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Shifting", " ", "the", " ", "axial"}], "-", 
       RowBox[{
       "vector", " ", "fields", " ", "by", " ", "the", " ", "mixing", " ", 
        "angle"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{"LagrangianVAalp", "/.", "ruleVAmixingRepl"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Removing", " ", "the", " ", "terms", " ", "being", " ", "higher", " ", 
       "than", " ", "linear", " ", "in", " ", "the", " ", "mixing", " ", 
       "between", " ", "AV", " ", "and", " ", "P", " ", "mesons"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LagrangianVAalp", "/.", 
         RowBox[{"{", 
          RowBox[{"VAmix", "->", "0"}], "}"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"LagrangianVAalp", ",", "VAmix"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"VAmix", "->", "0"}], "}"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Dropping", " ", "the", " ", "quadratic", " ", "terms"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LagrangianVAalp", "=", 
      RowBox[{
       RowBox[{"LagrangianVAalp", "-", 
        RowBox[{"ruleLeavingPower", "[", 
         RowBox[{"LagrangianVAalp", ",", "2"}], "]"}]}], "//", "Expand"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LagrangianWithALP", "[", "\"\<VA\>\"", "]"}], "=", 
      RowBox[{"coefVA", "*", "LagrangianVAalp"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.948641722931692*^9, 3.948641723118191*^9}, 
   3.9486417990331173`*^9, 3.9486428185321674`*^9, {3.9486429970823097`*^9, 
   3.948643089847124*^9}, {3.9486431270215225`*^9, 3.9486433872667713`*^9}, {
   3.9486435039861927`*^9, 3.9486437459658775`*^9}, {3.948644001414526*^9, 
   3.9486440117352867`*^9}, {3.948644250808008*^9, 3.948644252068325*^9}, {
   3.9486443340705433`*^9, 3.9486444336688232`*^9}, {3.948644644040594*^9, 
   3.9486446463546486`*^9}, {3.9486453257789497`*^9, 3.948645349320799*^9}, {
   3.9486460481236763`*^9, 3.948646100461832*^9}, {3.948646184707962*^9, 
   3.948646215910656*^9}, {3.9486465846142406`*^9, 3.9486466926818924`*^9}, {
   3.9486468836477795`*^9, 3.9486468911180935`*^9}, {3.9486471764280453`*^9, 
   3.948647197121853*^9}, {3.9486472605787964`*^9, 3.948647290056305*^9}, {
   3.948653410039892*^9, 3.9486534150198936`*^9}, {3.9487000430931816`*^9, 
   3.9487000448402023`*^9}, {3.948701214045595*^9, 3.9487012567607403`*^9}, {
   3.9489690214026527`*^9, 3.948969021906904*^9}, {3.948969080809614*^9, 
   3.9489690923138103`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"a493aaea-354e-7541-aaa8-99229a9859a1"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"7.`*^-7", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.9486444264872284`*^9, 3.948644533668627*^9, 3.9486453546517754`*^9, 
   3.9486461016608677`*^9, {3.9486461957676716`*^9, 3.9486462170971622`*^9}, 
   3.9486472919294395`*^9, 3.9486534882230873`*^9, 3.948697529068598*^9, 
   3.9487000855392303`*^9, 3.948701287335991*^9, 3.9487018071978855`*^9, 
   3.948731131472788*^9, 3.94873536242354*^9, 3.9487355246900597`*^9, 
   3.9489659867768726`*^9, 3.9489661521737957`*^9, {3.9489666084863453`*^9, 
   3.9489666243027115`*^9}, 3.9489691535909576`*^9, 3.9489780511597977`*^9, 
   3.961473117676073*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"437bc3be-c9f9-684b-a62f-35e0a012e095"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#", ",", 
     RowBox[{"\[Theta]VAP", "[", 
      RowBox[{"#", ",", "\"\<a\>\""}], "]"}], ",", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]VAP", "[", 
          RowBox[{"#", ",", "\"\<a\>\""}], "]"}], "/.", 
         RowBox[{
         "rulem0aTransformationSymbolicToExplicit", "[", 
          "choiceMixingDescription", "]"}]}], ",", "cG"}], "]"}], "//", 
      "Simplify"}]}], "}"}], "&"}], "/@", "listMesonVA"}]], "Input",
 CellChangeTimes->{{3.9486981304280815`*^9, 3.9486981575787983`*^9}, 
   3.948698234479542*^9, {3.9489691687043266`*^9, 3.9489691771917095`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"4a0b5a39-376c-e94e-bce1-841ae86355b3"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(+\\)], \
\\(1\\)]\\)(1270)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(-\\)], \
\\(1\\)]\\)(1270)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(0\\)], \
\\(1\\)]\\)(1270)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[OverscriptBox[\\(K\\), \
\\(_\\)], \\(0\\)], \\(1\\)]\\)(1270)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(+\\)], \
\\(1\\)]\\)(1400)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(-\\)], \
\\(1\\)]\\)(1400)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(K\\), \\(0\\)], \
\\(1\\)]\\)(1400)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[OverscriptBox[\\(K\\), \
\\(_\\)], \\(0\\)], \\(1\\)]\\)(1400)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \\(+\\)], \
\\(1\\)]\\)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \\(-\\)], \
\\(1\\)]\\)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \\(0\\)], \
\\(1\\)]\\)\"\>", 
      FractionBox[
       RowBox[{"g1", " ", "\[Phi]N", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["ma", "2"], 
           SuperscriptBox["ma1", "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"cG", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]d", "-", "\[Kappa]u"}], ")"}]}], "-", 
          "\[Pi]0ALP"}], ")"}]}], 
       RowBox[{
        SuperscriptBox["ma", "2"], "-", 
        RowBox[{"ma1", " ", 
         RowBox[{"(", 
          RowBox[{"ma1", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]a1"}]}], ")"}]}]}]], 
      FractionBox[
       RowBox[{"\[Delta]", " ", "g1", " ", 
        SuperscriptBox["m\[Pi]0", "2"], " ", "\[Phi]N", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma1", "2"], "-", 
          SuperscriptBox["ma", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ma", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["m\[Eta]", "2"]}], "+", 
             SuperscriptBox["m\[Eta]pr", "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["m\[Pi]0", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["m\[Eta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["m\[Pi]0", "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["m\[Eta]pr", "2"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["m\[Eta]pr", "2"], " ", 
           SuperscriptBox["m\[Pi]0", "2"]}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["ma1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]pr", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Pi]0", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["ma", "2"]}], "+", 
          RowBox[{"ma1", " ", 
           RowBox[{"(", 
            RowBox[{"ma1", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]a1"}]}], ")"}]}]}],
          ")"}]}]]},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(b\\), \\(+\\)], \
\\(1\\)]\\)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(b\\), \\(-\\)], \
\\(1\\)]\\)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(b\\), \\(0\\)], \
\\(1\\)]\\)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)(1285)\"\>", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"g1", " ", "\[Phi]N", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["ma", "2"], 
            SuperscriptBox["mf11285", "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "cG", " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]d", "+", "\[Kappa]u"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Eta]ALP"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Eta]prALP"}]}], ")"}]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["ma", "2"], "-", 
           RowBox[{"mf11285", " ", 
            RowBox[{"(", 
             RowBox[{"mf11285", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]f11285"}]}], 
             ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"g1", " ", "\[Phi]N", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["mf11285", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ma", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["m\[Eta]", "2"]}], "+", 
             SuperscriptBox["m\[Eta]pr", "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["m\[Pi]0", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["m\[Eta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["m\[Pi]0", "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["m\[Eta]pr", "2"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["m\[Eta]pr", "2"], " ", 
           SuperscriptBox["m\[Pi]0", "2"]}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["mf11285", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]pr", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["ma", "2"]}], "+", 
          RowBox[{"mf11285", " ", 
           RowBox[{"(", 
            RowBox[{"mf11285", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]f11285"}]}], 
            ")"}]}]}], ")"}]}]]},
     {"\<\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)(1420)\"\>", 
      FractionBox[
       RowBox[{"g1", " ", "\[Phi]S", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["ma", "2"], 
           SuperscriptBox["mf11420", "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "cG", " ", 
           RowBox[{"(", 
            RowBox[{"\[Kappa]d", "+", "\[Kappa]u", "-", "1"}], ")"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Eta]ALP"}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "\[Eta]prALP"}]}], ")"}]}], 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          RowBox[{"mf11420", " ", 
           RowBox[{"(", 
            RowBox[{"mf11420", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]f11420"}]}], 
            ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", "g1", " ", "\[Phi]S", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["mf11420", "2"], "-", 
          SuperscriptBox["ma", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Pi]0", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m\[Eta]", "2"], "-", 
          SuperscriptBox["m\[Eta]pr", "2"]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["mf11420", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ma", "2"], "-", 
          SuperscriptBox["m\[Eta]pr", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["ma", "2"]}], "+", 
          RowBox[{"mf11420", " ", 
           RowBox[{"(", 
            RowBox[{"mf11420", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]f11420"}]}], 
            ")"}]}]}], ")"}]}]]},
     {"\<\"\\!\\(\\*SubscriptBox[\\(h\\), \\(1\\)]\\)(1170)\"\>", "0", "0"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(h\\), \\(1\\)]\\)(1415)\"\>", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.948698132211008*^9, 3.9486981580808296`*^9}, 
   3.9486982351719246`*^9, 3.948701807445612*^9, 3.9487355249452953`*^9, 
   3.948965986841902*^9, {3.948969169610264*^9, 3.9489691775785522`*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"8f1f1918-eca5-9941-8e6f-6df7552d347f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Pseudoscalar excitations (following 1612.09218; it is connected to 1208.0585)\
\>", "Section",
 CellChangeTimes->{{3.9486468355457344`*^9, 3.948646841352928*^9}, {
  3.948646913457857*^9, 
  3.9486469275682793`*^9}},ExpressionUUID->"802edef4-d5b4-d144-a3ae-\
093b18d541ff"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
qQPUzZK23PlftSyc7nnOjJ7tU6cMaqgkOq36250zev0psf+VstHU3Bq6K873
t9xr917mfD2QXL9D5lO/n6QKb/fZiUkb86y+3QEA/JW24OyayQktG6oCCFlg
naYDVl8vrpFbGmsLrp06eeqkQ3HmjtX6qCrI4yND2y600WKJf398bMdemXla
y//6+c7+NZmZvy+3Epkr1m3eefj83fdu7CHBPj+7aUNWVva2bdt37vhegbNr
+44d27KzN23ceMzqPTknMQV7kjum7i6wMg3gSt5+vwW1YuCk82QZW/L+pe1b
UPz7E+ntE2yM6L7VK6wP6YoVa7fsOPSHW0fUB0Oa1CF190sbMyv6zLhGMV5K
VVEk6eplEannzdqqcxxHlxb6/GLNoXj29O/jR49tWLf+wb17Pj8YBAKBcDH0
eh3Pe3dRl+2Tu6tKnpw6kPtKTMFpDyY1TD4kdoiiXufuP/W06uMxL3cld0ne
/VJinoH/sHdoqCKw+cw/pTedYvLmxatl8qB+bqxw4j/f3jqlW2SQokGHYVOX
rNp66OS58yf2bVwwfmiXjokTN98o5Li3RyYMXprn1okB9++GPgpjedgjN+Zl
tAVXTzs4bz95VvLE/Yfyt5zFnvjs8zNZGzZnZ2/dvm3HrvKp3c7t27dnZ2Vt
2HD8sY1xZO8vbK2pO9qpnYLY56c3b9yUtXXrth3by+eTO3bs3LZta9bmTRuO
5bt7AwSmYNeIDsl7Cvw+rQYAUI59e25Bn6gW7RMGJbRropITMjGCuqx+VgOL
q5i7C9sSwvEHhjRqlzA4ZcyY8RPGjx+XmhAXFCA+r4CwjkPSJowbP3HsmLSk
Ab3iI8SNVGTKxKz/Sjvl2UlV0Y/XJkb1zXpm7d/5z3dytm5Yu3rhiLZqcZCD
41KXrtu8ZXOWMTauXjx78oh+bcMUqrrxqZkX3rilSpd7eXFb1uYNa1ctnjY0
Jtj44qqiEyYuWL5m48bNW8/87fb0Bv/xWHpsx8U3bU4/vx5IDe0oYVcaOn9t
QouEzc+tjuinvJwtm9auXJzaqo741NStUhZv2JT1fUg3rFo6a+Lovq0iCKJe
fPIKN42ob4Y0xtaQejNV5a5SKLE8qXyLPeFje2zXDp9frDkaRYUfXzx/9vj+
ncIP73x+MAgEAuFKeLd1lb2Tu4u4fw/+0jw0pO34bXc/Xpree0buh7xtE9qG
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
JZ99fm2FQCAQCNeDoiru1PGf8w5vWWfhjGAt1q/dsPNCgZ2zkHByb6sQTu73
bdxb0p0aGxaoCBl5rEr7z+L9ycFyRcSEPyrXYzP3FrYlxMpqi7XqnPbtk9vX
b957USSlaJh7vbGHUtlkuntTVTsSxVRVaK1JVekPpnxPVUnZo9l50lNVysjJ
l6zN7e3OJ7l/j46JCZYFRA7dXTFZrpaqoh+v7FFPFlCvw9xcKzM7R3H/HhkX
oybkEUk/HrZaqop6vLp7XUIe0mXuJSstLvjPe4eGyIlW8+5YnlBmJP52zdro
CTPKnpqApjMvI1UFAH7ky6GU+nK5MmLsGQk9q6vTnxkfGRDQaML5HxOaorPr
t3+/RUZfnp2+8V//W/bsSKpqsqOpKmORTGCLOXY3QylvVDVkl63mmnzh4VHh
AYS8/qDsF67ty8F++GtFcvOgurGjs28VMlVTVeTbi78PaawKazN2e94Xq6de
/dmJ4YHi5LBijiW83mt3PCp/vTPSNll7vblnK7oQRMu5dxw+cOPNU1XzjBv2
RrS8UdWgPbYmD8KIjoiUyxVhA7Y+d3GnE+OQRotDuvV2EVM1VeWNIe2qEIb0
tj8sADTiP11a8/7tG59fYSEQCATClaBIx88AjhJO7l0Vwsn9pvVUlalRVVDC
lir3legLk5sGVN4xzfjl9xe2VssU3VZU26aFL7qyfEiXbqOXZO3dm7V4XELP
0auvFdpOM3DPVnVSqmLnuXUBYMn+IeICwKCkg/634sApX/cO87MFgMrIKVZT
VVLmk+yHyyuGx2qCWo7ecvsjUzVVRb7N/X1QtCqkffrWu1Zmds418hUmlKuG
tairiUvbYpqjV0pVkW8urRzUNCik7fitNieU4yKU8ohJ539MKD+dWbuz/Jrs
yqy0zVavyYQZZWeNtdumAAA+wRcdSgpViLtO2K0B+kZ//VqtVMXUK6BO8r7/
lf8N+3JD4rDsd+W/R3lOwg0H7ekp8WEhYXVD6jkSYSGNBm6wummcTR5NVX0r
PZBcVx42zt7uHxWNqqyuqf8mvkCn0puqZIqYcSctdggl721KGzTnrNl8iy+6
tmVR1jVruRr6w629SyYM6Na9z7C0frFit6XA5oMnjUvp07XPsKmrjz78bLPK
iLk1pyVRaXLIFmwYODi7Yg5p4/VmbmbEBSr6bHxr6wEsKzmUFKSol37GTlv1
ikZVNtqLfeMLT45rQhBE9AQrI3p/4+ghc86ajR//6WrWks1XrbZp9+mQxhOK
6p0HfJeqYvOXtR+U0PfM1b99fp2FQCAQCFeC9GBDdZOSQ8M1wsn9rNXcg6lH
uqLD0sdVOy0sbqMx7olcaf7E3FkQpyAU5a2hS57d/9tUA8w+3dAnImZabsVF
/tdrc1rW77Xmsa3zJHNzTguFuucm97ZVP5ISJLZVH7zHs0VIXvN552Cxmr3e
WD9pq247VSV1PinM7G7uWzJ+cLeu/YaOHhCjEDfdix44dWxSv669kqesOm5z
Zle5ke85a41831qY3AkPu3fZuIE9u/RJGp0YLzawImIHTJ4wvE+PnsOnrzz2
yN6Ecm6sgggefsBsQrmx35Ctkq7JmFuzY9SE1eaoAADex71Y11stVzYcfczm
prns+9zVKa3CY2ZXXYjEFaztqiQCmgxbtHnL5qwtG9cum9I/tm77zHwHE0hU
0fN7d+7cvu1Y5D1+89W5ylvPpqroa7NiA5UDttreiFhKo6qSe2v7RgYomg3J
emh5s2j6yvSm6jpJB39UxHH/rO0eRHRc+dRevRBPvt82MFgsAeq19u8SaS8Y
V7C6m0YWGDV4UZbwcm/etG7J1IHRIZ2WPZZSnESeGB0WEJp+yokbtfT1Wc1V
isTtH+2MaHmjKut3aEvuru8briQaD896YGVEL89soqiXZLaPMfdyfXeVusPv
f9t9kuZD+vSrd4a0fmBo9eaxPqyq+ri1X7BcHpp6VEvTOm2pzy+1EAgEAuF0
kHqdO5e/VUVf/zVaqUjcYa28iS/c2V9jqVHVm829VERg/MLK65zoq2IJVnnH
af7jrhEjd30U/6H4eFq4snOm2X694sbKXYPCRh79ZH1eQZ4YE0rUTzvp3lTV
qV/ErkSaxO1u6HHkB/i3m/uKOwBK2/baBW5KVUmbT5rhyXc7BokbG2l6rvn7
i+Srm4pGvha7kO5Papx6zGYiWHjY7UPF3X+UfVZJnlC+WNNDIVc2HrJkkzCf
zNq8Zun0xOb12i9/IunbyZOjQ1UhaadqSbt/AKj5+E+n08W9VoObdU7snTAk
OX3anOVbj1x9/rnyhT7379a+dQl5ePKeqmWjfNHuoUFyVdToTTnHjh89duzw
3s3TukU0m3HV36tHyaOpQcZU1cyrNlNVdZ1KVYntv9RE3GybKwB/NKo6bbkI
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
6PrGRlXVrsm+Pj+zOKGRpuva59beJ/zH/cmRUZMvePBWMACA17BPto0b1Kdr
XAhByOR1m3VOTOhbHn16d2kbE6YSN9drMCKnaheB2sdWquobX3xufHTMxHP/
88wwfD2cEhYQ0iI+rsvIpVuy1y2eOm5W1o3Hh8bENxswb9nk9IXl/Y5cxuZv
n9C/T/cWoSqZnNA06/rj5U7o16Nr+6j6QeKeLOGjDlt7vXW35rZpknzgvcvH
wxefnRgVPcVjI5qTEqqqG9U6ttMvS7K2rls4fezM7BuPD6fFtuj/W+aktMUX
i9yVunHHkLa2MaSup6q8g+M4EusBEQgEoqYFRbozW+Xhkzv/ee+QuvKQtBOV
jll/ZES9gODheyysi9PdnNsuMvmg1MbbDmJuZDRXEDLV4B1OL8krubO8R325
XNU07biNPJXxwcSmSfLwCWc8s8iBf5vVW0XIiLiMG34/46jEk285aY183fXA
bP6OsQP6dYmpHygnZEHNOyX8uCjr07N7m+gIVQAhC2yYmmN1r2/dzfmtG6Xu
99DbHQAAfMVmqkpcI3luWqs2s/90sZrIIjp3SmNVcNLBYkPphxf5T/79Ut6D
gS4qePrqi//Us+nvLOoam3bMPedAvujclHatf/3LE7d+qNzpjYjQpAPFhpIP
z/Ofmo3opxdP/GlExSHtYnNIa0qqygTlVQgEAlHjgiStrU93gidP7mJCZWv/
IEWXFc/Mzprc85VdNEGJ295UO5Pq85Z0jEs/8tZjFdxFuweoCZm1tVr2v//D
ceP+3USL6ReK7d5BE3tJaQbv8VDjWGOHT0KmHrKrqKZV5HjsLWe/kW+ftMNW
80Zep89b1Kll2tF3fjTJBQAAtzCmqubnUayAszgPoB9vHNwu9cA/7l7/zT5Y
2lqp6b7htX+fXPiPp6d07J15q9R9P5LO3zCwY8p+D4zo4nYKZS9/H1HjkHbo
nXnbcvE4x4nvRd2p9BqUqvpmPGy9DuVVCETNC1KvYxhaCAPDmII01kr6/MAQ
Xgi3Zqs8dXI3KvlzRkydVgvyKo6XvLu4XVDcjD+rttbmP56Z2ClhmTtnLdWY
qm7kdQbtcqKsiv94NC2SIGQBkSOPSMl3kDkpYV3WvPDMzIb/kN1fKSeI1kvv
18QuR9/fcpZTSs6y28i3V/tZ1zzUCdRh/MdTk7r2Wn7bk293AADwEfL4yLoK
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
qEc2d+l9V9/VY2SR76wf2rL7wsKYyX0kXV36aqbLndnrqyuhvB/Ekos7l777
xuu9urXv2rv34OlLd1wsCektwf42/emMZ4fln3kys1XlD2/Wd7ncqS3e38f6
rw/4ewc+eyU3q9vCiwZ8MKRrK/s177nkkp5diOfHUVlkG54xIP+OLsct/tjH
7dPrjfiJijAQzvPjyEy13a91zQ/L5GtX5/Ea9iLzbHwzS7MuRvfADMroebes
2RHKPE/vW6B3us3umJY5eiMd5XZrfdp3TnVOmsL5XbMbjN0RfNLIt9e/0azH
54UwFCSRZEmKwRLzDG3KDgxBySE7Au5MoyVmj5qjF2mG52viECMpAwcAAE5B
04q/KKPm43O8MyD6+D/I/MVsHt1AMVUN+uahvgUBe2xOx4YDVv0dK2Ex8u3V
/eq5U9Jf+vxiCI8a2XPtjzUfje7bs3ObTr37jvq44PeiipAWCs9PY5oMWl9n
x0uGK0cxVbX+8FBtax1//rOXWs/4U/emVn6wZVzzFu/sLNVlXGG2vFUv1Z2S
MWRtsa7f50/P75yRO3qrqQDAJ9odk62YSoas0zk/LJKvXb3Ha9SLjNk6WnHg
yR64viSCbtZWxdGChVuvWWhUMnrerWpWm+fpg9brHP5T87q6n3p7a6SlAYy2
W+vT5JymK+d03UN9vT76n3ZZGcN/CjVpuOMfdWzcN9/KcwrFtpyMJAqJ+tYp
Vh68EBRTkmXJ8SvU4ftDZQXLVDlZqZHEzncJAABMoBWg0VltGSQSHOtvXeEe
nP/1hxULPxzUJivF5U5t2X/avKUFWw//XRZuKSxeWdKzfstpv1XGSOJq+d66
IbkuV1aXT88GtlVJd7ZMe6FhTudRXx2++fvMV2f9cfNI3uiOjXI6T910K9gx
SLfyBvZfeavO/jSEqeoxf3Je97Hb9PqV8GfmdanfbvaxcP5p3IMLv21Y8fnM
we3dSuBhqz7vzl9SsO1QUZjzJF5Y2C2jyfhfWLNnyWS7Ectku/q9yNgHF379
Pu+zWUNbqwGeLfpMn7tk9ZbDlhyYeOHzF3NHRWwfVOTQ+Ju8LYjnP3vB3XDS
L6a9j0zfjlSZPKf88dkdsjJHbAw5acj97uXMZ977DVGASSGe4xx/UocmWBpn
CEpyMdFKLhfjkP2dwPN0rJrcAQBAD4LAVd45W1le5nhPQDRRAtul8gsb543q
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
9XeLRXkD3ljtC36TpSCGg8ja1SHSwPcLJg/t9XL/YWMHtVcSWGW2GTx90oj+
L7828r0vtp+LtIHITVXV3Yxs/Nu7yfj/5Iuj1Tn+3L3jGxZMGdTrlT7Dx/dX
YmndaW2HTntnVJ+X+wyfvnRryNGRPXcvFx5dPrSxy1X/pbl7T52rnm9nC08e
2b+tYE6/llnpr626GegrImnX/nOqiD/2UVt3Vu+VMFUltow+KMli0nRbgiCQ
j0chSFDpJCYulNziec7/ciN/0HB8sQ0AAAD4c/d60fm/7zvejdhHS7kf7LnP
7BjXOC13YrBkTPZLLj+2+LVGmQ37rTxP+/9curGyX5bL7X7xC19hMHr3lOZt
31i0737N/ly+k9+vfkpa+1mHjS7hrTFVcUdmt3Fn91+jO+WPzNxZOyxL8TLq
88Xlct0GNmM5o4K0+0am2u7Svyr0tSv9/eWr6a6Mlm8sWJn/9ar8VV9+9v6A
tg1f+Pyigdf7fu0aOV5DDawbkq14VfX+8op1DVhkqvLJzHkn4/+KO7Lxl5m7
a4Y8pXg3vbbMyHS79uXLWSnpvb8sCjTdfhz99Jjt4aabqXZ9n645p3+VWTpp
mB3jc9Iaj/8ZO/7EFmUwRo88JSNvVBB4hrbX1T/00xyCEliSJMKHCgAAAEhI
ODbgW2PpyuKXst2vrLjuTO5Wuezoot6NMjI7fbC3jrFHvrN2QH13Snr3z85X
da7ku2GZLnf9UVv9Av64Q7Pap7my+68xYapqoJqq/vNncJcoZsuYrJCmKrn4
m0FZmW1nH9WflIvZ8la2Egg2eK3+DOqGc0YFbHeMaioZvE5ngij54bdDSaPt
387bunXb9q1bN29Y+UGvxu0+OBi+zlrAdg0cryExW0fXU8waA9ZblenrsfWm
KhPnXRn/BimRjn/VPE8fuN7AdHv4/dB67rSO804Enm4f9599JOx0M9Gu36fJ
OVUCAAess7YIKLnf9XSnv/bVP7BUJbZMhOZZZQKSZZljWcpjYz4rhqFJK5b0
FoLiQjzPOb6KBgAAAIB9kNV7nfVtxfa3crPbzwm4JbVbcvmxRa82THc1HVpw
OdDGVy7eMLyRy5XZae7pqj0EU/TrdxsP3fbvbOWWtxq7UpuO32nMVMUXH5nz
QnaKy53SYMBXF8uDbIf5vxa/7Ha56/Uv+CfYAImXFr6QndG3IGD69wCSyk7M
eyldCQTr8sG+h3rdY8zkjKrb7oturd39JboMk0qipCcblYqWDnlne2XVX6WH
t255wn2Jf7v6j9eASAPzlbRmrsyOM/94GLNeVSbOe91EVWT8Bxsbf6ns5Nzu
yjxP6/iffcX6p9uUJqnpzab8WjPdincvW1dlMuYOzh6/Mux0M9Nuzadrzul+
w58OpcqtbzVyd5h7En4pCS4TG1uaCns3MyZBsDGRDvlecozWdhiCYlNk4YoQ
PwAAACDhUcIHBL9tGndw1rMZz079zYnwP+lW3uv1UrJf+DB4GbiK/bPaZ7pT
nx67+X6QCmn3NgzLTU9rO/OPSh1HIF3LH9apdduObVo/26Rho5zcxlXkNGn6
TLu27Tq0aj9lS7n2Pfypz197tsXTOTkNc3LILzRq2Kx1q1Ydp+6oO1D8iY87
p+eO3xa6A9ze97u0b9O2XctmTZUvrG632TPt2rRt337S1vKQHY8gZ1SYdsuC
95o/9nG7Jxt9LP69ef3+qrMlP9wyefSKQAFiWrszOptsV5+4Pe93a922Q6tn
WjTMqT6VOY1yyWlq26F1h8mbyyNswKpcVZGPf02iKv3jz+6Z2blNhzatWzdr
5JvnjXIatmjZukObNp0mbg49/PzxjzqluXKH+0+3FYOH1phjg063yNoNd04j
njSPuT/ffzar+bR95vMSQfEhURRNPB+tN/54vbaWC2RoMyVFICi+ZHdcLQAA
AABiB18woGJmyWj1wQFnElXJZZf37z0TOjxIfFD46/Zte88GrE8vP9gxsU16
Tu+Fx0JbeuwVf/q/nTNbTNqlx1hmTlbkjDLe6NUveqW7sl9ZHjhjPXf6s75j
N9sU0hcDsj4A0KB8438j4BjbOP5S0dKXs1LSWg/9b/4qMt9WfrVg+uA2OS8u
vBD3Fcj4E5+0z2gz4yAsVckgEzYi8gnLuyFJkq0OIcheBSW8HF8zAwAAACCa
qMGA7KEP2jTovihOt6CVp77o37TF4CVHHzmctEP6Z2Xfhk3H7Yjc6SOwLMoZ
ZbDR4m+GNHC5u849FcjPoOLkwt4vzjrsnCHHdomXF73c8O3tzlUbqB7/04F2
oXaOv1z83ZB67rQ241ds2U7m25ZN3+fN6N2o9Sxbp1tUxP35QbusHosvOJOX
D4qyOJY18WTkuXBZ2IxLFAS7H+hs4FyUEBT3kkx5SAIAAAAgrqEqSlZ/OHf6
b5GGSjmiipNfDGz/8uyfb8TE62Tq6JzOuf1X2pSb3pKcUUZVsX1sY7XR2gYK
qfzqrk/7tsh+edmVhN7y87dPHLhY5pgVtHr8f61tKbR9/Oldkxsriap+80uR
tWzIxB1+0+229b4n9ku+/9ObTdpP+81JD0yn5U2mwoeyJJl5LHoqH9swSjxn
e1JomqbIIVvecwhyVoLAO75aBgAAAIAjlDLWv0S2WXL58cXDek3YcKl6w8yd
WJN/xNkule6e3L71tL2PbNgpRJQzyrjEi+smDerfs33jNJc7pV7bF/sO6Nuv
ij69X3muTbPMVHdK2tOjNyVu8J+jcnr8+WOzO6qJqvxTZG1Zt6+quqJcvO2d
kXnWTbeoiTo2p9vTI3+6m1x105RqdBzL0JQvGo78P8PQSZKRmzZeB9CjBMjb
8kwk58HupzmCAaHEE7mJOb5OBiA0ZQ/uFRc/dLwbAACQkASqDBizksuOLho9
fMFBvzzrYuFnb8466LC/gFy8992uz8/8w3IftSTPGQVFV9LfS17KSsl4LWiK
rE8HjN30MO6mG31qQfeOE7fordOZGAodAaeUkOMS3GBlusC9154HIsNEIzs0
ggGhBBPK/wEAAADJTO3KgDEqufTwZ681atKt79BhQ6t4Y2C/V9s0GfD1v85H
trAXVw564a3vr1ua+ivZc0ZBUZVc/N3gbHdap/kBU2SVn1j06guzD9FR71Zk
ku/vmtqj78IT8Ri2aE6iKOpMKs7QlJTQUWPmCvDZZ+2xtSCgDyUYUE7k0wol
lTjOTN45AAAAACQSNgU+WKbSrWMbprpTXLVJfeb9P2Ii57Ncfipv9BsLj1Ra
95VJnzMKiqbKt41vqCaqqn0nkCqu/vJZ32YNXv4y3qYbf/6rUaM/P1QSL36j
VsioPcSOXOIxIp43mehGEm2Z6LJsb0FAHwgGhBJJ5oJ5AQAAAJBIsEy8uUzE
mmSGZqzYFTudswhKKokX104Z2OeVdrmZKS53dquXfZOtb9/+r778QuvG9Vwu
d2rTtzc9iLvpxtFM3PU5EpnLiZTA1ipzjkwMTdnUnygUBKx5oCMYEEoIqTbe
aHgkAgAAACCWIQt70Z4XyhAEQZB9kiTzhd0T1VpluoKYfcnnTSfRMvNARzAg
lChiGdtrEwAAAAAg9kmSElEQBEEJowhtIIkaMmYueoh8xmtbuY7QSe+tBcGA
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
Pfr32haeC4cvT7FwQdeMRuN20HZeOoa2M3pSQBvdHynWqgicS6OZVIpS52Fs
mqk9quUqWKgmuf2Gr5iguxW7U8YlM7BWQZYoluOXAQAAABAXSFJsxBnpia6y
As1Bi9G8sxiGbDN5jlMctERBkqQoOGjZ5IOhoBjranB8apHzybKM/ixDmvRn
Vq8LZzB1lSAItWYd+Sv5Em0akPlgek4yFu3KTRyUlZKL1w+s323+aVu9u4z6
29DhcnmZuMT8I8uMypwrYAITzL5KzppVN/lYuL8lMIrrWvz4KkOxqVguDAEA
AACAOCBkObZoKqa2e5TmW14V2EKrNdxZXnW8EUVRDTlUjFqatMAckfwb+Q01
8k2JfWMZNfytKgJOCWP0eGLEguTIeJLRIOMT9mU9GU0yhpF4X+gvvM4yoQwa
kVcuC/39xr6KdaosIHd4ZpfRP5ab87HQ6ZthzrIUIpcXuSpNXGiKtcpsfjAb
7c/xScAMcvCyiCMsSeMGJbNialEHAAAAgLgjdqL/HutLBATiHYamyKzz3wRJ
oshXxdhZY8dTUleF85AxlHzbHNaaJfWb4KyQXHJu9+Zt+8/dqbi55v0tlyvK
7/9z5cLFv+7rsphxLKsYG9XD12JUQ3vWeb1ec2MSIs9emFqNwU+Z6Wz2gmD7
jIovalmryCXveJeAIWCtgiKUkpwzKV/PAQAAACBCGDqam9/wQjmnpEJ1Xau0
aR0bNnVVPLq3MYHqcymGPjUhm5WbSvnO6n7Z7pS0/3yy6O7tW/59ILvXEPZt
IXi9J5ZhQqS+N205DBEdyXMmfXiMhqzWDJssmyvLHo+zUQ/+1iqY8uIRWKug
yKXUylGL5TCqq7m/13R1voIat3PlZmj1/ZDyVCiLDaevJgAAAADohOzjnF6/
BBDZBcdy0mAQXwSzYxgtEhc7+O8cBZ6vdaXQVPnN6/9aEisold++96A8WDeY
QC5eepKMhTBzmY6X1Owh4s3Tp+/UdrIynXw7wtqLZGtGdmSOz5ZYQAn+VQKo
OQxInKLec6JRXxVKBsFkDQAAAICwOJmrWYfIflxN/yQoeZ+YqoxP2ns3x4cO
xBd1HYGiEP1nH1pKpRBGGEo55Eo10xpFLh8COV6leoKRql7ecOmeyKjWyuyk
s3Qjw9DB/DSM5lev+U6akh7s+3DAiLxT5VWnWFCCSpX7htnvJN9g8KZVZwy9
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
ZwoAAIB+yIqsphIcFP8ia0vHJxUAAMQFFaUlxcXFD0t95Qgr1YxYlaU3L54+
eeHGIw9De0qvnz1/o4xmaIahWQVGQTG8VNw5sW3Nmq1Hb5SRn6g5tTzkkcrQ
NMvSgkAdz5v84Y9XOVFUrTGKQUYmyFWIIm+fHYYcSLAnO8exSmQoTVGVxdfO
HD6wf/++QxfuVlCs7+iUQ6syKwXr4e17JeRQybdwHCeUHPp282VBLafIHfxw
Yt7N0C/ApLIT87tnuFNcmR1n7i9+ItDM6/WKAhHv3/lopvUmh181Skx5Zfmj
WkOqJfkk/Uue7bYY6G2mAPc8EAHk9sLzWrUH5I4AAAAQBvKwMGQMgWJcZBPk
rJc+AADogdynyh7cvnb9dolHzZquJlFXsqnXsZnwChzZ31RTJcGHQBBEFfJn
Ri16F7BR8i+yljhavre6X6a73qB1d2rnkZZL9897seVLU1euXjhh9Ie77wWw
+lScXNK/U88Pf7kRLI6e2T4mp9v807WT/qiSivLfbNemQ9u22zb9ZNPYMkGe
7Nye97u1btuh1TMtGuY0ysltrJDTKLdZ61ZtO7TuMHlzmdf/l0M6EZHTx7L0
rY0zhxf4RlCWgrz7MtRu7c9GMcvWyknjOrRp3bpZo+e7Pjfj3ffWFhTkr1o1
Y/oHL7/4YqeJW7Rekoeshbvsq39d3rlj518XL1WUx1zee83TrK68Xm9dE2Ly
WPCAdVS9IEAGCQAAiEei8+gnS47gi0QoLkX2a6xqsXJ8DgMAEgDF6UjxOFJM
SVoBUCUZtR+8z6Dkg+dUI5IgigTVrUhxKJK93mqzBH/ik/YZbWYcpEPYKSIQ
aVHxIVLMCkrPSbdrZWikbpw4dL64tqFKE1d85cj+w389DGCKkstPLB7y2vjv
Llfv47kTqwsO1zINhTJV1eqkTS8XLCmeosep6X5ZJfk1cq7tc9KOmi+T/kFj
DYbCKY4kLON/FOS0+5djViI0Y+81U4ikpuR0k38lR6WceklS7VexFR4IAIgV
yu873wcAgA1EZ3nmn9ECSiRpDgaOT2MAgCP4xbVphiaf2xJd5bZU47Ok+CaJ
qmVJqrIsyU9YlqwW9+cH7bJ6LL4QVykT5bJji0aOXHDgQY1VRjy7YNjsg7We
oXpNVZq8XpmMPM9zZOStSgfkq/0XoUiv9K9DyDTTTIKWTxsyFaNgyfHFAOqR
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
hHXLke+sH9qy+8LCWAouk6kbGye8+Pr496aMHzdh/DvT56w6qO9oa4n77d1n
0luMyD9d9kQm+4qfhiljmNF8+n7W35zC3zvw6eu56d0/u2DEIUi6trJf855L
LunZY3t+HJWlWcP0HQ9/ZHbb9HrDfvBE9obJ8+OI+i6XO71vgZlh9Gx8M8vI
lOOP/qddVsbwnyLstN9UvxvFQgSGZfScVl2Sl3XbYY2Ov0Wy/bginJYGJN9e
P+zpHp+fCXWPk2XZ8Zs8AAAAkOTwfIy8lISMyev1It8USEKOFZU53gebKK+s
pCgPTVOskpxK16VNeSoOLRml7FsHrnuoxxKgxy2HPTanY8MBq/6OiZob4t0/
vni7e8On2g2aMXNUvyGjxo5/a+SQPm8uO2nGlOb5aWTzgevq7IOZraPqKaaq
VrMOs7XGhb+woEeHGQdq/zi45AdbxjVv8c7OUl2fYLa8pTh0ZQxZW6zr9/lj
H7dPrzfipwidoZnNo3MUm8Cg9fqarfXpraPrp+ufco/547M7ZGWO2BipB3fV
acoeuL4ksi96QhVHCxZuvWahacToOa26JHfozr9vdPwtku3HFeG0NCTu+Eed
mvTNLwp+j5NE0fEnAgAAAAAkKSZ2JJB+iaIA1/R4h6E8lNN9iFP+vXf/zr0S
x7thB48eGT6ue7dvPJWVndGiz/S5S1ZvOVxUFvJ+rsstR7yypGf9ltN+q3Q6
OtxTuHJwiyxXg55z/iiucqSRI3CokW6t6D8o71Yds0QIU9Vj/uQnL7+9VbeV
hT8zr0v9drOPhTOkcQ8u/LZhxeczB7dXAxJb9Xl3/pKCbYfCnD0lgrFzRu7o
raZi6dRmz//6w4qFHw5qk6UEPLbsP23e0oKth/8O02yV2AcXfv0+77NZQ1un
K8Olc8qRTs/tnF1/zDaznTbbri6JFz5/MXeU6QH1l9lzql2SP1JhG7BzHELI
9uOKcFqaErnH9cp65r1fQ93jHH8cAAAAAICmEAQYTxIFwfE5A6JMeXlpeXm5
492IHcpLS/73ed69B4lpsKoFy9BaHjly7XMsS1c+JMfv/wuj3nwzu+/ywjP7
vl84vmeLlr3GL95dFMSXQZ9bjlT0Ze+MnNE/PYxmgFFtySV7p7bOTkltNKDg
mjVbVr7w00Ef/F7XQyqUqepx+fdj3ijQm6yK3jejZWbXuaeCOyvL5ec3zn+z
67Ot+7y/fPvxi2tHZKtBVV+dOfP7hkXjX2zVouekxbuvBfNEES8s7JbRZPwv
+r28fM1e2DhvVJcW7ftMz9t+7NKa4Q0U95V+eWfO7N/w+cQeLVu9NOGLXcEm
jfLpTXNHdGvepv97y3ccu7humOrdpHPKkU4veD47d8IuxrA5qE672Vq7Z3W1
q0vi+c96NBi5JSJTVWTntOqS3EiHaiCS8Y/d44pwWkYkqWhZr8xGI0Pd4+C1
DgAAAMQCLGPLWgCyQxSWT0nGpcN/prsyh6wt5gWeoXH2qykv6dW4wcYdf0at
xSgXBL987d9imtVqIoiiyGkRvxUB4h9btWiRPXC9Fg0k3tn1fpfs9Ke6vrep
KIBrj063HPHcwucyGo748ZFzflXiX0teznC509p++Geoza4RcftmDP8iQCG6
kKYqbv9/hi26qC9ZFfPbu63Sn3n/j2CWJM/Z/BHtMtMa9/78eKnqHVY7qEq8
+8uM57NSG3aZtjnQ2XssXVv+Slbr6UEbCNJsYcHINvVTc/ssPPpIa7ZWpJV4
Z/f0rk+5GnSbuulanWY9hfljWmdl5Ly2qPrTtQLQlCnXOUuZcpuvBUyzfX3Z
K/VbGomiDNbukwGAYaa6PkVsqiLndGR79Zwee2TqnFZdktuCLcJ0jX/E4xD9
44pwWkYs8fyCbtkNRvwU/B5HbrnOP+YAAAAAgKRVcSKUJE5OTh4/sfxAqTYH
RJG5f+EPx7sUC9w7syfblfrmlFX/lttuRLpxv1ySJIHnKY/tx0V5Hp3Y9s3e
3Xv/+ue+J1yo75kNc2vlquJOzns+nez42k3fXVzbZUCvWw63d3KzrMaTdjlW
IVYuWTeoXoorvcnk3ca9cYKJKn5QEcBBK6Sp6jFz/cDmH75bs+rLRZ/NmZ23
76H8mL97dMOS2R/M/mz94Tu8328q0X/Z9UduKgvYYenGt8Obp7rc9futvlF9
WgLk/+FOze2aTU5o23f31Dl7j+XidQPqdZlz0sDTWrrx3bBmGSmu3L5f+yoo
BkgKxJ6a3yWD9KTjtN3+fiak0yObpblTnhqQX/PpurmSyJRTSiuSKbenrpeK
XLxmYIOOnxjpdJB26+SqCjXV9SkyUxXp5pst1HNaUNNNg+e06pLcFXB49I9/
hOMQ5eNSpuXwp01PS0vE7ZnS3N1k8i9B73HIrA4AAADEDmQjZvFSALJaSFGV
zDA0JYqKewd7/2hlecJmFzdC6ehO7d0p7k6zj9IcZ9/VceCPA2uOPBIEXquz
ST264fSBKzA0LUt09f7dL8eydHXpi2R/58psP/tYLZ8GvW458p2Vfeq5uy44
Y6T2naUq3TC0vmI+mnnIcLSbUYU2VUnXNs95Z1T/rjlp7pT01768cmH1xLc/
2XRs53+ey3LV6/rpad9WXL6d/3pm1nOfnQs4ZqXbxjUmO31X7vAfS2taDpCq
Wrq65OV0lzar6/iS0FtG5fb64qr+gMjSrW8/Tbb/KU+N/L7GfSRQ/mrS7EvZ
KS53WoePa5ot3f520wzyw/pv+jnYBUrrTaZcj/TAU450evOoxi8tNdDpYO3W
TaseYqrrU0SmqtJt45ukqef0B79uGjynVZfkgUAmHSPjH9k4RPe4yLQcq5ht
TU5LayTfXtUvI73bf8+EOPccXg4CAAAAsQGSVsW4vF6v45MkOaGoSoahWYZh
KCIP5akkF4v2BxPmEfI1giDQ/xy9deMfE53xT6Bx+eqtWzQX5cA0a1GC2iL4
+I1L5/bs3vX7nxeLKYqhPQlvy73xz/Vf9p27yXJyVX5xJoCp6jG3e1KTDHV/
98nxJ3eKut1yuF8mNk196q3Njj0U5Hs/jGqY6k5/aelfdpvLQpuqqrpzd1Xf
einpvaZ9OGXO/rLHjyu3jW2S6kpv8s4un5WD2z+jhbv+sB/KA30HvWNsI3JG
UsjWuLDGZhOwqhq7e0rjNNXs8PGJ2ueJ2/9umzfW66/8Ru98O4d8lftJq2PA
UmvcrneeTlXNDh8f91Z3ekKuYl7L6vLfQr9PB6pAx+2e2Dg94JQj//b7e+0H
G+h00HYDVAAMPtX1KRJTFb1jXGOXdk79B9fgOa26JE/xj+vI0PhHNg5RPS4y
LcfmppuellaJ3fVOw7TcUVu8Ib8XGasAAACAGAFJq2JWoihEuKkHEUKGn2Fo
jmO17NYRfht179JvP+/Y8O23Px0oMrcY/mPfvuadZu1Vw6MkSVQSbkewqD55
4pLpz5KZydC0yXFw6GzGC//ceUiGl9yZ+fLjn/Trrexbuy/6y8/YEdBU9cf0
ZzLJTtDVbNqeWsYXvW45/Kl5z7nTX1n6t3X3MKOS7+356JWG7kbPDR49fMTY
seMmjh83dsTYpYfKn/w1rvjq6WPHzhTd95hNvq7HVKXsoxu4UnObDi+4qbYj
lV35/ef9V8trKhI+XP9GZlrLqb8F/I7SbwbXU01VPRddDmOq4vZ/0NJN+pPe
dMre2sGP4rkFr0/+Wb+fWel3gzNVU1WPxZfC2QT2z2idRnqY2nzKnqrNe+k3
wzJd2pS7HM5U8sd7LTMCT7nH4tkFfSca6HTQdgOZqoJPdV2KxFRV+s2Q+i7t
nF4KY9IJdU61S/LvAE7thsY/6DgwZ7+bN3vWrA9nBmfWR18fKvFr1ubjItNy
SJb5aVnzgcINcz+cHeK4Zs6a/VH+4ZIgVUOVbFrpWT2/DG2qQiEbAAAAIHYQ
BMciPqBg4jnO8YmRCJSX3v/3blHRzdsVFMPQNE0ptp3S+853zBQV5WUfrzxw
nxNE0QdZVjNl927q/Aa8L459lvx6r/oucGpeJ7VI/TMz/qxxYHjCVCXLMsex
LFNxcPEYxWkhs0/+jVr2G71uOWpoj7vjR8esvJEZE3d9+4cDXh7x0YI5744a
MebtcRPGj580dcGOq76Dl+4fXDKh/+BxM+Z+Oue9Ud2aNW478KNNlyjDDek1
VZF9dNZLS/8OYhGTrn7RK13x/Qjo1MKfnNtF2XGntZ5x0O/sBdr+V2wcU18x
UNR/fVXts0e+517RjYogW+9AzZ76pKNiwUh99gO/tOYBbQKVG0fmKgaKrH55
N7zVn/ZNuYN+nw5kKqnYNKK+O/CUM9zpoO0GMFVVbBr5VNB2dSgSUxU5p13d
2jn1H1yj51S7JEse15Wh8Q86DrLnzuWzR5YPy011Z/act+fU+XPnNM6dOXX0
922rP+rfyp3RJ++W78tsPy5lWnbKMj0t/Y7s7uXCo8uHNnG56r80d++pc9WH
drbw5JH92wrm9GuZlf7aqptBUluoUZOZ7T4Kbap6jByhAAAAQAxRiaRVMSVZ
kpyeEgAAZyirrKyO9ZOuFQxQAnPcXT8r9EXVVO3fJyz6vZypcWwrffgg3eV+
dvz2unnVdbrlSLfy+qSntZr+R7hfFK9umDFqyOAhAwfpZOigN8b970BpGMtF
xZllg7oP+epUWdDf4/7P3nv4R1F9b8C/P+B9338hCbsplAQQpIYSiiKKgKKE
3hEF6aAiihQBQeRLCxB6ExSlBEWKCor0Lk0gSBdIgJTdmZ3ZmVnee2eSzWZ3
ZvZO25ndnOfziJDszp25984t557znPML+/dbeCZ4Ie7+njHZ6SmNh225rdFm
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
U702fSYu/PHEfTU/odIzS3vlvDVt7x3yaYovXDewTdtWbXJaNn05K1iHWQ0y
6zdplt2udes2bSYUlEoPz55b0KN1k0YN60kfy2zUuHnrlm0++kmmbtjTMzu4
s0YXqAcgMgendGjbqnWbZo0bZWY2rGy+lxo3b9Oqddu243ZHaT0SiWw5W1nI
iBT6vE2bZee0atV+bJROwxz4tFN265yWzRW6XBQXOGrfhCYpKU0nHgxVv16x
sfKmj3wxNl9e/TpauUa7ullaVQc/7WigTQkK0F0P7MmZbaoLVb3gbu7cfLgi
aZ9QvGvCiJVyvm4xeS4j3VLU06smVIWebNemQxVOd0JRwfjh+UpPht6UqS0z
mkz+XXvTo4ne9ikPCAQCgUBgKHkCbRZAzICag2UZn2i3sr1vACNZ4SNEeX00
xYi2LM7vx4YsQfCzrIkNBx2g5hB1J9SXOM4Kn4ZqwCaX1JZT/7THUoUhlF3+
ce7ILk3riAYrV5KrQU7fjxfvPPckfOMplJ5aMuCtcVuvVnpPMGfWrzlul8gi
e+6rDmlNx+3TKJalqQg5iew+g9bfr5yg1YSk7QJ7eka79KS6w7+ruulbK/sO
WWf/TZsfAOgw8DeWdHcnZ7y14ra8KfDc1z1H7bQqpM9S8DcXd81ISn1nudKT
zes9aodijCR7+suctFZTdI5xkOwGGL/E52heOO8GAoGJRh+IVjkVgUAA7V4Z
BjVRgjtcYX8VS51VYsJqkW5iqKBBc9MLMcqM8/tZ1AnEy8VX6F/NIg4d9Xg1
fgsLuQsx204yRz9rVe/1hZctN4lFBff08i+rPhvSuWGqaLBKTm8y/PsQ7xuh
5MSi4UMX/Pmkys7BXVgwaNpf0ZLwWQb+9qrc+o0+/Mm4t4lSAQoS2Vfsbyxl
8IV53VJdKc2HfLUa3fPa/LwFH/fNqdfZET3s2sJu9UfuSVhTlVC0ZUC9ZNcr
s8/KuRyWnVnwdpfPj8Xl0wtFWwfUdtVqP1f2yUpPL3yr8/SjigHazF+ftc14
Y9El/T0QRKuAQCAQCHQUwbEqLoC1cfzY5QotpWhJscjunmMWOb8/+Iwcx7Es
67179Mivxx6UlMe7/Uo3Ka9HjD30i4riPKqZoIiTIPDoh6jSUHdgmVhno4sx
JQOgZP2jqbKHl44eP37q5qPKeEDRwolZXlr2vPj5s2fG8wBGsDyoKm96VZNI
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
ZckThwFqWtTRlGYpGecokJvISFFNCZELBrMEwZQIGQATCvpNVcyhKUOWXIvs
lqqmKubwtMELr5CIVdG/f9I0NfuTP5T26p4La97PTk/NfGfhiWdCSLnBCDLu
wb5PO2a4677y8Y5COXMU/29e99rNphzR2p09F9YNb1UnJavngsqCwwIAuQf7
P3mlbnK9TpN23LJGNEgo2jI4QxKqqm72Y84sm7vjSdBtgT339Wiy2tYKw6Yq
w82ns9iLa4a3TavVsMc3JyuKDQsA5B7+MqVTWkr9jpN33ZLrGfytFW+lq3TL
6BCKtg6oLQlVhTfekrk7Qxtv3uhFGnTdguAuze+UUW/YD89036LlpqrEi9an
vF5JmkCH8lINZGhGudjY96SVJGexx1GQoWn7rLj+6XM3TvoUww1iYP3Tl9f7
919/jU39A4FAIBAYRrRU07peJVnUKZlo1KFvGnUyVUx2gUAA1RLL+FiWlVbL
1rmW6bAcAhwN/aaqF96iJ2Uy9mlVU5Xw6PgPGzdvWLV84bzZ01ccLhZesA9P
bvvfzKlffLPp6MMQiVgc/eeuO+JHeb8T/s63w3EOtbp91tyuvAUZsSPmzJzX
3Mkud5tP9hdF+JgIRRv61G335Vm15FQyBW8d8nJqUnJW7tqqgiO1qnxn53ZM
dSWltpu8/ylp+LIGVApVdV5Y3ZTBHJ3WZ9rRWJiSjZmqdDSfGbWIih3aFNVb
nV7rqoqN1Kpizs7umI7upPVHB4sjihWKNvWp3XGWgkMDCSqFqrosqN54vqPT
c784ZkbjMQcmNnG9NOEX3XpaJpqq6Iend69bOOeLqV/MX7z51+tlUoXqEwJy
OHGqO1H42keb9nTogjzHJaT5K+iKH7OcOBTljaVGhJj6EL/iViXEUUg7iMMW
ErHDAIFAIBBokCpJXpSg7gGlnsBFHYm3GJbNL6P4+OatloNESy9BiGV2LoD1
MGCqUoCqqYov3DVr7Pu92jfElpa3Vly/vGHM+3N2nNj7eYc6SWmvzTtXaTcS
7q96t7ar04KLsn3++Z6RjVKTkl11hm6vch2R0+XmbyztkupKSk5rO/1kxFhC
7Rze4M2lN7X06Oe7RzVBd55Ud/h3IQXLyKrzNxa/mYHusFbOzJOmm47YU9Nz
sFBV8ylHQmuYvrL83ZYf7i5T/qJ5MGSq0tN8p4x7Vj0vGP1SLXS1rCHfhxQr
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
8SKL3fVBBg4A7L9Rg+4+X5jXw52c3j3vllyv+WFYk5G7I3sNf7NCqOqDAmVj
U/mltcOa1nl3hVxmTGJTFX99UTe3+53l/+ptZjVTlZ9lrZjRyCc+hvExqhOZ
uSdE13/bM/tkcBRiDk1umpqUPujbSq+54s1LFh8uN8mSoyO03zi4p3+c2rtT
6Zbu3bn98rvLrvhjmpsGmHikKbBWAYFAINAEotGe4zi0ZPLRFOPDuY8rlmga
z1Il+098wfSZzuej/X6rFvb6XJvM0vpAC1fT6x9gA8w2VbFFx2e/lupKSnbV
7ZV/pVR++8/+s+RN9Jk6fVffVtqb4URi7rQ+68IFe5TAl5ye+zouN63dZ4eL
SJ0ThOJtQzI06HLLFnxm9usZOACw3bRDZAWLgWDVhKr4wrwBY38qr/gnX3zv
voylXyg7M/fNVOwC1CtfxtWLK7134cD6LwfmZCanvDT8B7mUec41VeloPjEW
sppQFX9z2eAxe4K1+FS2FsOLnfOmGwcAdpx6qJi41zzdNjgz2dXxS/lec3x6
n5nHwnuNUHrmq9fTsNvYu6vvyzbe+QMbZg5qXzvFnTX8hydyvZ7YVFW+e2RD
d85sWcV+IqiZql7ENqOuLCmvB81jKh/A0+4Tc/ydNv587XnIq+T57aPslJSX
RxaIccHCw29HDMu/zaFWN+MYyC535dIT30zp985vJ2+UV7+f038d7tyihbvh
8O0PsOmU6BmjLaIoymtp3hmgY3nhoKJFFAgEAoFAcioFl2laoMaj+LYg8CaG
QEoU7X6m+TKFURD06LBSJh0BB82YgDiGKaYqvnDdoLZtW7XJadn05azMBplZ
DUU2yKzfpFl2u9at27SZUOFJwp5b+HZ2i5ey6tfDH2uQ2aBps5atW0/6ObJ8
9vSXOakNRxaUq94Zc+DTTtmtc1o2b1o/WG5mg6zG2S1b52TnTNgZxShD7Rv/
cnJK0+rq5uq63BXwHfisQ6ucVtnZjRuEPm/TZtk5rVq1H6tWsBQIFipU9YK7
uWvToQpRLKGoYPzw/BAvL+5a/uBWTZrUr5OenIxtgEnJaRkNmr3cpHkVX345
q+q3LnfOjKOylmTHmaoMNB97anrb6kJVL7gbO7f8XlxZi7snDl8p5/WEiz34
ace2rVq3ada4UWZmw8pyX2rcvE2r1m3bjtsdrvEVBmr/+MapyY0nh6i5F+/L
21zZa/6aNnp1sNdw11YNaN28UYNMV0pF69Sq3ahxaNs1afZS/arfJqW2/+Ko
fPA8qamK+Wtqy4wmk3/X/05HMVXFMkeJCr1lihpKklO35+6xyyf/MFhKEVd9
khWeHvvfgLb1Gr8z6ZulX43uO3jJ2crW4nneYLXYGFnvvV4wZ+CrHbqO2rDj
lz8O7NiwbOHYmd+f/2tOJ5fYLV11Xmr2IXodeY5TXz+wLKtyHPa03CP5Y6PF
A/jA1DReungxf8Vy228DCAQCgfFOJXlPtEAldK3XF57mBHAcZ25lSppdOiIo
SajPdU0wKSzRyTGeAFKYHwBoFtjzczrWbjx+n7qtylgRp2fkpCXVHf79c426
3EbA31zcNSMp9Z3lt2XtKMy5eX1G7dAQw6gBjjNV6Qd/c+mbqS732/kKtXh+
Xu7oHRpi+jSAPTUrx+2qM3R7iCZ+fp9B6y3tNS+ITVXYxpvWasqfBl7pKKYq
Cab4EVlHxldx4ib4nhU9vF1aUmLkImHgn984fmDvgaPXn0b0PtaARqXfb3fe
ZOZp4ZlDvx46df0JPmoUSv459tuRk2ev3Lj76KmXDfZqVC2y90/TFRZytI7y
0VToMqO8vKyU8oUuC3mej7FCftzRrFNF51AMNAArJRAIBAKNklVwrOJ5IkuO
/SsuA2BZk1fgUmVadAytz7HKLIl1W7Q1AGaCu7bojQYfFjjQVPWCv726d93G
Y/YYN6woFVCY19VtTJdbO4SirQNqu2q1n3tW7t0pPb3w7c7T5X2ijMNEU5XU
bWwzVQlPtgzOSE5rP+ecXC2Wnf7m3c7TjlnTqfmby952J6c2GzR/1RrUbVYv
+/rTPq3rd/7mitVOpmSmKuavz9pmvLHokpG74f5Z2KXRB9EHBTT70CZFlMdg
ckTLEk1366P1v4Y6DFaOzUQjC47zhy1pZL3xUROgRSPPKWYscHL/cQITr378
LAtWSiAQCAQapEreZC7amYgv/tPD+czW4kALNnKfNE3UXdumnInHr/scoBLs
/VN/Xi2xxA3EMLwnZ3Rs2HP1v2QZ4bRCKPp2UIZhXW6tKC0Y00AUqqLDSuHL
bvzydW7jet2WXbfmeVF97hmZ5Xb33kCcV1EZNnebsoJRjUWhqvC2QrW4d16f
xrXfXmpRLQrF3w7MTHa1HZm/ezfqNrt3bls1tXvDNlOjauIbhrdgdFZKRq/1
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
8bEzhOvkcK8QDAwMzIoJuDUDc9PvN8onJN7YCNthAwAAtCn41yOh8iE7H0Ft
dZdA+3jHCLEi+iJECgCHgFfnhygGb39EtUE90Llp/iwCi4+d4ZM2AAYGBtZZ
TaVs3piPc320sqHBscs7AABAlwO9uSEw4kyto08DaBPwr0fCXIfsfAiRAsAx
oDfXD484VQvRiq5H82cRWHzsDIpCGR0YGFh7N4ckVmEY9kuXesq5dW0jPMIA
AADsD/7tWfHZC6VPPtW9z4nbdqe+5vWtK4VFd6ogubVzg97cMDjizA+IFABt
Cv7tacnZoutPqn6+z16x9fbPmte3L5+9cKcS1psuhP6zCCw+dgYUn8DAwDqE
tf3uD+oW5fNGjYbzOTt2hQcAACDBf7x99PZH+9PJw74+fvBWAF0pvCp3pkyE
OLv2Gzlj8shRwRMGeCEixCVgWxn4jp0Rs8jkT4hMAm0J/il3RjeRSCL3GTN9
wtiRQZN9FTInkdR/y33Yz6HTA4uPAe2Hhw/sft2cXTAwMDCwNrY2zq0imvvV
1Py5RK1ScTsIpgXJFAAAHAz2Pm2q67ScSszRJ9IK1cuCqCnRZ/4VJPsUq6us
+Pgd/aUtTw5Z8Yf6l7bu07v31Z3LcVQ9zlg0e1NJjTHkiNfczN6VdbOm/QUh
7QptZLJjRgpUjzKjwjaVfDXp1+pbOTuyb1V3sX7tQGB1Vc3rTdLs5b+rm7Q/
P1V0pPVG9ShrUdiW4tZjLmtHzk0YczYgFp9gaedZfGggnjWLiWdNtfVnDf7l
j3UzI9Me1tnzVDAMc7j7CQYG1ulNkChT2ydWaVDjo4donMMR1CqlPZdwAAC6
GPj3sqO7ElYvi4qYNXPylOUn3luJhv8sv3Km9F8yaan+9ILuEWd/Nv36hb6/
durKC4otSluor7h55fKlS6yspIx1FAz/dGHZiKnJZVRnon1TkpmenZ17+HB+
wZGCo3rLP3LkcG5uZkZGUbk1l6D21HzF6H0vOX4jwKvvnjiQnJJyKDMzh2j8
6JEj+TlZmWmpB/cnp559bOWusW2n5u7xg8kHUg9lZOfkkdeYfziPuLSDKSnJ
Bwvp2kFvrO2DeIafNgpxYe/SJkplo/a9oon2ad8UZ6dn5ebm5R8+crTlThbk
5+fnZmenp1943j58Ky7dbRKZDF3xh6rJRmQSr753POXA/oPp6Vl5eeStKDic
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
vT8+t5fESeQRlGMQGafQD1E/2D5EQrzwB6wosfyCi3/ND5EFJJZRFgwxo+Fy
rFez0JB9haouR3vrhapsC2LVFs73kLj7DvUfs2RXdt6h7Wti1+XeeX42yn/Q
zM1JK6J2XmvlzGPvj0V4E5fQLTjbeCMttarQssQRYuLeDlpdQunm2oZXqMqk
uw3a4xRaVVa7mxRtkzKs02y4Et1dL1RVbl+hKuP4sdlO7dn5Xs6KQYEB4xbu
zsk9tHP10g3Zd56fiQ7sH7J1z8qY7aXfWverlQli1Koi7hi5iSf1HbMvQoaq
WjR2xh54SyVU9f3qqkCEuPABy85zjChTTxMLrSqr0wSvPjzTPWBrGZvQuLFd
k4FvqVXFaHq2CFVNSH5DJUT0vXSln4w4rG/sBUPYtPZspLuLZ//AwaMX7cnK
Td8eH7c2++6zM7F+vmGb966O2n6dMjBoGyFDVS1CVeNSqNQY8e/X4geRI9wv
hnvf83/WNH8WoV58iE6e50Ms727Tc40NWGpVoQ+2DZUTHTRw5e8c12DrGCcR
9fgwTKIi4/gojFAwf9aYtvXHMm8ZXXYfExisHm0p/wIGBtbJDFWrW8V/6n+q
lA04TZznF+/YuD6xivOqxfAPrctMMQm4NWp4eEwAAHQyBHDl8JrjsxUilwEr
T5zbsmDxxrxrTytrvr4pXjfS3X1c0n1+O9/RYz1UhVUUbouePzPQg9RAnpD6
+lne0shthXcuJQTKEcmw3YaqNbwye4pENmw3pYj49/OLe5OiGd0ifjN+mKWS
usXe7B9L1iy4+G++Y3EySuIPxh18w/21X6fUTQoNrWWbKsGyHXLvMJ1QlW1F
evX1NT6IR/jpH9q6z2/KX3740XJD0Zq3L/41Vzz5fmFRT1Kdxm2eyRduKll1
7E3KGLI4SOqXcJdTEQqfUJWxu08axWaoZNWtdTf+NT9UHpBILWfTGs3thIFi
Uqgq/oZdhapMx4+t30Wvr+ojdQs//b3x5+e35S9M+rW64qVlv1qdICay6sQd
GyOjmyB2RcBQVYvGTkDCXYu3KPzbvdRZvRGZ9+Rtlz9wjTvSTBNLWXWr00RZ
OL/72BSqOIDtdk+bDHwKWXUG07NFqGrQ5jsWgxr/dv9gaD8Xsc+kLcUmNwkt
XdXPuVvk6R+NdZ/fPm895izXEhYIGKpqEaoamHCX4rLuHQrxkSLeU7dc4d73
Qjxrmj+LUC4+34uiepBSWh5zT5o0QCGrTjQwnqxkRAIT7DBXjZOIanxQTiL1
9fjeLh7kmsTkWdPqgFWZ01yRobsecf3Cw2z1EGR/LjAwsK5pmFbb1IRrGxsx
zLabgPHee1Sfr8VNtEqr1TZqNNZ/h0lClPUNAVUgqA4AgCkCuHLKkljC00F8
/EI3/W6sAMQ+ZgSJnb0iz9lUPeKG9VCVHrwqO1giko1dmRC79a8fv37VFUV5
uCCinnHFLY4Wen11bxe3OaeoTlJ5aTFZyYK0ftel3JUJLV7ay1mkl4o1PxJa
urp/6DFm23dR0eKb2FuoqsUPZSRU9WTnCLFkSjqDAk4C5cVosnZGJBuy47HJ
jaTaARAtie0hcbKiyWzrxLiHqky6+7HR/aHcAdBadysLF3iMO2hzI0yjS2hv
oSo240f7ZPdQiXxi+ntGHreNCWK6AyBaHOstorljdkW4UFWLxo7HwlNV3/XU
fK168/if89mJ80cPGjRxyY5TT77xSEShmyYUOwBamybotVV+oQUstu0zafeJ
ycCn2gHQ5vRsEapSRJ6u/E9/k759rXz7+MaFrK0LR/kGTFi069Tj1jdJ+3Tn
UJl4UgaztYQNwoWqWoSqus8/WfVfS99Xvn1yoyhnS+S4/n5TFu4485hX3wvz
rNF/FqFafJQXl5Bld07i4TtMG6DaAVBdEtfdBbEiIM8D4yQ6Wfkfs0lEPGuG
I+SzhkMUEL0S09O528JCxlsimsF49XC4twsGBtZBTdnA7oM+T4l1fWLVL8a1
eKam0UmdN2o0dJWADQ31DDWm6HSriH9ndTcAAOj88HflNHc3+4kRkXvQoRem
MSPCaZkpITOa/mef4iYmoSryVVzuLHbzDs/Rv+hiP16VXil9U2vIrq0pmCVx
6bP8GlUa0ffjYeSm6ggyOvmFLffheryvCynA0jvud/PvCdoneybHXuH8fRqv
Phbq2jZCVbPlTIWqKjOnuboEbn/ILEf3+9E5UlJwWDYq6aWtUBW5/ZxO8mXF
71xSyHiEqky6+6WtUJWV7kZL431Dj9mOFODVBWGkZrL9haqYjx/8Y9Z0CWJt
i4FW2JggrUJV5BZvNHdM9fjEto0J69ZvpLeETdm3GFULWyBcqKpZY0caMGdl
/Np40tasWLZoxrBeYnG/mSn3vvPuRLppQhWqsjJNtE92BcUw0kqzbPeVrVCV
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
6P47/zm4JBr7N3OaZ88lFwVJL6E6fkXKeJmdVKMt0T7dM1QsDUx8ZHgK4VX5
M1wlfeNvqJs097fH7H/ZCeM4LWhfJo33XHShE4aqtM92DZe7BG5/YHDh8E+H
g92d+639m+zXHVH7bQs1t0Pw6uNhrkir6zKh9n7SpJEJN1nviWPEceubvnkH
9JouHoI49527IyuHWHAyUvesmunvPjLJPutNO4bciLbnQsf1/dNdIxBk6LaH
Jivx4RC5i2882fdliVEptmX12xV49dHQbk6trsiEurI9k8esv9Vull705roB
7qP4jXohVg9WeQ5gYJ3PTl687/Bz6Iim0XCM1zOJVqlVkFIFAEBHQVN57+8X
P9o6WlRXdmCm3/iEy+/bRVi/4c6WwR4zMjmrr1ql2RkfEJV+7oLgqtGWrVVm
T5eIJD6rrjdXT6he5y8KkIvkQbmfMbRsR0xH849Yoqm8/3d5mw9n+4NX5kyT
Ic594q81DxvVqyNLBroi4ul5RL/e3xFLs7lje6e2KNpLJ1SlMpsNWN2bK7uD
vN0t64vZ4Zj1rRlH9BpefWyOq0jquzizsIhYcIrOnsiKn+Ddn2ZLhU6N5uO9
Gw5bDPCqrGmuTi79V15v9jdUrwoWDnJ3kgSTK/H9XdEHOlpsue7CIi+dUJW5
A4XVvineGeQjH89XXEo48C+nInsMWP0nz+9PwqweStgQEKwL2/SdtxpQSC9k
bcSq0dTEcQFTKa1FyLkptwMAAHQZ8Np7yXMmRJ940bJaovcPZ9927Cl9L1nm
57vij//sUJKhLF7WvbVQlYCq0RbUno3wdFYMCgwYt3B3Tu6hnauXbsi+8/xM
dGD/kK17VsZsL2WxjxjQfqg9u0Dh4tk/cPDoRXuyctO3x8etzb777Eysn2/Y
5r2ro7Zfr+5g/aotz4+bOW3iIA+pkwiR9x8fND242YJmTBo/0re7K7m/Z89F
ZwVVfW9jHNFryitLzYSqsLcH50Qbla+/CbneAHTUFkYoJO6+Q/3HLNmVnXdo
+5rYdbl3np+N8h80c3PSiqid1zrOjNWWH4kNmTHOr7uLCHFyHTgmKNgwW6dN
njhsgLfUGXFy6RV51k4bFbKn4d6WYf0iTjHcLMXe4Dje0FDvcM8XDMwhtnLD
LmKtOHn8hMPPpMMZn9wnjQZtqP9peUwUJKoAAACsgf+4k7Rg7q4bX4zv6drH
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
NZYum7uvrrOQ58nRBXERUeFDQgYE8lcpJHBgUEBQeFhEzMgt18xuGPusbNkw
P29lyMziR28aH5zKmTan8IGbCy4cnabVtZSf68+IkwPjrOU9ay6ZN9g3bKXZ
uNg0TGGV8jXj9MCwc3/Nl8x2wf0lL6wfFpsQGxMTFtLxnIYEDYqIjEmIjU1a
XGL/9hquhnfwzBOv2z/C1O2bmnGovTLTVsc1AXV1XawyYvUllzOQklJVPJLQ
eXyGjkAgjNGC/bMBAKCvYh/lj1YFZ554Jfq7ZEXO8Og4fto70C9ApW4LdVD4
O9Fx0ckbLlou2KD/Klk1PHjIyGV7SyqqKr8vzs1MDI7J3FVls10ucWFlmCp5
s+jm8gAukWkHQIe0f9+6/lujaKKJeH6/quLK/aei9VS6x5dPffdN8YHty9KS
35+9pfR3kWKfbkPfy00OCFt6TkJFi1Ooy2tjfANmHmvsTFsLvaSUo/OE3lGU
jpC3jJJ99OU4pbf/+K/+Er0f1N3PUxeWSF+EZU7z+MfiHR+vXrIse9vhqvo+
8WdVdz0jVqj/XfOu2n/GcZNxUZc/zl8xcmeXjAtJetL9NVwNL9+YjG2FBYUH
Cw7s3b5mWmwQ/9RISGjTtz9JDIhae9X1uyo1VcVxnMen5wgEwhj88+jqIw8A
ANDD8ZO8sQFBc0rfyPR+1Mt75YU7N67Nzt6Ut+/UzXp7HdupK9lx6hF5v6Km
CuTD1HwxKuQj+TZs6zpUze7JAb6DJ+b/4nhfg67C/lWQNjBsUbm8pTzMg+3/
8vdN2tq5zIt7djg90Cdq3RWyhb61LWtXrZwPPdfw9fRAb8XwT++IJRqab+dN
HL3hWi8YEN3GU88Icz/vPZXZRrHc0yNpAap3114VxsXWxbtq+vVd4hqOZQxQ
+MZm7SspP11WXnrqm/1rJ4bEbKiSkEAjq3JiAsbstLUZoxRM7c5RQ+aXOUxV
taK5OgLRY8L1Jx4AAKDH416emB0cPOv4i27/wYy2clVUyJRDf2OvXZAT/eTm
ld/e9IqfMzadnB2o8Bo4/fATz83QtTc2JQ9OKXC1FbMY7snBFD+FT+TaH9sK
L4naoo/iAhTKKf95zlK3ti2RsNmbM5rLFw42NKqyrPNkmx6d+yw1wt96nWY/
55lnhHtSmKb2VkWsrmzb8pL4/ciCRH9v/9RD/Li4vW1xvrzjotfRnVs+RGhU
dcmk49qeaYvPtBdeso31T8SLMLkXJ2a/E7Oqwr2UM11/82q1pGFB05THZ+gI
RG8PQqd1M+uLXlUAANDX6W58khTUuQVSN+GeHZ05OHHjT9i+BPoD7lXFZxmj
JuecNd0qj6rKjlZ7+UatrvRgtwnu9fkVMbGrL/xXtsVXTafmBfkOik4aNmpB
XsGhfVvXLl9XeOPBySXxMdM/2bEma+tlm0uCncRUFy2ZmjYmfrCvt8IrIG50
anrqlLZImTj+vdgwtY/Cyzd87ilXF/+BnJpOzQnxCRqalDhm/ucHD+39bM3S
nMKfH55clBQ9dUveqsVbK1/1igRzl6FvbEwyNKoy7bhWWtR+WbiGsqWz99eJ
/T2tvfHp8Ii5J2zvj9AF+Dmyx2f6CESvDooUahgpyvVdNbEDIAAA9Hnc64ur
osPnnXzRjd/oaq7lJCcsOfsSU0joF6hr62PUXr6x66pMSn+ay+YFK73Uk/b+
6dF1T1zDhdUjhm+4ItMqQKpyTbTvwLnfvtY3P3/88Ld/3rTv/kk11P321xvU
N/VT1OXVkeoBs757rX/7/HG1+biowbhoZR/vGuPvpZq011bHtc/SF54S2y5U
d2fb6GFZp5927xWkadqpObXW02kBBKKnBUm0Lf5nGEbrUnkVRbm5zQcAAEDP
x72u3DAiftEZO7swyUp7M3fssNWXxL7tBuiT3v64Znjy2gqT+h7276IZwT5+
sSsveP5BoKr3TRs158SfMizAYu5/9p6/csJ+rOwFU8yvnw9X+Y/fh3Ehjms4
Nj1AYdbhzUTTrZ0TRm78ybqrHffi7Mqxk3bc8sQyIJ1O63AqTei0JEHo9XqW
ZbVvUYiFQHSGsHyvvaK6pYUjJDxQFp+O7f8AAKB/oGoOZbyfcahWSk9V97D1
JYtHTSt44Lle0gAeoK05vjbzg4VbvvrmbEXFD8fy5ieGRE3MKXvcM34qyjXd
+WrezO3X3Z3yck8KJ6vNWmcD8OOivmCKylbre2htbSpbFGJoVEVYdlxrfvTD
56lhgWN3W3dco+/vnTdr5zW5VtQ6iWUZh8sAWcbsoJ2djCMQfTv0lNmfiCRB
OPG5eroVAACgvyBqi7M+WH/xdZf+lIa4sXP6rPwbvaPtNYDMyJc11y6WHy8q
PlZ2+eHLHjZt5wgd4e6DSZ5bOkg1dN1Pli3OoX+jflgcqozJqcK4sMRUH1n+
Qcr4ocFqL2+Ff/TYjn5rqalpE8aOjBkc4O2t8AldcEpsuTypIzxaksno9Xam
0jqtSCMdjuNIQufxFAEC0RNCq3mrp2mLZ4oghIpFrUbD/1uvp0mS0JjnhPnf
5jiPF2MDAAB0N4bu6uUZNEUjTQXQV1HPqu/Xo9UrWCCf/YZx0RcxjF50FzN+
Ds6yNr+d4CfgHs8SIDwYTpUP9fngr0ZLi71vjFtaWvR6PUWSNEUxDBZRAwAA
AAAAADhAU6ShDkSo/eB/JQhdC+fgZ1J6uxVZiD4cWo1G3gEg1B15+qTcvybI
QQEAAAAAAADIzqk+zwyjd9jtCtGrQ6/XWzQoI4nOjqhyZauM5UYeP1kZLheN
9lMAAAAAAAAAnsQwjnuzt4VG5IPWaw97Xe6LIgnS0JtIp9Xy/xZdTdl7z46m
hH1DWlo4Rq8XrRqSJVvFv0mroQ2a4UJqDBdKaPTEf4T/ur3rolFUz9hpBQAA
AAAAAKC/krKToE6rMfRjJ9peqXmr02mNvbBYhuFn9yRJ0DTFGXhwn0H+MOzn
mqyDP2zTq2H/xYRw1mw3nKB1NZSL7yOhTMhhtsp+H37+MC3e0KK0j/9f4bY4
eV88GPzRuv1UAQAAAAAAAIDrOJYVUgkms/WO5BX/H7R5nYmUNYaUHM2LnKrG
6VjXxnGcU9kqlu3cyo1hGIlfhaapLi0WYg0VUBRJuvk+Fok4W+xkq/jTFJqK
0zb78DOMXuIw49+HP56uu2gyBn/lJZ4UAAAAAAAAAHQRmqZIguD/0evbSnHs
b4tmH/8m7idzCMLBirzOV+o6K2E4ljUuQ3MYpo2bePbLhwyZn84ipRahzMzB
610Ok8vo1gI6Qid120/RrST5j3RkooR6OfPzNVTWsfbfVuwLMdZfSKjK62Hd
riRm+QAAAAAAAACgt5BlMaBeT0vJCFGkWdKJYaS2YOKPj6JIoXBIb7NwqCM4
q8yMkJGzm0wjCaevgEVJjzuXkf80p24ZfymM2UH+V9GuTfyF4q8tf9ZONfC3
xjAMTQnrNWmKYtubaLmZl9MYcmv8u8pV8OZCIg4AAAAAAAAAejg3V7EZ64Ic
ltxY9wyXveTJTtqHpkTSI1qNxpiEcepITMvDzC4j5eJl5DjXS+O6n6EVmOXl
0knO1BnL5FpaWiiScD9hpdNKrUkDAAAAAAAAgF5EdM2Xswkiwwo18ZSFRUmV
Ecex8qaqLFYLip4mzaMoPixSZ9bpF9Gwv+jMhd30nK2q6iEMNVdC0RX/C3/f
W1papJy4sa2W6ftw/CBgGdKNzmn8YXjqIgAAAAAAAABAl9LTdEeuSfpCLZ15
tyXa5E0M2QkNbXuTO1m6u3eEccdDl0kpDRJdc2fKuJue9GOW3quqhzOsgnRw
4na2O2RZVti/8q3TdVYorAIAAAAAAADo8zpKX4TEi6Nskq3sDcsyDpe2SazG
kRKkWOGWs2dtqyqsIxi9pN309LTUlvV9rNuSofO/SMLKtP27ffywMW4fIL39
V1efFAAAAAAAAAD0KBwnVLx0UVGQLPvK6bQaWc60paXFToZEWKwnuVe5sR2T
a1m+3o41Lg80tGSn6c6u7M5iGEbKTpFuNpAHAAAAAAAAgN5IWKIltMLWdORt
3C9kMnK5TVZnsZO0ih2JbOXl9Hqb69dsEbJ8Yv3D+Y+48G79EMdx9odHL232
BQAAAAAAAAAyknfTOj1Nu5Onokj5a5MMLeI7MyTS16/ZwrKMXk/rDU3drTdD
BDvsZ6sIQnxDRgAAAAAAAAAAl0lpad79mQqO4/R6Wt68HLjA1sJM6y0FAQAA
AAAAAADcx+j1ziapdFqNnR3loO+x6P2l02n7WFN6AAAAAAAAAOg5CJ3IznGi
QRIE1tD1T8Y6N6FVO4sBAAAAAAAAAABdiGUY6fVUnj5YAAAAAAAAAADo40hC
amEVJdPmgwAAAAAAAAAAAKI4jtVq3krMVvEv9vTxAgAAAAAAAABAX0ZRpNTC
Kor09MECAAAAAAAAAEAfR0hbBqjTaj19pAAAAAAAAAAA0PfptBop2SpPHyYA
AAAAAAAAAPR9EncDZFm0qwIAAAAAAAAAgC5H0xSqqgAAAAAAAAAAoIcgCcJO
norQ6Tx9gAAAAAAAAAAA0I8QOi1W/wEAAAAAAAAAQA9Bim0ISFOUp48LAAAA
AAAAAAD6I5ZlSEIosOKD/w+OQz0VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBv
8v8lNo5J
    "], {{0, 422.25}, {1194.75, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1194.75, 422.25},
  PlotRange->{{0, 1194.75}, {0, 422.25}}]], "Input",ExpressionUUID->"425db23c-\
8100-d449-b9db-1dd19b7cae25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Defining", " ", "the", " ", "interactions", " ", "between", " ", 
       "excitations", " ", "and", " ", "other", " ", "particles", " ", 
       "BEFORE", " ", "shifting", " ", "axial"}], "-", 
      RowBox[{
      "vector", " ", "fields", " ", "and", " ", "light", " ", "pseudoscalar", 
       " ", "fields"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LPheavyALPinteraction1", "=", 
      RowBox[{"2", "*", "h3star", "*", 
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"PheavyMatrixALP", "[", "x", "]"}], ".", 
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"\[CapitalPhi]matrix", "[", "x", "]"}], ".", 
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"PheavyMatrixALPHC", "[", "x", "]"}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction2", "=", 
      RowBox[{"h2star", "*", 
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"PheavyMatrixALPHC", "[", "x", "]"}], ".", 
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}], ".", 
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"Lmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"PheavyMatrixALP", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"PheavyMatrixALPHC", "[", "x", "]"}], ".", 
          RowBox[{"\[CapitalPhi]matrixRenormalized", "[", "x", "]"}], ".", 
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}], ".", 
          RowBox[{"\[CapitalPhi]matrixRenormalizedHC", "[", "x", "]"}], ".", 
          RowBox[{"PheavyMatrixALP", "[", "x", "]"}], ".", 
          RowBox[{"Rmatrix", "[", 
           RowBox[{"x", ",", "\[Mu]"}], "]"}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{"LPheavyALPinteraction1", "+", "LPheavyALPinteraction2"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Performing", " ", "diagonalization", " ", "in", " ", "the", " ", 
       "light", " ", "pseudoscalar", " ", "sector"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{
      "LPheavyALPinteraction", "/.", "rulem0HeavyaTransformationSymbolic"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{"rule\[Epsilon]\[Delta]", "[", "LPheavyALPinteraction", "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Performing", " ", "diagonalization", " ", "in", " ", "the", " ", 
        "axial"}], "-", 
       RowBox[{"vector", " ", "sector", " ", "due", " ", "to", " ", "VA"}], 
       "-", 
       RowBox[{"dP", " ", "mixing"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{
       RowBox[{"LPheavyALPinteraction", "/.", "ruleVAmixingRepl"}], "//", 
       "Expand"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Leaving", " ", "only", " ", "O", 
        RowBox[{"(", 
         RowBox[{"VA", "-", 
          RowBox[{"dP", " ", 
           SuperscriptBox["mixing", "2"]}]}], ")"}], " ", "terms"}], ",", " ", 
       RowBox[{
        RowBox[{
        "to", " ", "get", " ", "the", " ", "decays", " ", "of", " ", "the", 
         " ", "type", " ", 
         SubscriptBox["P", "excitation"]}], "->", 
        RowBox[{
         RowBox[{"PPP", " ", "and", " ", 
          SubscriptBox["P", "excitation"]}], "->", "PV"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"LPheavyALPinteraction", "/.", 
         RowBox[{"VAmix", "->", "0"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"LPheavyALPinteraction", ",", "VAmix"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"VAmix", "->", "0"}], "}"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"D", "[", 
           RowBox[{"LPheavyALPinteraction", ",", "VAmix", ",", "VAmix"}], 
           "]"}], "2"], "/.", 
         RowBox[{"{", 
          RowBox[{"VAmix", "->", "0"}], "}"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "=", 
      RowBox[{"rule\[Epsilon]\[Delta]", "[", "LPheavyALPinteraction", "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Adding", " ", "the", " ", "quadratic", " ", "terms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"LPheavyALPinteraction", "+=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"dPheavyFieldSymbol", "[", 
            RowBox[{"mes", ",", "x", ",", "\[Mu]"}], "]"}], "*", 
           RowBox[{"dPheavyFieldSymbol", "[", 
            RowBox[{"mes", ",", "x", ",", "\[Mu]"}], "]"}]}], "2"], "-", 
         RowBox[{
          FractionBox[
           RowBox[{"msymbolic", "[", "mes", "]"}], "2"], 
          RowBox[{"PheavyFieldSymbol", "[", 
           RowBox[{"mes", ",", "x"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mes", ",", "listMesonPheavy"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LagrangianWithALP", "[", "\"\<Pheavy\>\"", "]"}], "=", 
      RowBox[{"coefPheavy", "*", "LPheavyALPinteraction"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.948646956251295*^9, 3.948647124105074*^9}, {
  3.9486473362382507`*^9, 3.9486473719112263`*^9}, {3.948647416757578*^9, 
  3.948647417741234*^9}, {3.94864775362191*^9, 3.948647759263239*^9}, {
  3.948649248628147*^9, 3.948649252876816*^9}, {3.9486494672832966`*^9, 
  3.948649501285124*^9}, {3.9486502948466187`*^9, 3.948650349936884*^9}, {
  3.9486507354139385`*^9, 3.9486507600684605`*^9}, {3.9486524354060726`*^9, 
  3.9486524489345512`*^9}, {3.9486534395455074`*^9, 3.94865345316127*^9}, {
  3.948700066727436*^9, 3.948700070242035*^9}, {3.9487012693545074`*^9, 
  3.9487013154823666`*^9}, {3.9489661649833736`*^9, 3.9489661776825485`*^9}, {
  3.9489678805509605`*^9, 3.9489678852880344`*^9}, {3.948969118196062*^9, 
  3.948969131440529*^9}, {3.9489693310329113`*^9, 3.9489693466467876`*^9}, {
  3.9489695035182114`*^9, 3.948969518821352*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"46a9b6a2-6b10-424c-894a-149d4d68379c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"8.`*^-7", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.9486471260518284`*^9, 3.9486474260037384`*^9, 3.948647767226742*^9, 
   3.948649253799406*^9, 3.9486494712949276`*^9, 3.9486495017294617`*^9, 
   3.948650292538618*^9, {3.9486503314144936`*^9, 3.9486503512848473`*^9}, 
   3.9486535068573895`*^9, 3.9486975528019695`*^9, 3.948700071140253*^9, 
   3.948701324010298*^9, 3.948701807527479*^9, 3.9487311389485054`*^9, 
   3.9487355290521374`*^9, 3.948966039141802*^9, {3.948966156141178*^9, 
   3.9489661820510807`*^9}, {3.9489666122543716`*^9, 3.94896662824806*^9}, 
   3.948967888845022*^9, 3.9489693665525475`*^9, 3.948969533925974*^9, 
   3.9489780617343235`*^9, 3.961473119612276*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"40a4d628-6735-764d-9765-56852b2d198d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"expr11", "=", 
    RowBox[{"LagrangianGivenFields1", "[", 
     RowBox[{"LPheavyALPinteraction", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<a\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(K\), \(*\(+\)\)]\)\>\"", 
        ",", "\"\<\!\(\*SuperscriptBox[\(K\), \(-\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"expr11", "=", 
    RowBox[{"expr11", "//", 
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"expr11", "=", 
       RowBox[{
        RowBox[{
        "expr11", "/.", "rulem0HeavyaTransformationSymbolicToExplicit"}], "/.", 
        RowBox[{
        "rulem0aTransformationSymbolicToExplicit", "[", 
         "choiceMixingDescription", "]"}]}]}]}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"expr11", ",", "cG"}], "]"}], "//", "Simplify"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.948647142845991*^9, 3.9486471479807396`*^9}, {
  3.948647430970955*^9, 3.94864750882959*^9}, {3.948647786077318*^9, 
  3.9486478402371273`*^9}, {3.94870181477816*^9, 3.9487018172714863`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"9368708e-2321-d647-b335-93b4100f06d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"expr11", "=", 
    RowBox[{
     RowBox[{"LagrangianGivenFields1", "[", 
      RowBox[{"LPheavyALPinteraction", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<a\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(K\), \(+\)]\)\>\"", 
         ",", "\"\<\!\(\*SubscriptBox[\(K\), \(S\)]\)\>\"", ",", 
         "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(-\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}], "//", 
     "Simplify"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"expr11", "=", 
    RowBox[{
    "expr11", "/.", "rulem0HeavyaTransformationSymbolicToExplicit"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"expr11", ",", "cu"}], "]"}], "*", "cu"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"expr11", ",", "cd"}], "]"}], "*", "cd"}], "+", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"expr11", ",", "cs"}], "]"}], "*", "cs"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"m\[Eta]1295", "->", "m\[Pi]01300"}], "}"}]}], "//", 
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{"expr11", ",", "cG"}], "]"}], "*", "cG"}]}], "//", 
    "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9486485358072987`*^9, 3.948648542868078*^9}, {
   3.9486490536656876`*^9, 3.9486490638862743`*^9}, 3.948649104530657*^9, {
   3.9486491793299847`*^9, 3.948649190823839*^9}, {3.948650368523628*^9, 
   3.9486503975234375`*^9}, {3.9486507730960255`*^9, 3.948650863441332*^9}, {
   3.9487018195348988`*^9, 3.94870182162179*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7f4ecfd7-0134-594c-947d-0a791c8ac6b9"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["ma", "2"], "-", 
       SuperscriptBox["m\[Pi]0", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["m\[Eta]", "2"], "-", 
       SuperscriptBox["m\[Eta]pr", "2"]}], ")"}]}], 
    RowBox[{"3", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["ma", "2"], "-", 
       SuperscriptBox["m\[Eta]", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["ma", "2"], "-", 
       SuperscriptBox["m\[Eta]pr", "2"]}], ")"}]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.948769169679247*^9, 3.948769176213501*^9}, {
   3.948769208447071*^9, 3.9487692669062233`*^9}, 3.948769473987005*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"34ae37ef-1820-1d4c-b208-07e06cf9f273"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Effect of unaccounted mixing terms", "Subsection",
 CellChangeTimes->{{3.948815535880043*^9, 
  3.9488155479197655`*^9}},ExpressionUUID->"f36059b4-6fa3-6649-adba-\
f4c41c823d96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trace", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "*", "I", "*", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PheavyMatrixHC", "[", "x", "]"}], ".", 
         RowBox[{"PmatrixALP", "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"PheavyMatrix", "[", "x", "]"}], ".", 
         RowBox[{"PmatrixALPHC", "[", "x", "]"}]}]}], "]"}]}], "/.", 
     "rulem0aTransformationSymbolic"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"coeff", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"trace", ",", 
        RowBox[{"alp", "[", "x", "]"}], ",", 
        RowBox[{"\[Eta]1440", "[", "x", "]"}]}], "]"}], "/.", 
      RowBox[{
      "rulem0aTransformationSymbolicToExplicit", "[", 
       "choiceMixingDescription", "]"}]}], ",", "cG"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"alp", "[", "x", "]"}], "*", 
         RowBox[{"PheavyFieldSymbol", "[", 
          RowBox[{"f", ",", "x"}], "]"}], "*", 
         RowBox[{"D", "[", 
          RowBox[{"trace", ",", 
           RowBox[{"alp", "[", "x", "]"}], ",", 
           RowBox[{"PheavyFieldSymbol", "[", 
            RowBox[{"f", ",", "x"}], "]"}]}], "]"}]}], "/.", 
        RowBox[{
        "rulem0aTransformationSymbolicToExplicit", "[", 
         "choiceMixingDescription", "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "->", "0"}], ",", 
         RowBox[{"cu", "->", "0"}], ",", 
         RowBox[{"cd", "->", "0"}], ",", 
         RowBox[{"cs", "->", "0"}]}], "}"}]}], "//", "Simplify"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "listMesonP0heavy"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cG", "->", 
      SubscriptBox["c", "G"]}], ",", 
     RowBox[{"ma", "->", 
      SubscriptBox["m", "a"]}], ",", 
     RowBox[{"m\[Eta]", "->", 
      SubscriptBox["m", "\[Eta]"]}], ",", 
     RowBox[{"m\[Eta]pr", "->", 
      SubscriptBox["m", 
       RowBox[{"\[Eta]", "'"}]]}], ",", 
     RowBox[{"m\[Pi]0", "->", 
      SubscriptBox["m", "\[Pi]"]}]}], "}"}]}], "//", "TeXForm"}]}], "Input",
 CellChangeTimes->{{3.9488155581924343`*^9, 3.948815577950428*^9}, {
  3.948815614504364*^9, 3.948815618673971*^9}, {3.9488157054826584`*^9, 
  3.948815705664322*^9}, {3.948819569558235*^9, 3.9488195748003826`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"fbbe11db-8ea4-c84d-a42e-6b82860be37c"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["ma", "2"], "-", 
      SuperscriptBox["m\[Pi]0", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["m\[Eta]", "2"], "-", 
      SuperscriptBox["m\[Eta]pr", "2"]}], ")"}]}], 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["ma", "2"], "-", 
      SuperscriptBox["m\[Eta]", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["ma", "2"], "-", 
      SuperscriptBox["m\[Eta]pr", "2"]}], ")"}]}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.9488155814397373`*^9, 3.948815620483139*^9, 
  3.948815706366207*^9, 3.948966043180828*^9, 3.9489661859168625`*^9, 
  3.948969398920889*^9, 3.9489780618067207`*^9, 3.9614731242823143`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"d9208184-0782-dc44-9909-e3a238b01e3a"],

Cell["\<\
\\frac{\\sqrt{2} \\alpha  \\epsilon  \\left(m_a^2-m_{\\pi }^2\\right) \
\\text{alp}(x) c_G \\text{$\\eta $1440}(x) \\left(m_{\\eta }^2-m_{\\eta \
'}^2\\right)}{3 \\left(m_a^2-m_{\\eta }^2\\right) \\left(m_a^2-m_{\\eta \
'}^2\\right)}-\\frac{\\alpha  \\epsilon  \\text{alp}(x)
   c_G \\text{$\\eta $1295}(x) \\left(m_a^2 \\left(m_{\\eta '}^2+2 m_{\\eta \
}^2-3 m_{\\pi }^2\\right)+2 m_{\\pi }^2 m_{\\eta '}^2+m_{\\eta }^2 \\left(m_{\
\\pi }^2-3 m_{\\eta '}^2\\right)\\right)}{3 \\left(m_a^2-m_{\\eta }^2\\right) \
\\left(m_a^2-m_{\\eta '}^2\\right)}\
\>", "Output",
 CellChangeTimes->{3.9488155814397373`*^9, 3.948815620483139*^9, 
  3.948815706366207*^9, 3.948966043180828*^9, 3.9489661859168625`*^9, 
  3.948969398920889*^9, 3.9489780618067207`*^9, 3.9614731243300953`*^9},
 CellLabel->
  "Out[104]//TeXForm=",ExpressionUUID->"c5f1cc55-ad9c-bc42-810b-3df6758ce40c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nucleons", "Section",
 CellChangeTimes->{{3.9452285417463245`*^9, 3.9452285425671062`*^9}, 
   3.9487294763432713`*^9},ExpressionUUID->"50a04be5-bf22-5042-b4ed-\
312bb0b0d0ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gaNNsymbolic", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "f\[Pi]"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DDs", "*", "\[Kappa]d", "*", "cG", "*", "\[Epsilon]"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"DD", "+", "DDs", "-", "F"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Kappa]u", "-", "\[Kappa]d"}], ")"}], "*", 
           "cG", "*", "\[Epsilon]"}], "+", 
          RowBox[{"cG", "*", "\[Epsilon]", "*", "\[Kappa]u", "*", 
           RowBox[{"(", 
            RowBox[{"DD", "+", "DDs", "+", "F"}], ")"}]}]}], ")"}], "+", 
        RowBox[{
         FractionBox["\[Epsilon]", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"DD", "+", "F"}], ")"}], "\[Pi]0ALP"}], "-", 
           RowBox[{
            FractionBox["1", 
             SqrtBox["3"]], 
            RowBox[{"(", 
             RowBox[{"DD", "-", 
              RowBox[{"3", "F"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"eta8", "/.", "etasols"}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "DD"}], "+", 
              RowBox[{"3", "DDs"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"eta0", "/.", "etasols"}], ")"}]}]}], ")"}]}]}], ")"}]}],
      "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Eta]", "[", "x", "]"}], "->", "\[Eta]ALP"}], ",", 
       RowBox[{
        RowBox[{"\[Eta]pr", "[", "x", "]"}], "->", "\[Eta]prALP"}]}], "}"}]}],
     "/.", "repl\[Theta]\[Eta]\[Eta]Pr"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"gaNNsymbolic", "/.", 
      RowBox[{
      "rulem0aTransformationSymbolicToExplicit", "[", 
       "choiceMixingDescription", "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cu", "->", "0"}], ",", 
       RowBox[{"cd", "->", "0"}], ",", 
       RowBox[{"cs", "->", "0"}]}], "}"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"test1", ",", "\[Kappa]u"}], "]"}], "\[Kappa]u"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"test1", ",", "\[Kappa]d"}], "]"}], "\[Kappa]d"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["m\[Eta]pr", "2"], "->", 
     RowBox[{"M2relationPureChPT", "[", "\"\<\[Eta]'\>\"", "]"}]}], "}"}]}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaNNexplicit", "[", 
    RowBox[{
    "ma_", ",", "cu_", ",", "cd_", ",", "cs_", ",", "cG_", ",", 
     "\[Epsilon]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"gaNNsymbolic", "/.", 
         RowBox[{
         "rulem0aTransformationSymbolicToExplicit", "[", 
          "choiceMixingDescription", "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["m\[Eta]pr", "2"], "->", 
          RowBox[{"M2relationPureChPT", "[", "\"\<\[Eta]'\>\"", "]"}]}], 
         "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["ma", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["m\[Eta]", "2"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["m\[Pi]0", "2"]}]}], "->", 
        RowBox[{
         SuperscriptBox["ma", "2"], "-", 
         SuperscriptBox["m\[Eta]pr", "2"]}]}], "}"}]}], "//", "Expand"}], "//",
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaNNnumeric", "[", 
    RowBox[{
    "ma_", ",", "cu_", ",", "cd_", ",", "cs_", ",", "cG_", ",", "fa_"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ruleSymbolsToNumbersFinal", "[", 
      RowBox[{
       RowBox[{"gaNNexplicit", "[", 
        RowBox[{
        "ma", ",", "cu", ",", "cd", ",", "cs", ",", "cG", ",", "\[Epsilon]"}],
         "]"}], ",", "2"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F", "->", "0.46"}], ",", 
       RowBox[{"DD", "->", "0.8"}], ",", 
       RowBox[{"DDs", "->", 
        RowBox[{"-", "0.41"}]}]}], "}"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabCouplings", "[", 
    RowBox[{"ma_", ",", "fa_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"gaNNnumeric", "[", 
      RowBox[{"ma", ",", 
       RowBox[{"cRGval", "[", 
        RowBox[{"#", ",", 
         SuperscriptBox["10", "3."], ",", "\"\<cu\>\""}], "]"}], ",", 
       RowBox[{"cRGval", "[", 
        RowBox[{"#", ",", 
         SuperscriptBox["10", "3."], ",", "\"\<cu\>\""}], "]"}], ",", 
       RowBox[{"cRGval", "[", 
        RowBox[{"#", ",", 
         SuperscriptBox["10", "3."], ",", "\"\<cu\>\""}], "]"}], ",", 
       RowBox[{"cRGval", "[", 
        RowBox[{"#", ",", 
         SuperscriptBox["10", "3."], ",", "\"\<cG\>\""}], "]"}], ",", "fa"}], 
      "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"\"\<Fermion universal\>\"", ",", "\"\<Gluon\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "//", "ParentDirectory"}], 
       ",", "\"\<auxiliary data/appCouplings.mx\>\""}], "}"}], "]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<ALP-fermion\>\"", ",", "\"\<ALP-gluon\>\""}], "}"}], ",", 
       RowBox[{"tabCouplings", "[", 
        RowBox[{"ma", ",", 
         FractionBox["F\[Pi]", "\[Epsilon]"]}], "]"}]}], "}"}], "//", 
     "Transpose"}], ",", "\"\<MX\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaNNexplicit1", "[", 
    RowBox[{
    "ma_", ",", "cu_", ",", "cd_", ",", "cs_", ",", "cG_", ",", 
     "\[Epsilon]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"gaNNsymbolic", "/.", 
         RowBox[{
         "rulem0aTransformationSymbolicToExplicit", "[", 
          "\"\<Only \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)a\>\"", "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["m\[Eta]pr", "2"], "->", 
          RowBox[{"M2relationPureChPT", "[", "\"\<\[Eta]'\>\"", "]"}]}], 
         "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["ma", "2"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["m\[Eta]", "2"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["m\[Pi]0", "2"]}]}], "->", 
        RowBox[{
         SuperscriptBox["ma", "2"], "-", 
         SuperscriptBox["m\[Eta]pr", "2"]}]}], "}"}]}], "//", "Expand"}], "//",
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaNNnumericOnly\[Pi]0aMixing", "[", 
    RowBox[{
    "ma_", ",", "cu_", ",", "cd_", ",", "cs_", ",", "cG_", ",", "fa_"}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ruleSymbolsToNumbersFinal", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gaNNexplicit1", "[", 
         RowBox[{
         "ma", ",", "cu", ",", "cd", ",", "cs", ",", "cG", ",", 
          "\[Epsilon]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]u", "->", 
          RowBox[{"1", "-", "\[Kappa]d"}]}], "}"}]}], ",", "2"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F", "->", "0.46"}], ",", 
       RowBox[{"DD", "->", "0.8"}], ",", 
       RowBox[{"DDs", "->", 
        RowBox[{"-", "0.41"}]}]}], "}"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"gaNNnumeric", "[", 
       RowBox[{"ma", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}], 
       "]"}], "]"}], ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"gaNNnumericOnly\[Pi]0aMixing", "[", 
       RowBox[{"ma", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}], 
       "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ma", ",", "0.01", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"FrameStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "Black", ",", "20"}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\) [GeV]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(g\), \(app\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{
       "{", "\"\<\!\(\*SubscriptBox[\(f\), \(a\)]\) = 1 GeV\>\"", "}"}], 
       "]"}], ",", "18", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", "18"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<3 flavors\>\"", ",", 
         "\"\<Only \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)a mixing\>\""}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "@", "Red"}]}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQLRNl3fE25a3jla07Z4JohU+Vc0H0iTmsK0F0R87t
vSD6i8+XgyDaw0XjBoj2ia6/CaI5Ck7fA9EbEn+D6Rl/fj4C0S16ck9AdEFf
DOd7IN2jx8QFoisenNr5AUgn/Pt8CkSbvP1/HkS/uFNxC0RLlHE+ANFbjCUf
geg13PwvQLRN05bXIPqBUfonEH3liPevD2Dzt/0D0R+Y9zB8BLn3yUYOEP3h
7XNuEP0kzkkMRBu83KsOoidM3PyNOfWtY4lowHcQ7TJjTQoLkJbJmJYOos9M
d5FgBdIXsrPAtIFOoAyI7uj9IQuif3iELAPRPX7rV4HoOx8/+OjnA/kyp/xA
NADUUrtQ
  "],
 CellLabel->
  "In[105]:=",ExpressionUUID->"9af70df6-15a9-4f41-8827-e45904fbbba1"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "cG", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"DD", " ", 
          RowBox[{"(", 
           RowBox[{"-", "\[Kappa]d"}], ")"}]}], "+", "DD", "+", "DDs", "+", 
         RowBox[{"F", " ", 
          RowBox[{"(", 
           RowBox[{"\[Kappa]d", "+", 
            RowBox[{"2", " ", "\[Kappa]u"}], "-", "1"}], ")"}]}]}], ")"}]}], 
      "+", 
      RowBox[{"3", " ", 
       SqrtBox["3"], " ", "DD", " ", "\[Eta]prALP"}], "+", 
      RowBox[{"3", " ", "DD", " ", "\[Pi]0ALP"}], "+", 
      RowBox[{
       SqrtBox["6"], " ", "DDs", " ", "\[Eta]ALP"}], "+", 
      RowBox[{"4", " ", 
       SqrtBox["3"], " ", "DDs", " ", "\[Eta]prALP"}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["6"], " ", "F", " ", "\[Eta]ALP"}], "-", 
      RowBox[{
       SqrtBox["3"], " ", "F", " ", "\[Eta]prALP"}], "+", 
      RowBox[{"3", " ", "F", " ", "\[Pi]0ALP"}]}], ")"}]}], 
   RowBox[{"6", " ", "f\[Pi]"}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.945229548901615*^9, 3.945229569924797*^9}, {
   3.945229624137127*^9, 3.945229640632139*^9}, {3.945229808004822*^9, 
   3.9452298406900177`*^9}, {3.945230017761801*^9, 3.945230028318033*^9}, 
   3.9452300721235256`*^9, 3.9452301142524014`*^9, 3.945232466244753*^9, 
   3.945235928091902*^9, 3.9452360222761917`*^9, 3.945236056007395*^9, 
   3.9452360984651737`*^9, {3.9452361351560745`*^9, 3.9452361607465687`*^9}, 
   3.9452362713518333`*^9, {3.9452363031715527`*^9, 3.945236318020958*^9}, {
   3.945236394828314*^9, 3.9452364244336643`*^9}, 3.945236691685301*^9, 
   3.945236752800522*^9, {3.945236783051262*^9, 3.9452367983815556`*^9}, 
   3.945275324011339*^9, {3.945276206258335*^9, 3.9452762213140907`*^9}, 
   3.945277636516514*^9, {3.9452776691744537`*^9, 3.9452776813261623`*^9}, 
   3.947054507064396*^9, 3.9486467925191097`*^9, 3.948700144616535*^9, 
   3.948701842221588*^9, 3.9487311390382004`*^9, 3.9487355291335564`*^9, 
   3.9489694102289486`*^9, 3.948978062097933*^9, 3.9614731342972355`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"2fde073f-8a86-4849-b79c-e89efdd4cf62"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{{3.945229548901615*^9, 3.945229569924797*^9}, {
   3.945229624137127*^9, 3.945229640632139*^9}, {3.945229808004822*^9, 
   3.9452298406900177`*^9}, {3.945230017761801*^9, 3.945230028318033*^9}, 
   3.9452300721235256`*^9, 3.9452301142524014`*^9, 3.945232466244753*^9, 
   3.945235928091902*^9, 3.9452360222761917`*^9, 3.945236056007395*^9, 
   3.9452360984651737`*^9, {3.9452361351560745`*^9, 3.9452361607465687`*^9}, 
   3.9452362713518333`*^9, {3.9452363031715527`*^9, 3.945236318020958*^9}, {
   3.945236394828314*^9, 3.9452364244336643`*^9}, 3.945236691685301*^9, 
   3.945236752800522*^9, {3.945236783051262*^9, 3.9452367983815556`*^9}, 
   3.945275324011339*^9, {3.945276206258335*^9, 3.9452762213140907`*^9}, 
   3.945277636516514*^9, {3.9452776691744537`*^9, 3.9452776813261623`*^9}, 
   3.947054507064396*^9, 3.9486467925191097`*^9, 3.948700144616535*^9, 
   3.948701842221588*^9, 3.9487311390382004`*^9, 3.9487355291335564`*^9, 
   3.9489694102289486`*^9, 3.948978062097933*^9, 3.9614731344556713`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"bc09dd2c-dde8-264a-bbd8-17b82cbd8383"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 109, 10, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473134821308*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"357e2aef-3838-3743-b44a-310ecaef3ad1"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 109, 11, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473134821308*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"afc54552-3202-4f42-9673-49aab08f5ffe"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 109, 12, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.9614731348371944`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"e4d839f4-bf21-5547-8dec-7ab7c2e8bc03"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be suppressed \
during this calculation.\"", 2, 109, 13, 26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.9614731348371944`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"85cc2318-e9e0-8d41-871d-b040892c71bf"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 113, 14, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473135171177*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"4c6258c3-310e-8943-a252-3f387fb9ef3c"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 113, 15, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473135171177*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"72f55be2-c4ed-e241-97b1-6aef1ba5a7d2"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "ReplaceAll", "reps", 
    "\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{\\\"\[Kappa]invariant\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Kappa]u\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\[Kappa]d\\\", \\\"\[Rule]\\\", \\\"0\\\"}]}], \\\"}\\\"}], \\\",\
\\\", \\\"repl\[Kappa]matrixStandard\\\"}], \\\"]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing.\"", 2, 113, 16, 
    26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473135187212*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"6bd97c2b-b03a-7049-ac1c-a4a190e4f61c"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be suppressed \
during this calculation.\"", 2, 113, 17, 26388052851702414314, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.961473135187212*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"9800bf90-baa9-e34c-bc11-23b14147ce83"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    GraphicsBox[{{{}, {}}, InsetBox[
       TemplateBox[{
         StyleBox["\"3 flavors\"", 18, StripOnInput -> False], 
         StyleBox[
         "\"Only \\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(0\\)]\\)a mixing\"", 
          18, StripOnInput -> False]},
        "LineLegend",
        DisplayFunction->(FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ),
        Editable->True,
        InterpretationFunction:>(RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
       Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm]},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0., 0.},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{
        FormBox[
         TagBox["\"\\!\\(\\*SubscriptBox[\\(g\\), \\(app\\)]\\)\"", HoldForm],
          TraditionalForm], None}, {
        FormBox[
         TagBox[
         "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\) [GeV]\"", HoldForm], 
         TraditionalForm], None}},
     FrameStyle->Directive[
       Thickness[Large], 
       GrayLevel[0], 20],
     FrameTicks->FrontEndValueCache[{{
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-0.6931471805599453, 
           FormBox[
            TagBox[
             InterpretationBox[
              StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
              AutoDelete -> True], NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
          0., 
           FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
           FormBox["2", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.2039728043259361`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.916290731874155, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.5108256237659907, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.35667494393873245`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.2231435513142097, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.10536051565782628`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          0.4054651081081644, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.0986122886681098`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.3862943611198906`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.791759469228055, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.9459101490553132`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.0794415416798357`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.1972245773362196`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.302585092994046, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.3978952727983707`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.4849066497880004`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}}, {{-0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
          0., 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
          0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
           0.}}, {-2.3025850929940455`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.2039728043259361`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.916290731874155, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.5108256237659907, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.35667494393873245`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.2231435513142097, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.10536051565782628`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          0.4054651081081644, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.0986122886681098`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.3862943611198906`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.791759469228055, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.9459101490553132`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.0794415416798357`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.1972245773362196`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.302585092994046, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.3978952727983707`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.4849066497880004`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}}}, {{{-0.6931471805599453, 
           FormBox[
            TagBox[
             InterpretationBox[
              StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
              AutoDelete -> True], NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
          0., 
           FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
           FormBox["2", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.2039728043259361`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.916290731874155, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.5108256237659907, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.35667494393873245`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.2231435513142097, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.10536051565782628`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          0.4054651081081644, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.0986122886681098`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.3862943611198906`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.791759469228055, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.9459101490553132`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.0794415416798357`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.1972245773362196`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.302585092994046, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.3978952727983707`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.4849066497880004`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}}, {{-0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
          0., 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
          0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
           0.}}, {-2.3025850929940455`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.2039728043259361`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.916290731874155, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.5108256237659907, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.35667494393873245`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.2231435513142097, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.10536051565782628`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          0.4054651081081644, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.0986122886681098`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.3862943611198906`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.791759469228055, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.9459101490553132`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.0794415416798357`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.1972245773362196`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.302585092994046, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.3978952727983707`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.4849066497880004`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     ImageSize->Large,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox[
       StyleBox[
        TemplateBox[{
         "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(a\\)]\\) = 1 GeV\""}, 
         "RowDefault"], 18, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm],
     PlotRange->{All, All},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->FrontEndValueCache[{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0]}, {{{-0.6931471805599453, 
          FormBox[
           TagBox[
            InterpretationBox[
             StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
             AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
          FormBox["2", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1.6094379124341003`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1.2039728043259361`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.916290731874155, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.4054651081081644, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.6094379124341003`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.3978952727983707`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.4849066497880004`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}, {{-0.6931471805599453, 
          FormBox[
           TagBox[
            InterpretationBox[
             StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
             AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
          FormBox["2", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1.6094379124341003`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-1.2039728043259361`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.916290731874155, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.5108256237659907, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.35667494393873245`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.2231435513142097, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-0.10536051565782628`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0.4054651081081644, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.0986122886681098`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.3862943611198906`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.6094379124341003`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.791759469228055, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         1.9459101490553132`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.0794415416798357`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.1972245773362196`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.302585092994046, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.3978952727983707`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         2.4849066497880004`, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}]],
    TraditionalForm],
   InterpretTemplate[Legended[
     Graphics[{{}, {}}, {
      DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
       Identity, DisplayFunction -> Identity, Ticks -> {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0]}, 
       AxesOrigin -> {0., 0.}, FrameTicks -> {{
          
          Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
           WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
          
          Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
           WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
       DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& )}, 
         "ClippingRange" -> {{{0., 0.}, {0., 0.}}, {{0., 0.}, {0., 0.}}}}, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{
          HoldForm["\!\(\*SubscriptBox[\(g\), \(app\)]\)"], None}, {
          HoldForm["\!\(\*SubscriptBox[\(m\), \(a\)]\) [GeV]"], None}}, 
       FrameStyle -> Directive[
         Thickness[Large], 
         GrayLevel[0], 20], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Exp[#]& )[
              Part[#, 1]], 
             (Exp[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> Style[
         Row[{"\!\(\*SubscriptBox[\(f\), \(a\)]\) = 1 GeV"}], 18, 
         GrayLevel[0]], PlotRange -> {All, All}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[
           Rational[2, 3], 0, 0]]}, {
         Style["3 flavors", 18], 
         Style["Only \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)a mixing", 18]}, 
        LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
      0.2, 0.8}, Identity]]& ],
   AutoDelete->True,
   Editable->True,
   SelectWithContents->False,
   Selectable->True], TraditionalForm]], "Output",
 CellChangeTimes->{{3.945229548901615*^9, 3.945229569924797*^9}, {
   3.945229624137127*^9, 3.945229640632139*^9}, {3.945229808004822*^9, 
   3.9452298406900177`*^9}, {3.945230017761801*^9, 3.945230028318033*^9}, 
   3.9452300721235256`*^9, 3.9452301142524014`*^9, 3.945232466244753*^9, 
   3.945235928091902*^9, 3.9452360222761917`*^9, 3.945236056007395*^9, 
   3.9452360984651737`*^9, {3.9452361351560745`*^9, 3.9452361607465687`*^9}, 
   3.9452362713518333`*^9, {3.9452363031715527`*^9, 3.945236318020958*^9}, {
   3.945236394828314*^9, 3.9452364244336643`*^9}, 3.945236691685301*^9, 
   3.945236752800522*^9, {3.945236783051262*^9, 3.9452367983815556`*^9}, 
   3.945275324011339*^9, {3.945276206258335*^9, 3.9452762213140907`*^9}, 
   3.945277636516514*^9, {3.9452776691744537`*^9, 3.9452776813261623`*^9}, 
   3.947054507064396*^9, 3.9486467925191097`*^9, 3.948700144616535*^9, 
   3.948701842221588*^9, 3.9487311390382004`*^9, 3.9487355291335564`*^9, 
   3.9489694102289486`*^9, 3.948978062097933*^9, 3.961473135314781*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"08c1affc-f02e-1e43-b230-e11b8bbae5b3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Constructing full Lagrangian and converting it into a form suitable for \
scaling\
\>", "Chapter",
 CellChangeTimes->{{3.9487003396674614`*^9, 
  3.94870036827289*^9}},ExpressionUUID->"59eb8cc0-528b-ff4c-8dee-\
bc59046eee48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{"genlagropt", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeysInteractions", "=", 
     RowBox[{
      RowBox[{"Keys", "[", 
       RowBox[{"DownValues", "@", "LagrangianWithALP"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<MonitorProgress\>\"", "]"}], "@", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"LagrangianWithALPscaled", "[", "int", "]"}], "=", 
         RowBox[{
          RowBox[{"Expand", "[", 
           RowBox[{"LagrangianWithALP", "[", "int", "]"}], "]"}], "/.", 
          "repsIndividual"}]}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"int", ",", "KeysInteractions"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"fLagr", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"int", ",", 
          RowBox[{"LagrangianWithALPscaled", "[", "int", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"int", ",", "KeysInteractions"}], "}"}]}], "]"}], ",", 
      "\"\<MX\>\""}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LagrData", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fLagr", ",", "\"\<MX\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"KeysInteractions", "=", 
     RowBox[{"LagrData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"LagrangianWithALPscaled", "[", 
         RowBox[{
          RowBox[{"LagrData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"LagrData", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "LagrData", "]"}], ",", "1"}], "}"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TotalLagrangianScaled", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"LagrangianWithALPscaled", "[", "int", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"int", ",", "KeysInteractions"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Number of terms in the Lagrangian (may be reduced by a factor of few \
since the symmetry over indices permutations is not included at this step):\>\
\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TotalLagrangianScaled", "=", 
   RowBox[{"TotalLagrangianScaled", "/.", 
    RowBox[{"{", 
     RowBox[{"coefVA", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TotalLagrangianScaled", "//", "Length"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LagrangianGivenFields", "[", 
   RowBox[{"fieldlist_", ",", "powerlist_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"terms", "=", 
     RowBox[{"Total", "[", 
      RowBox[{"Cases", "[", 
       RowBox[{"TotalLagrangianScaled", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"t", "^", 
           RowBox[{"(", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"fieldlist", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
               RowBox[{"powerlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "fieldlist", "]"}]}], "}"}]}], "]"}], 
            ")"}]}], "*", "aa_"}], ":>", "aa"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Example: the Lagrangian including exactly 1 ALP, 1 \
\!\(\*SuperscriptBox[\(\[Pi]\), \(+\)]\), 1 \!\(\*SuperscriptBox[\(\[Pi]\), \
\(-\)]\), and 1 \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\):\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expr", "=", 
    RowBox[{"LagrangianGivenFields", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<a\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(+\)]\)\>\"", 
        ",", "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(-\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], "//",
   "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{"expr", "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.9487003707604485`*^9, 3.948700438966978*^9}, {
  3.948700470655882*^9, 3.9487004715126534`*^9}, {3.948700503370041*^9, 
  3.9487005532150364`*^9}, {3.9487006007036743`*^9, 3.9487006400134296`*^9}, {
  3.948700755692047*^9, 3.9487007587888165`*^9}, {3.9487013245327473`*^9, 
  3.9487014546049767`*^9}, {3.9489720547962456`*^9, 3.9489720594138985`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"8f16a319-b015-d94f-918f-c90a29c5240b"],

Cell[BoxData[
 FormBox["\<\"Number of terms in the Lagrangian (may be reduced by a factor \
of few since the symmetry over indices permutations is not included at this \
step):\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.9487006848271694`*^9, 3.948700798406805*^9, 
  3.9487015021822205`*^9, 3.9487018729624615`*^9, 3.948730956949045*^9, 
  3.948731181843004*^9, 3.948735588521471*^9, 3.9489660877586975`*^9, 
  3.948966227472204*^9, 3.948966666671276*^9, 3.9489694566158504`*^9, 
  3.9489695869482327`*^9, 3.9489721160969086`*^9, 3.948978117182232*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"79d813c0-e691-0d43-9a1d-308cf73857f7"],

Cell[BoxData[
 FormBox["69879", TraditionalForm]], "Output",
 CellChangeTimes->{3.9487004000332775`*^9, 3.948700684831526*^9, 
  3.948700798409807*^9, 3.9487015021867714`*^9, 3.9487018729660015`*^9, 
  3.948730956958521*^9, 3.9487311818487625`*^9, 3.9487355885251465`*^9, 
  3.948966087766243*^9, 3.9489662274775295`*^9, 3.948966666681982*^9, 
  3.9489694566158504`*^9, 3.9489695869599953`*^9, 3.9489721169132557`*^9, 
  3.9489781179818993`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"128736ec-9b0f-3f43-8c05-c4cd3042305a"],

Cell[BoxData[
 FormBox["\<\"Example: the Lagrangian including exactly 1 ALP, 1 \
\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(+\\)]\\), 1 \
\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(-\\)]\\), and 1 \
\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(0\\)]\\):\"\>", 
  TraditionalForm]], "Print",
 CellChangeTimes->{3.9487006848271694`*^9, 3.948700798406805*^9, 
  3.9487015021822205`*^9, 3.9487018729624615`*^9, 3.948730956949045*^9, 
  3.948731181843004*^9, 3.948735588521471*^9, 3.9489660877586975`*^9, 
  3.948966227472204*^9, 3.948966666671276*^9, 3.9489694566158504`*^9, 
  3.9489695869482327`*^9, 3.9489721160969086`*^9, 3.9489781179985447`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"7831e7ea-b490-cc40-afd9-54e5af1118ab"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.0353752`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9487004000332775`*^9, 3.948700684831526*^9, 
  3.948700798409807*^9, 3.9487015021867714`*^9, 3.9487018729660015`*^9, 
  3.948730956958521*^9, 3.9487311818487625`*^9, 3.9487355885251465`*^9, 
  3.948966087766243*^9, 3.9489662274775295`*^9, 3.948966666681982*^9, 
  3.9489694566158504`*^9, 3.9489695869599953`*^9, 3.9489721169132557`*^9, 
  3.948978118031603*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b970f02b-f7be-7344-9323-5718bc4ff543"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"18", " ", 
     SuperscriptBox["f\[Pi]", "2"]}]], "\[Epsilon]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["ma1", "2"], "-", 
         RowBox[{
          SuperscriptBox["g1", "2"], " ", 
          SuperscriptBox["\[Phi]N", "2"]}]}]]], 
      RowBox[{"alp", "(", "x", ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"d\[Pi]minus", "(", 
          RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]0", "(", "x", ")"}], " ", 
            RowBox[{"d\[Pi]plus", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"3", " ", "coefPheavy", " ", 
                SuperscriptBox["f\[Pi]", "2"], " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(-\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(-\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(+\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(+\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cG", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Kappa]d", "-", "\[Kappa]u"}], ")"}]}], "-", 
                  "\[Pi]01300ALP"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"h3star", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["ma1", "2"], "-", 
                    RowBox[{
                    SuperscriptBox["g1", "2"], " ", 
                    SuperscriptBox["\[Phi]N", "2"]}]}]], "+", "ma1"}], 
                    ")"}]}], "+", 
                  RowBox[{"2", " ", "h2star", " ", "ma1"}]}], ")"}]}]}], "+", 
              RowBox[{"6", " ", "cvmd", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]], " ", 
               TemplateBox[{
                 RowBox[{
                   RowBox[{"m\[Eta]pr", "-", "ma"}]}]},
                "UnitStepSeq"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cG", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]u", "-", "\[Kappa]d"}], ")"}]}], "+", 
                 "\[Pi]0ALP"}], ")"}]}], "-", 
              RowBox[{"4", " ", "\[Pi]0ALP", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"\[Pi]plus", "(", "x", ")"}], " ", 
            RowBox[{"d\[Pi]0", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"3", " ", "coefPheavy", " ", 
                SuperscriptBox["f\[Pi]", "2"], " ", "h3star", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["ma1", "2"], "-", 
                    RowBox[{
                    SuperscriptBox["g1", "2"], " ", 
                    SuperscriptBox["\[Phi]N", "2"]}]}]], "+", "ma1"}], ")"}], 
                " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(0\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(0\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(-\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(-\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cG", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Kappa]d", "-", "\[Kappa]u"}], ")"}]}], "-", 
                  "\[Pi]01300ALP"}], ")"}]}]}], "+", 
              RowBox[{"3", " ", "cvmd", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]], " ", 
               TemplateBox[{
                 RowBox[{
                   RowBox[{"m\[Eta]pr", "-", "ma"}]}]},
                "UnitStepSeq"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cG", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]u", "-", "\[Kappa]d"}], ")"}]}], "+", 
                 "\[Pi]0ALP"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Pi]0ALP", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]]}]}], ")"}]}]}], ")"}]}],
         "-", 
        RowBox[{
         RowBox[{"\[Pi]minus", "(", "x", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"d\[Pi]0", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
            RowBox[{"d\[Pi]plus", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"3", " ", "coefPheavy", " ", 
                SuperscriptBox["f\[Pi]", "2"], " ", "h3star", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["ma1", "2"], "-", 
                    RowBox[{
                    SuperscriptBox["g1", "2"], " ", 
                    SuperscriptBox["\[Phi]N", "2"]}]}]], "+", "ma1"}], ")"}], 
                " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(0\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(0\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"\[Theta]VAPsym", "(", 
                 
                 RowBox[{"\<\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(a\\), \
\\(+\\)], \\(1\\)]\\)\"\>", 
                  ",", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(+\\)]\\)\"\>"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"cG", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Kappa]d", "-", "\[Kappa]u"}], ")"}]}], "-", 
                  "\[Pi]01300ALP"}], ")"}]}]}], "+", 
              RowBox[{"3", " ", "cvmd", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]], " ", 
               TemplateBox[{
                 RowBox[{
                   RowBox[{"m\[Eta]pr", "-", "ma"}]}]},
                "UnitStepSeq"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cG", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]u", "-", "\[Kappa]d"}], ")"}]}], "+", 
                 "\[Pi]0ALP"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Pi]0ALP", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["ma1", "2"], "-", 
                 RowBox[{
                  SuperscriptBox["g1", "2"], " ", 
                  SuperscriptBox["\[Phi]N", "2"]}]}]]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["m\[Pi]0", "2"], " ", 
            RowBox[{"\[Pi]0", "(", "x", ")"}], " ", 
            RowBox[{"\[Pi]plus", "(", "x", ")"}], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["ma1", "2"], "-", 
              RowBox[{
               SuperscriptBox["g1", "2"], " ", 
               SuperscriptBox["\[Phi]N", "2"]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Delta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", "cG", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SqrtBox["6"], " ", "\[Eta]\[Pi]0"}], "+", 
                    RowBox[{
                    SqrtBox["3"], " ", "\[Eta]pr\[Pi]0"}], "+", "1"}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]d", "+", "\[Kappa]u"}], ")"}]}], "+", 
                 RowBox[{"\[Eta]ALP", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"6", " ", "\[Eta]\[Pi]0"}], "+", 
                    RowBox[{"3", " ", 
                    SqrtBox["2"], " ", "\[Eta]pr\[Pi]0"}], "+", 
                    SqrtBox["6"]}], ")"}]}], "+", 
                 RowBox[{"\[Eta]prALP", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"3", " ", 
                    SqrtBox["2"], " ", "\[Eta]\[Pi]0"}], "+", 
                    RowBox[{"3", " ", "\[Eta]pr\[Pi]0"}], "+", 
                    SqrtBox["3"]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"3", " ", "cG", " ", "\[Kappa]d"}], "-", 
              RowBox[{"3", " ", "cG", " ", "\[Kappa]u"}], "-", 
              RowBox[{"3", " ", "\[Pi]0ALP"}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"dalp", "(", 
       RowBox[{"x", ",", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Pi]plus", "(", "x", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]0", "(", "x", ")"}], " ", 
            RowBox[{"d\[Pi]minus", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Pi]minus", "(", "x", ")"}], " ", 
            RowBox[{"d\[Pi]0", "(", 
             RowBox[{"x", ",", "\[Mu]"}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Pi]0", "(", "x", ")"}], " ", 
         RowBox[{"\[Pi]minus", "(", "x", ")"}], " ", 
         RowBox[{"d\[Pi]plus", "(", 
          RowBox[{"x", ",", "\[Mu]"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "cd"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", "cG", " ", "\[Kappa]d"}]}], "+", 
           RowBox[{"2", " ", "cG", " ", "\[Kappa]u"}], "+", 
           RowBox[{"2", " ", "cu"}], "+", "\[Pi]0ALP"}], ")"}]}], "+", 
        RowBox[{"3", " ", "cvmd", " ", 
         TemplateBox[{
           RowBox[{
             RowBox[{"m\[Eta]pr", "-", "ma"}]}]},
          "UnitStepSeq"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cG", " ", 
            RowBox[{"(", 
             RowBox[{"\[Kappa]u", "-", "\[Kappa]d"}], ")"}]}], "+", 
           "\[Pi]0ALP"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.9487004000332775`*^9, 3.948700684831526*^9, 
  3.948700798409807*^9, 3.9487015021867714`*^9, 3.9487018729660015`*^9, 
  3.948730956958521*^9, 3.9487311818487625`*^9, 3.9487355885251465`*^9, 
  3.948966087766243*^9, 3.9489662274775295`*^9, 3.948966666681982*^9, 
  3.9489694566158504`*^9, 3.9489695869599953`*^9, 3.9489721169132557`*^9, 
  3.9489781248039913`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"add882a5-530f-104c-95fe-c4f729d27743"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1908, 999.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3a4ffc7a-7953-f94d-9b89-88c708e5bbe1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 186, 3, 96, "Title",ExpressionUUID->"907b0487-7600-6248-a0d8-21d1842616c7"],
Cell[CellGroupData[{
Cell[787, 29, 181, 3, 67, "Chapter",ExpressionUUID->"30fb3f8a-b47e-cb47-9f79-a691ef3b2e3f"],
Cell[CellGroupData[{
Cell[993, 36, 2363, 58, 256, "Input",ExpressionUUID->"f500d63a-cd0b-8346-8d77-e58642651f7a"],
Cell[3359, 96, 450, 6, 31, "Output",ExpressionUUID->"037fcb27-489f-3442-b60a-14c8f40d27a7"],
Cell[3812, 104, 424, 6, 31, "Output",ExpressionUUID->"daa9dbd2-1802-de4f-8479-f22205d9c14e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4285, 116, 176, 3, 67, "Chapter",ExpressionUUID->"546a7601-472c-864e-bf50-1b9a3594cfaa"],
Cell[CellGroupData[{
Cell[4486, 123, 211, 4, 66, "Section",ExpressionUUID->"c7cf7cf1-a807-5040-b696-2bc9d15fa247"],
Cell[4700, 129, 6537, 162, 541, "Input",ExpressionUUID->"9b473985-86cd-c941-941c-5f8c37792be2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11274, 296, 401, 10, 66, "Section",ExpressionUUID->"d8fa6696-85e7-cd44-8c7a-c96c3a9402ad"],
Cell[CellGroupData[{
Cell[11700, 310, 7055, 123, 166, "Input",ExpressionUUID->"e0967441-23f6-b740-ba72-dfad8bb068ef"],
Cell[18758, 435, 494, 9, 33, "Output",ExpressionUUID->"99b60265-7200-304d-b318-94cab34ffee5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19301, 450, 159, 3, 66, "Section",ExpressionUUID->"319caa19-c23b-e246-99ad-f11a581f2129"],
Cell[CellGroupData[{
Cell[19485, 457, 10164, 242, 384, "Input",ExpressionUUID->"ba4d7ae4-933b-eb4c-b7c4-ecd23e7544b2"],
Cell[29652, 701, 830, 14, 33, "Output",ExpressionUUID->"2015dab3-9c55-5c4f-b2f9-5425f0f614d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30531, 721, 266, 4, 66, "Section",ExpressionUUID->"0f9967df-a49c-8d46-8ca0-b52103d29c68"],
Cell[CellGroupData[{
Cell[30822, 729, 5741, 139, 256, "Input",ExpressionUUID->"32a7aaf9-7e69-2c4a-ba72-6d17596a4fac"],
Cell[36566, 870, 233, 5, 33, "Output",ExpressionUUID->"5f3776cc-ef82-1e4b-9bc9-56a33e5141c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36836, 880, 166, 3, 53, "Subsection",ExpressionUUID->"dc38f2db-fe22-8648-a5c3-3c64acd67d35"],
Cell[CellGroupData[{
Cell[37027, 887, 99777, 1641, 536, "Input",ExpressionUUID->"5deb84cc-63df-bc4f-b245-0bdc4b251907"],
Cell[136807, 2530, 99806, 1642, 540, "Output",ExpressionUUID->"f9be9e09-1a3b-c84c-9617-7ebc178263f8"]
}, Open  ]],
Cell[236628, 4175, 7001, 183, 309, "Input",ExpressionUUID->"4bbece28-5051-2948-81cd-3652a614faad"],
Cell[243632, 4360, 3228, 86, 123, "Input",ExpressionUUID->"0a2c4849-6540-d749-9f34-ab6de0861bd7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246909, 4452, 207, 4, 66, "Section",ExpressionUUID->"6c1a3d96-15ca-874a-9f47-11ff0b0450fa"],
Cell[247119, 4458, 5640, 142, 268, "Input",ExpressionUUID->"41cd61f1-0a4d-8446-b9f3-da4a58d6b5d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252796, 4605, 183, 3, 66, "Section",ExpressionUUID->"d2ac7cb9-6ace-0841-8e34-246bcbe8efb7"],
Cell[252982, 4610, 1601, 42, 47, "Input",ExpressionUUID->"54d3739e-5354-844a-bb3a-7dffac22260d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254620, 4657, 318, 6, 66, "Section",ExpressionUUID->"d17b6a30-c719-a14b-b53e-f48a4f6fa2a6"],
Cell[CellGroupData[{
Cell[254963, 4667, 159, 3, 53, "Subsection",ExpressionUUID->"240c8715-019e-c34d-8428-0f88959d7419"],
Cell[255125, 4672, 2127, 57, 104, "Input",ExpressionUUID->"9a6262a6-a0da-134f-bdb9-3c450702fb03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257289, 4734, 225, 5, 53, "Subsection",ExpressionUUID->"a120ebd0-b9e5-fc48-a1d1-8b99d29a2f10"],
Cell[257517, 4741, 19118, 486, 758, "Input",ExpressionUUID->"b9bdbc36-b200-4642-ba18-19d7eac2ceef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276672, 5232, 164, 3, 53, "Subsection",ExpressionUUID->"b0491c41-b3a6-cf46-8ffc-c6fb98b2863d"],
Cell[276839, 5237, 46853, 773, 269, "Input",ExpressionUUID->"f9d56f2f-dac9-524c-8722-1c8a93b5a94a"],
Cell[CellGroupData[{
Cell[323717, 6014, 9800, 227, 485, "Input",ExpressionUUID->"a493aaea-354e-7541-aaa8-99229a9859a1"],
Cell[333520, 6243, 765, 14, 33, "Output",ExpressionUUID->"437bc3be-c9f9-684b-a62f-35e0a012e095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334322, 6262, 774, 20, 28, "Input",ExpressionUUID->"4a0b5a39-376c-e94e-bce1-841ae86355b3"],
Cell[335099, 6284, 9562, 248, 415, "Output",ExpressionUUID->"8f1f1918-eca5-9941-8e6f-6df7552d347f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344722, 6539, 283, 6, 66, "Section",ExpressionUUID->"802edef4-d5b4-d144-a3ae-093b18d541ff"],
Cell[345008, 6547, 139415, 2291, 435, "Input",ExpressionUUID->"425db23c-8100-d449-b9db-1dd19b7cae25"],
Cell[CellGroupData[{
Cell[484448, 8842, 7500, 170, 427, "Input",ExpressionUUID->"46a9b6a2-6b10-424c-894a-149d4d68379c"],
Cell[491951, 9014, 855, 15, 33, "Output",ExpressionUUID->"40a4d628-6735-764d-9765-56852b2d198d"]
}, Open  ]],
Cell[492821, 9032, 1282, 31, 85, "Input",ExpressionUUID->"9368708e-2321-d647-b335-93b4100f06d7"],
Cell[CellGroupData[{
Cell[494128, 9067, 1795, 43, 85, "Input",ExpressionUUID->"7f4ecfd7-0134-594c-947d-0a791c8ac6b9"],
Cell[495926, 9112, 929, 27, 56, "Output",ExpressionUUID->"34ae37ef-1820-1d4c-b208-07e06cf9f273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496892, 9144, 184, 3, 53, "Subsection",ExpressionUUID->"f36059b4-6fa3-6649-adba-f4c41c823d96"],
Cell[CellGroupData[{
Cell[497101, 9151, 2679, 74, 86, "Input",ExpressionUUID->"fbbe11db-8ea4-c84d-a42e-6b82860be37c"],
Cell[499783, 9227, 956, 27, 56, "Output",ExpressionUUID->"d9208184-0782-dc44-9909-e3a238b01e3a"],
Cell[500742, 9256, 876, 14, 62, "Output",ExpressionUUID->"c5f1cc55-ad9c-bc42-810b-3df6758ce40c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501679, 9277, 182, 3, 66, "Section",ExpressionUUID->"50a04be5-bf22-5042-b4ed-312bb0b0d0ea"],
Cell[CellGroupData[{
Cell[501886, 9284, 10294, 299, 285, "Input",ExpressionUUID->"9af70df6-15a9-4f41-8827-e45904fbbba1"],
Cell[512183, 9585, 2181, 45, 51, "Output",ExpressionUUID->"2fde073f-8a86-4849-b79c-e89efdd4cf62"],
Cell[514367, 9632, 1171, 17, 31, "Output",ExpressionUUID->"bc09dd2c-dde8-264a-bbd8-17b82cbd8383"],
Cell[515541, 9651, 824, 16, 26, "Message",ExpressionUUID->"357e2aef-3838-3743-b44a-310ecaef3ad1"],
Cell[516368, 9669, 824, 16, 26, "Message",ExpressionUUID->"afc54552-3202-4f42-9673-49aab08f5ffe"],
Cell[517195, 9687, 826, 16, 26, "Message",ExpressionUUID->"e4d839f4-bf21-5547-8dec-7ab7c2e8bc03"],
Cell[518024, 9705, 519, 12, 26, "Message",ExpressionUUID->"85cc2318-e9e0-8d41-871d-b040892c71bf"],
Cell[518546, 9719, 824, 16, 26, "Message",ExpressionUUID->"4c6258c3-310e-8943-a252-3f387fb9ef3c"],
Cell[519373, 9737, 824, 16, 26, "Message",ExpressionUUID->"72f55be2-c4ed-e241-97b1-6aef1ba5a7d2"],
Cell[520200, 9755, 824, 16, 26, "Message",ExpressionUUID->"6bd97c2b-b03a-7049-ac1c-a4a190e4f61c"],
Cell[521027, 9773, 517, 12, 26, "Message",ExpressionUUID->"9800bf90-baa9-e34c-bc11-23b14147ce83"],
Cell[521547, 9787, 31721, 717, 410, "Output",ExpressionUUID->"08c1affc-f02e-1e43-b230-e11b8bbae5b3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553329, 10511, 235, 6, 67, "Chapter",ExpressionUUID->"59eb8cc0-528b-ff4c-8dee-bc59046eee48"],
Cell[CellGroupData[{
Cell[553589, 10521, 5400, 131, 452, "Input",ExpressionUUID->"8f16a319-b015-d94f-918f-c90a29c5240b"],
Cell[558992, 10654, 669, 11, 21, "Print",ExpressionUUID->"79d813c0-e691-0d43-9a1d-308cf73857f7"],
Cell[559664, 10667, 524, 8, 31, "Output",ExpressionUUID->"128736ec-9b0f-3f43-8c05-c4cd3042305a"],
Cell[560191, 10677, 740, 13, 21, "Print",ExpressionUUID->"7831e7ea-b490-cc40-afd9-54e5af1118ab"],
Cell[560934, 10692, 577, 10, 31, "Output",ExpressionUUID->"b970f02b-f7be-7344-9323-5718bc4ff543"],
Cell[561514, 10704, 12426, 307, 187, "Output",ExpressionUUID->"add882a5-530f-104c-95fe-c4f729d27743"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

